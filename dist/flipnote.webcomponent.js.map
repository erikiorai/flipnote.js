{"version":3,"file":"flipnote.webcomponent.js.map","sources":["../src/utils/ByteArray.ts","../src/utils/DataStream.ts","../src/utils/audio.ts","../src/utils/assert.ts","../src/utils/env.ts","../src/utils/nextPaint.ts","../src/utils/rsa.ts","../src/utils/datetime.ts","../src/utils/fsid.ts","../src/utils/saveData.ts","../src/parsers/FlipnoteParserBase.ts","../src/parsers/PpmParser.ts","../src/parsers/KwzParser.ts","../src/loaders/webUrlLoader.ts","../src/loaders/nodeUrlLoader.ts","../src/loaders/fileLoader.ts","../src/loaders/blobLoader.ts","../src/loaders/nodeBufferLoader.ts","../src/loaders/arrayBufferLoader.ts","../src/loaders/index.ts","../src/parseSource.ts","../src/player/PlayerEvent.ts","../src/player/playerUtils.ts","../src/renderers/CanvasInterface.ts","../node_modules/twgl.js/dist/4.x/twgl-full.module.js","../src/renderers/WebGlCanvas.ts","../src/renderers/Html5Canvas.ts","../src/renderers/UniversalCanvas.ts","../src/webaudio/WebAudioPlayer.ts","../src/player/Player.ts","../src/components/PlayerMixin.ts","../src/encoders/EncoderBase.ts","../src/encoders/LwzCompressor.ts","../src/encoders/GifImage.ts","../src/encoders/WavAudio.ts","../src/flipnote.ts","../node_modules/tslib/tslib.es6.js","../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/modify-template.js","../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/decorators.js","../node_modules/lit-element/lib/css-tag.js","../node_modules/lit-element/lit-element.js","../src/components/PlayerComponent.ts","../node_modules/lit-html/directives/class-map.js","../node_modules/lit-html/directives/style-map.js","../src/components/SliderComponent.ts","../node_modules/lit-html/directives/unsafe-svg.js","../src/components/IconComponent.ts","../src/components/ImageComponent.ts","../src/flipnote.webcomponent.ts"],"sourcesContent":["/** @internal */\nexport class ByteArray {\n\n  static pageSize = 2048;\n\n  private pageSize = ByteArray.pageSize;\n  private currPageIndex = -1;\n  private pages: Uint8Array[] = [];\n  private currPage: Uint8Array;\n  private pointer = 0;\n\n  constructor() {\n    this.newPage();\n  }\n  \n  private newPage() {\n    this.pages[++this.currPageIndex] = new Uint8Array(this.pageSize);\n    this.currPage = this.pages[this.currPageIndex];\n    this.pointer = 0;\n  }\n  \n  public getData() {\n    const data = new Uint8Array(this.currPageIndex * this.pageSize + this.pointer);\n    for (let index = 0; index < this.pages.length; index++) {\n      const page = this.pages[index];\n      if (index === this.currPageIndex)\n        data.set(page.slice(0, this.pointer), index * this.pageSize);\n      else\n        data.set(page, index * this.pageSize);\n    }\n    return data;\n  }\n\n  public getBuffer() {\n    const data = this.getData();\n    return data.buffer;\n  }\n  \n  public writeByte(val: number) {\n    if (this.pointer >= this.pageSize)\n      this.newPage();\n    this.currPage[this.pointer++] = val;\n  }\n\n  public writeBytes(bytes: Uint8Array | number[], offset?: number, length?: number) {\n    for (let l = length || bytes.length, i = offset || 0; i < l; i++)\n      this.writeByte(bytes[i]);\n  }\n}","/** @internal */\nexport const enum SeekOrigin {\n  Begin,\n  Current,\n  End\n};\n\n/** \n * Wrapper around the DataView API to keep track of the offset into the data\n * also provides some utils for reading ascii strings etc\n * @internal\n */\nexport class DataStream {\n\n  public buffer: ArrayBuffer;\n  public pointer: number;\n  private data: DataView;\n\n  constructor(arrayBuffer: ArrayBuffer) {\n    this.buffer = arrayBuffer;\n    this.data = new DataView(arrayBuffer);\n    this.pointer = 0;\n  }\n\n  get bytes() {\n    return new Uint8Array(this.buffer);\n  }\n\n  get byteLength() {\n    return this.data.byteLength;\n  }\n\n  public seek(offset: number, whence?: SeekOrigin) {\n    switch (whence) {\n      case SeekOrigin.End:\n        this.pointer = this.data.byteLength + offset;\n        break;\n      case SeekOrigin.Current:\n        this.pointer += offset;\n        break;\n      case SeekOrigin.Begin:\n      default:\n        this.pointer = offset;\n        break;\n    }\n  }\n\n  public readUint8() {\n    const val = this.data.getUint8(this.pointer);\n    this.pointer += 1;\n    return val;\n  }\n\n  public writeUint8(value: number) {\n    this.data.setUint8(this.pointer, value);\n    this.pointer += 1;\n  }\n\n  public readInt8() {\n    const val = this.data.getInt8(this.pointer);\n    this.pointer += 1;\n    return val;\n  }\n\n  public writeInt8(value: number) {\n    this.data.setInt8(this.pointer, value);\n    this.pointer += 1;\n  }\n\n  public readUint16(littleEndian: boolean=true) {\n    const val = this.data.getUint16(this.pointer, littleEndian);\n    this.pointer += 2;\n    return val;\n  }\n\n  public writeUint16(value: number, littleEndian: boolean=true) {\n    this.data.setUint16(this.pointer, value, littleEndian);\n    this.pointer += 2;\n  }\n\n  public readInt16(littleEndian: boolean=true) {\n    const val = this.data.getInt16(this.pointer, littleEndian);\n    this.pointer += 2;\n    return val;\n  }\n\n  public writeInt16(value: number, littleEndian: boolean=true) {\n    this.data.setInt16(this.pointer, value, littleEndian);\n    this.pointer += 2;\n  }\n\n  public readUint32(littleEndian: boolean=true) {\n    const val = this.data.getUint32(this.pointer, littleEndian);\n    this.pointer += 4;\n    return val;\n  }\n  \n  public writeUint32(value: number, littleEndian: boolean=true) {\n    this.data.setUint32(this.pointer, value, littleEndian);\n    this.pointer += 4;\n  }\n\n  public readInt32(littleEndian: boolean=true) {\n    const val = this.data.getInt32(this.pointer, littleEndian);\n    this.pointer += 4;\n    return val;\n  }\n\n  public writeInt32(value: number, littleEndian: boolean=true) {\n    this.data.setInt32(this.pointer, value, littleEndian);\n    this.pointer += 4;\n  }\n\n  public readBytes(count: number) {\n    const bytes = new Uint8Array(this.data.buffer, this.pointer, count);\n    this.pointer += bytes.byteLength;\n    return bytes;\n  }\n\n  public writeBytes(bytes: number[] | Uint8Array) {\n    bytes.forEach((byte: number) => this.writeUint8(byte));\n  }\n\n  public readHex(count: number, reverse: boolean=false) {\n    const bytes = this.readBytes(count);\n    let hex = [];\n    for (let i = 0; i < bytes.length; i++) {\n      hex.push(bytes[i].toString(16).padStart(2, '0'));\n    }\n    if (reverse)\n      hex.reverse();\n    return hex.join('').toUpperCase();\n  }\n\n  public readChars(count: number) {\n    const chars = this.readBytes(count);\n    let str = '';\n    for (let i = 0; i < chars.length; i++) {\n      const char = chars[i];\n      if (char === 0)\n        break;\n      str += String.fromCharCode(char);\n    }\n    return str;\n  }\n\n  public writeChars(string: string) {\n    for (let i = 0; i < string.length; i++) {\n      const char = string.charCodeAt(i);\n      this.writeUint8(char);\n    }\n  }\n\n  public readWideChars(count: number) {\n    const chars = new Uint16Array(this.data.buffer, this.pointer, count);\n    let str = '';\n    for (let i = 0; i < chars.length; i++) {\n      const char = chars[i];\n      if (char == 0)\n        break;\n      str += String.fromCharCode(char);\n    }\n    this.pointer += chars.byteLength;\n    return str;\n  }\n}","/** @internal */\nexport const ADPCM_INDEX_TABLE_2BIT = new Int8Array([\n  -1, 2, -1, 2\n]);\n\n/** @internal */\nexport const ADPCM_INDEX_TABLE_4BIT = new Int8Array([\n  -1, -1, -1, -1, 2, 4, 6, 8,\n  -1, -1, -1, -1, 2, 4, 6, 8\n]);\n\n/** @internal */\nexport const ADPCM_STEP_TABLE = new Int16Array([\n  7, 8, 9, 10, 11, 12, 13, 14, 16, 17,\n  19, 21, 23, 25, 28, 31, 34, 37, 41, 45,\n  50, 55, 60, 66, 73, 80, 88, 97, 107, 118,\n  130, 143, 157, 173, 190, 209, 230, 253, 279, 307,\n  337, 371, 408, 449, 494, 544, 598, 658, 724, 796,\n  876, 963, 1060, 1166, 1282, 1411, 1552, 1707, 1878, 2066,\n  2272, 2499, 2749, 3024, 3327, 3660, 4026, 4428, 4871, 5358,\n  5894, 6484, 7132, 7845, 8630, 9493, 10442, 11487, 12635, 13899,\n  15289, 16818, 18500, 20350, 22385, 24623, 27086, 29794, 32767, 0\n]);\n\n/** \n * Clamp a number n between l and h\n * @internal \n */\nexport function clamp(n: number, l: number, h: number) {\n  if (n < l)\n    return l;\n  if (n > h)\n    return h;\n  return n;\n}\n\n/** \n * Interpolate between a and b - returns a if fac = 0, b if fac = 1, and somewhere between if 0 < fac < 1\n * @internal\n */\nexport const lerp = (a: number, b: number, fac: number) => a + fac * (b - a);\n\n/** @internal */\nexport function pcmGetSample(src: Int16Array, srcSize: number, srcPtr: number) {\n  if (srcPtr < 0 || srcPtr >= srcSize)\n    return 0;\n  return src[srcPtr];\n}\n\n/** \n * Zero-order hold (nearest neighbour) audio interpolation\n * Credit to SimonTime for the original C version\n * @internal\n */\nexport function pcmResampleNearestNeighbour(src: Int16Array, srcFreq: number, dstFreq: number) {\n  const srcLength = src.length;\n  const srcDuration = srcLength / srcFreq;\n  const dstLength = srcDuration * dstFreq;\n  const dst = new Int16Array(dstLength);\n  const adjFreq = srcFreq / dstFreq;\n  for (let dstPtr = 0; dstPtr < dstLength; dstPtr++) {\n    dst[dstPtr] = pcmGetSample(src, srcLength, Math.floor(dstPtr * adjFreq));\n  }\n  return dst;\n}\n\n/** \n * Simple linear audio interpolation\n * @internal\n */\nexport function pcmResampleLinear(src: Int16Array, srcFreq: number, dstFreq: number) {\n  const srcLength = src.length;\n  const srcDuration = srcLength / srcFreq;\n  const dstLength = srcDuration * dstFreq;\n  const dst = new Int16Array(dstLength);\n  const adjFreq = srcFreq / dstFreq;\n  for (let dstPtr = 0, adj = 0, srcPtr = 0, weight = 0; dstPtr < dstLength; dstPtr++) {\n    adj = dstPtr * adjFreq;\n    srcPtr = Math.floor(adj);\n    weight = adj % 1;\n    dst[dstPtr] = lerp(\n      pcmGetSample(src, srcLength, srcPtr), \n      pcmGetSample(src, srcLength, srcPtr + 1), \n      weight  \n    );\n  }\n  return dst;\n}\n\n/** \n * Get a ratio of how many audio samples hit the pcm_s16_le clipping bounds\n * This can be used to detect corrupted audio\n * @internal\n */\nexport function pcmGetClippingRatio(src: Int16Array) {\n  const numSamples = src.length;\n  let numClippedSamples = 0;\n  for (let i = 0; i < numSamples; i++) {\n    const sample = src[i];\n    if (sample <= -32768 || sample >= 32767)\n      numClippedSamples += 1;\n  }\n  return numClippedSamples / numSamples;\n}\n\n/**\n * Get the root mean square of a PCM track\n * @internal\n */\nexport function pcmGetRms(src: Int16Array) {\n  const numSamples = src.length;\n  let rms = 0;\n  for (let i = 0; i < numSamples; i++) {\n    rms += Math.pow(src[i], 2);\n  }\n  return Math.sqrt(rms / numSamples);\n}","/**\n * Assert condition is true\n * @internal\n */\nexport function assert(condition: boolean, errMsg: string = 'Assert failed'): asserts condition {\n  if (!condition) {\n    console.trace(errMsg);\n    throw new Error(errMsg);\n  }\n}\n\n/**\n * Assert that a value exists\n * @internal\n */\nexport function assertExists<T>(value: T | null | undefined, name=''): T {\n  if (value === undefined || value === null)\n    throw new Error(`Missing object ${ name }`);\n  return value;\n}\n\n/**\n * Assert that a numberical value is between upper and lower bounds\n * @internal\n */\nexport function assertRange(value: number, min: number, max: number, name=''): asserts value {\n  assert(value >= min && value <= max, `${ name || 'value'} ${ value } should be between ${ min } and ${ max }`);\n}","import { assert } from './assert';\n\n/**\n * Webpack tries to replace inline calles to require() with polyfills, \n * but we don't want that, since we only use require to add extra features in NodeJs environments\n * \n * Ref: \n * https://github.com/TypeStrong/ts-loader/issues/595\n * Modified from:\n * https://github.com/getsentry/sentry-javascript/blob/bd35d7364191ebed994fb132ff31031117c1823f/packages/utils/src/misc.ts#L9-L11\n * https://github.com/getsentry/sentry-javascript/blob/89bca28994a0eaab9bc784841872b12a1f4a875c/packages/hub/src/hub.ts#L340\n * @internal\n */\nexport function dynamicRequire(nodeModule: NodeModule, path: string) {\n  try {\n    return nodeModule.require(path);\n  }\n  catch {\n    throw new Error(`Could not require(${path})`);\n  }\n}\n\n/**\n * Utils to find out information about the current code execution environment\n */\n\n/**\n * Is the code running in a browser environment?\n * @internal\n */\nexport const isBrowser = typeof window !== 'undefined' \n  && typeof window.document !== 'undefined';\n\n/**\n * Assert that the current environment should support browser APIs\n * @internal\n */\nexport function assertBrowserEnv() {\n  return assert(isBrowser, 'This feature is only available in browser environments');\n}\n\n/**\n * Is the code running in a Node environment?\n * @internal\n */\nexport const isNode = typeof process !== 'undefined'\n  && process.versions != null\n  && process.versions.node != null;\n\n/**\n * Assert that the current environment should support NodeJS APIs\n * @internal\n */\nexport function assertNodeEnv() {\n  return assert(isNode, 'This feature is only available in NodeJS environments');\n}\n\n// TODO: Deno support?\n\n/**\n * Is the code running in a Web Worker enviornment?\n * @internal\n */\nexport const isWebWorker = typeof self === 'object'\n  && self.constructor\n  && self.constructor.name === 'DedicatedWorkerGlobalScope';\n\n/**\n * Assert that the current environment should support NodeJS APIs\n * @internal\n */\nexport function assertWebWorkerEnv() {\n  return assert(isWebWorker, 'This feature is only available in WebWorker environments');\n}\n\n/**\n * Safely get global scope object\n * @internal\n */\nexport function getGlobalObject(): Window | NodeJS.Global | {} {\n  return isNode\n    ? global\n    : typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n    ? self\n    : {};\n}","import { isBrowser } from './env';\n\n/** @internal */\nconst raf = isBrowser && (window.requestAnimationFrame || window.webkitRequestAnimationFrame);\n\n/** @internal */\nexport function nextPaint(callback: Function) {\n  if (isBrowser)\n    raf(() => raf(() => callback()));\n  else\n    callback();\n}","import { isBrowser, isWebWorker, isNode, dynamicRequire, getGlobalObject } from './env';\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n * @internal\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n};\n\n/**\n * same SubtleCrypto API is available in browser and node, but in node it isn't global\n * @internal\n */\nconst SUBTLE_CRYPTO = ((): SubtleCrypto => {\n  if (isBrowser || isWebWorker) {\n    const global = getGlobalObject() as MsCryptoWindow;\n    return (global.crypto || global.msCrypto).subtle;\n  }\n  else if (isNode)\n    return dynamicRequire(module, 'crypto').webcrypto.subtle;\n})();\n\n/**\n * crypto algo used\n * @internal\n */\nconst ALGORITHM = 'RSASSA-PKCS1-v1_5';\n\n/**\n * @internal\n */\ntype HashType = 'SHA-1' | 'SHA-256'; // also available are 'SHA-384' and 'SHA-512', but flipnote doesnt use them...\n\n/**\n * @internal\n */\nexport async function rsaLoadPublicKey(pemKey: string, hashType: HashType) {\n  // remove PEM header and footer\n  const lines = pemKey\n    .split('\\n')\n    .filter(line => !line.startsWith('-----') && !line.endsWith('-----'))\n    .join('');\n  // base64 decode\n  const keyPlaintext = atob(lines);\n  // convert to byte array\n  const keyBytes = new Uint8Array(keyPlaintext.length)\n    .map((_, i) => keyPlaintext.charCodeAt(i));\n  // create cypto api key\n  return await SUBTLE_CRYPTO.importKey('spki', keyBytes.buffer, {\n    name: ALGORITHM,\n    hash: hashType,\n  }, false, ['verify']);\n}\n \n/**\n * @internal\n */\nexport async function rsaVerify(key: CryptoKey, signature: Uint8Array, data: Uint8Array) {\n  return await SUBTLE_CRYPTO.verify(ALGORITHM, key, signature, data);\n}","/**\n * Number of seconds between the UNIX timestamp epoch (jan 1 1970) and the Nintendo timestamp epoch (jan 1 2000)\n * @internal\n */\nconst UNIX_EPOCH_2000 = 946684800;\n\n/**\n * Convert a Nintendo DS or 3DS timestamp int to a JS Date object\n * @internal\n */\nexport function dateFromNintendoTimestamp(timestamp: number) {\n  return new Date((timestamp + UNIX_EPOCH_2000) * 1000);\n}\n\n/**\n * Get the duration (in seconds) of a number of framres running at a specified framerate\n * @internal\n */\nexport function timeGetNoteDuration(frameCount: number, framerate: number) {\n  // multiply and devide by 100 to get around floating precision issues\n  return ((frameCount * 100) * (1 / framerate)) / 100;\n}","/**\n * Flipnote region\n */\nexport enum FlipnoteRegion {\n  /** Europe and Oceania */\n  EUR = 'EUR',\n  /** Americas */\n  USA = 'USA',\n  /** Japan */\n  JPN = 'JPN',\n  /** Unidentified (possibly never used) */\n  UNKNOWN = 'UNKNOWN'\n};\n\n/**\n * Match an FSID from Flipnote Studio\n * e.g. 1440D700CEF78DA8\n * @internal\n */\nconst REGEX_PPM_FSID = /^[0159]{1}[0-9A-F]{6}0[0-9A-F]{8}$/;\n\n/**\n * Match an FSID from Flipnote Studio 3D\n * e.g. 003f-0b7e-82a6-fe0bda\n * @internal\n */\nconst REGEX_KWZ_FSID = /^[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{6}$/; \n\n/**\n * Match an FSID from a DSi Library note (PPM to KWZ conversion)\n * e.g. 10b8-b909-5180-9b2013\n * @internal\n */\nconst REGEX_KWZ_DSI_LIBRARY_FSID = /^(00|10|12|14)[0-9a-f]{2}-[0-9a-f]{4}-[0-9a-f]{3}0-[0-9a-f]{4}[0159]{1}[0-9a-f]{1}$/; \n\n/**\n * Indicates whether the input is a valid Flipnote Studio user ID\n */\nexport function isPpmFsid(fsid: string) {\n  // The only known exception to the FSID format is the one Nintendo used for their event notes (mario, zelda 25th, etc)\n  // This is likely a goof on their part\n  return fsid === '14E494E35A443235' || REGEX_PPM_FSID.test(fsid);\n}\n\n/**\n * Indicates whether the input is a valid Flipnote Studio 3D user ID\n */\nexport function isKwzFsid(fsid: string) {\n  return REGEX_KWZ_FSID.test(fsid);\n}\n\n/**\n * Indicates whether the input is a valid DSi Library user ID\n */\nexport function isKwzDsiLibraryFsid(fsid: string) {\n  // DSi Library eqiuvalent of the 14E494E35A443235 ID exception\n  return fsid.endsWith('3532445AE394E414') || REGEX_KWZ_DSI_LIBRARY_FSID.test(fsid);\n}\n\n/**\n * Indicates whether the input is a valid Flipnote Studio or Flipnote Studio 3D user ID\n */\nexport function isFsid(fsid: string) {\n  return isPpmFsid(fsid) || isKwzFsid(fsid);\n}\n\n/**\n * Get the region for any valid Flipnote Studio user ID\n */\nexport function getPpmFsidRegion(fsid: string) : FlipnoteRegion {\n  switch (fsid.charAt(0)) {\n    case '0':\n    case '1':\n      return FlipnoteRegion.JPN;\n    case '5':\n      return FlipnoteRegion.USA;\n    case '9':\n      return FlipnoteRegion.EUR;\n    default:\n      return FlipnoteRegion.UNKNOWN;\n  }\n}\n\n/**\n * Get the region for any valid Flipnote Studio 3D user ID\n */\nexport function getKwzFsidRegion(fsid: string): FlipnoteRegion {\n  if (isKwzDsiLibraryFsid(fsid)) {\n    switch (fsid.charAt(19)) {\n      case '0':\n      case '1':\n        return FlipnoteRegion.JPN;\n      case '5':\n        return FlipnoteRegion.USA;\n      case '9':\n        return FlipnoteRegion.EUR;\n      default:\n        return FlipnoteRegion.UNKNOWN;\n    }\n  }\n  switch (fsid.slice(0, 2)) {\n    case '00':\n      return FlipnoteRegion.JPN;\n    case '02':\n      return FlipnoteRegion.USA;\n    case '04':\n      return FlipnoteRegion.EUR;\n    default:\n      return FlipnoteRegion.UNKNOWN;\n  }\n}\n\n/**\n * Get the region for any valid Flipnote Studio or Flipnote Studio 3D user ID\n */\nexport function getFsidRegion(fsid: string): FlipnoteRegion {\n  if (isPpmFsid(fsid))\n    return getPpmFsidRegion(fsid);\n  else if (isKwzFsid(fsid))\n    return getKwzFsidRegion(fsid);\n  return FlipnoteRegion.UNKNOWN;\n}","import { isBrowser } from './env';\n\n/** @internal */\nexport const saveData = (function () {\n  if (!isBrowser) {\n    return function(){}\n  }\n  var a = document.createElement(\"a\");\n  // document.body.appendChild(a);\n  // a.style.display = \"none\";\n  return function (blob: Blob, filename:string) {\n    const url = window.URL.createObjectURL(blob);\n    a.href = url;\n    a.download = filename;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n})();\n","import { \n  assertRange,\n  DataStream,\n  FlipnoteRegion\n} from '../utils';\n\nexport { FlipnoteRegion } from '../utils';\n\n/** Identifies which animation format a Flipnote uses */\nexport enum FlipnoteFormat {\n  /** Animation format used by Flipnote Studio (Nintendo DSiWare) */\n  PPM = 'PPM',\n  /** Animation format used by Flipnote Studio 3D (Nintendo 3DS) */\n  KWZ = 'KWZ'\n};\n\n/** RGBA color */\nexport type FlipnotePaletteColor = [\n  /** Red (0 to 255) */\n  number,\n  /** Green (0 to 255) */\n  number,\n  /** Blue (0 to 255) */\n  number,\n  /** Alpha (0 to 255) */\n  number\n];\n\n/** Flipnote layer visibility */\nexport type FlipnoteLayerVisibility = Record<number, boolean>;\n\n/** Defines the colors used for a given Flipnote format */\nexport type FlipnotePaletteDefinition = Record<string, FlipnotePaletteColor>;\n\n/** Identifies a Flipnote audio track type */\nexport enum FlipnoteAudioTrack {\n  /** Background music track */\n  BGM,\n  /** Sound effect 1 track */\n  SE1,\n  /** Sound effect 2 track */\n  SE2,\n  /** Sound effect 3 track */\n  SE3,\n  /** Sound effect 4 track (only used by KWZ files) */\n  SE4\n};\n\n/** Contains data about a given audio track; it's file offset and length */\nexport interface FlipnoteAudioTrackInfo { ptr: number; length: number; };\n\n/** {@link FlipnoteAudioTrack}, but just sound effect tracks */\nexport enum FlipnoteSoundEffectTrack {\n  SE1 = FlipnoteAudioTrack.SE1,\n  SE2 = FlipnoteAudioTrack.SE2,\n  SE3 = FlipnoteAudioTrack.SE3,\n  SE4 = FlipnoteAudioTrack.SE4,\n};\n\n/** Flipnote sound flags, indicating which sound effect tracks are used on a given frame */\nexport type FlipnoteSoundEffectFlags = Record<FlipnoteSoundEffectTrack, boolean>;\n\n/**\n * Flipnote version info - provides details about a particular Flipnote version and its author\n */\nexport interface FlipnoteVersion {\n  /** Flipnote unique filename */\n  filename: string;\n  /** Author's username */\n  username: string;\n  /** Author's unique Flipnote Studio ID, formatted in the same way that it would appear on the app's settings screen */\n  fsid: string;\n  /** Author's region */\n  region: FlipnoteRegion;\n  /** KWZ only - sometimes DSi library notes incorrectly use the PPM filename format instead */\n  isDsiFilename?: boolean;\n};\n\n/**\n * Flipnote details\n */\nexport interface FlipnoteMeta {\n  /** File lock state. Locked Flipnotes cannot be edited by anyone other than the current author */\n  lock: boolean;\n  /** Playback loop state. If `true`, playback will loop once the end is reached */\n  loop: boolean;\n  /** Spinoffs are remixes of another user's Flipnote */\n  isSpinoff: boolean;\n  /** Total number of animation frames */\n  frameCount: number;\n  /** In-app frame playback speed */\n  frameSpeed: number;\n  /** Index of the animation frame used as the Flipnote's thumbnail image */\n  thumbIndex: number;\n  /** Date representing when the file was last edited */\n  timestamp: Date;\n  /** Flipnote duration measured in seconds, assuming normal playback speed */\n  duration: number;\n  /** Metadata about the author of the original Flipnote file */\n  root: FlipnoteVersion;\n  /** Metadata about the previous author of the Flipnote file */\n  parent: FlipnoteVersion;\n  /** Metadata about the current author of the Flipnote file */\n  current: FlipnoteVersion;\n};\n\n/** \n * Base Flipnote parser class\n * \n * This doesn't implement any parsing functionality itself, \n * it just provides a consistent API for every format parser to implement.\n * @category File Parser\n*/\nexport abstract class FlipnoteParserBase extends DataStream {\n\n  /** Static file format info */\n\n  /** File format type */\n  static format: FlipnoteFormat;\n  /** Animation frame width */\n  static frameWidth: number;\n  /** Animation frame height */\n  static frameHeight: number;\n  /** Number of animation frame layers */\n  static numLayers: number;\n  /** Number of colors per layer (aside from transparent) */\n  static numLayerColors: number;\n  /** Which audio tracks are available in this format */\n  static audioTracks: FlipnoteAudioTrack[];\n  /** Which sound effect tracks are available in this format */\n  static soundEffectTracks: FlipnoteSoundEffectTrack[];\n  /** Audio track base sample rate */\n  static rawSampleRate: number;\n  /** Audio output sample rate */\n  static sampleRate: number;\n  /** Global animation frame color palette */\n  static globalPalette: FlipnotePaletteColor[];\n\n  /** Instance file format info */\n\n  /** Custom object tag */\n  public [Symbol.toStringTag] = 'Flipnote';\n  /** File format type, reflects {@link FlipnoteParserBase.format} */\n  public format: FlipnoteFormat;\n  /** Default formats used for {@link getTitle()} */\n  public titleFormats = {\n    COMMENT: 'Comment by $USERNAME',\n    FLIPNOTE: 'Flipnote by $USERNAME',\n    ICON: 'Folder icon'\n  };\n  /** Animation frame width, reflects {@link FlipnoteParserBase.width} */\n  public imageWidth: number;\n  /** Animation frame height, reflects {@link FlipnoteParserBase.height} */\n  public imageHeight: number;\n  /** X offset for the top-left corner of the animation frame */\n  public imageOffsetX: number;\n  /** Y offset for the top-left corner of the animation frame */\n  public imageOffsetY: number;\n  /** Number of animation frame layers, reflects {@link FlipnoteParserBase.numLayers} */\n  public numLayers: number;\n  /** Number of colors per layer (aside from transparent), reflects {@link FlipnoteParserBase.numLayerColors} */\n  public numLayerColors: number;\n  /** @internal */\n  public srcWidth: number;\n  /** Which audio tracks are available in this format, reflects {@link FlipnoteParserBase.audioTracks} */\n  public audioTracks: FlipnoteAudioTrack[];\n  /** Which sound effect tracks are available in this format, reflects {@link FlipnoteParserBase.soundEffectTracks} */\n  public soundEffectTracks: FlipnoteSoundEffectTrack[];\n  /** Audio track base sample rate, reflects {@link FlipnoteParserBase.rawSampleRate} */\n  public rawSampleRate: number;\n  /** Audio output sample rate, reflects {@link FlipnoteParserBase.sampleRate} */\n  public sampleRate: number;\n  /** Global animation frame color palette, reflects {@link FlipnoteParserBase.globalPalette} */\n  public globalPalette: FlipnotePaletteColor[];\n  /** Flipnote palette */\n  public palette: FlipnotePaletteDefinition;\n  /** File metadata, see {@link FlipnoteMeta} for structure */\n  public meta: FlipnoteMeta;\n  /** File audio track info, see {@link FlipnoteAudioTrackInfo} */\n  public soundMeta: Map<FlipnoteAudioTrack, FlipnoteAudioTrackInfo>;\n  /** Animation frame global layer visibility */\n  public layerVisibility: FlipnoteLayerVisibility = {1: true, 2: true, 3: true};\n\n  /** Instance-unique info */\n\n  /** Spinoffs are remixes of another user's Flipnote */\n  public isSpinoff: boolean;\n  /** (KWZ only) Indicates whether or not this file is a Flipnote Studio 3D folder icon */\n  public isFolderIcon: boolean = false;\n  /** (KWZ only) Indicates whether or not this file is a handwritten comment from Flipnote Gallery World */\n  public isComment: boolean = false;\n  /** (KWZ only) Indicates whether or not this Flipnote is a PPM to KWZ conversion from Flipnote Studio 3D's DSi Library service */\n  public isDsiLibraryNote: boolean = false;\n  /** Animation frame count */\n  public frameCount: number;\n  /** In-app animation playback speed */\n  public frameSpeed: number;\n  /** Animation duration, in seconds */\n  public duration: number;\n  /** In-app animation playback speed when the BGM track was recorded */\n  public bgmSpeed: number;\n  /** Animation framerate, measured as frames per second */\n  public framerate: number;\n  /** Animation framerate when the BGM track was recorded, measured as frames per second */\n  public bgmrate: number;\n  /** Index of the animation frame used as the Flipnote's thumbnail image */\n  public thumbFrameIndex: number;\n  /** Get the amount of clipping in the master audio track, useful for determining if a Flipnote's audio is corrupted. Closer to 1.0 = more clipping. Only available after {@link getAudioMasterPcm} has been called */\n  public audioClipRatio: number;\n\n  /**\n   * Get file default title - e.g. \"Flipnote by Y\", \"Comment by X\", etc. \n   * A format object can be passed for localisation, where `$USERNAME` gets replaced by author name:\n   * ```js\n   * {\n   *  COMMENT: 'Comment by $USERNAME',\n   *  FLIPNOTE: 'Flipnote by $USERNAME',\n   *  ICON: 'Folder icon'\n   * }\n   * ```\n   * @category Utility\n   */\n  public getTitle(formats = this.titleFormats) {\n    if (this.isFolderIcon)\n      return formats.ICON;\n    const title = this.isComment ? formats.COMMENT : formats.FLIPNOTE;\n    return title.replace('$USERNAME', this.meta.current.username);\n  }\n\n  /**\n   * Returns the Flipnote title when casting a parser instance to a string\n   * \n   * ```js\n   * const str = 'Title: ' + note;\n   * // str === 'Title: Flipnote by username'\n   * ```\n   * @category Utility\n   */\n  public toString() {\n    return this.getTitle();\n  }\n\n  /**\n   * Allows for frame index iteration when using the parser instance as a for..of iterator\n   * \n   * ```js\n   * for (const frameIndex of note) {\n   *   // do something with frameIndex...\n   * }\n   * ```\n   * @category Utility\n   */\n  public *[Symbol.iterator]() {\n    for (let i = 0; i < this.frameCount; i++)\n      yield i;\n  }\n\n  /** \n   * Decode a frame, returning the raw pixel buffers for each layer\n   * @category Image\n  */\n  abstract decodeFrame(frameIndex: number): Uint8Array[];\n\n  /** \n   * Get the pixels for a given frame layer, as palette indices\n   * NOTE: layerIndex are not guaranteed to be sorted by 3D depth in KWZs, use {@link getFrameLayerOrder} to get the correct sort order first\n   * NOTE: if the visibility flag for this layer is turned off, the result will be empty\n   * @category Image\n  */\n  public getLayerPixels(\n    frameIndex: number,\n    layerIndex: number,\n    imageBuffer = new Uint8Array(this.imageWidth * this.imageHeight)\n  ) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    assertRange(layerIndex, 0, this.numLayers - 1, 'Layer index');\n    // palette\n    const palette = this.getFramePaletteIndices(frameIndex);\n    const palettePtr = layerIndex * this.numLayerColors;\n    // raw pixels\n    const layers = this.decodeFrame(frameIndex);\n    const layerBuffer = layers[layerIndex];\n    // image dimensions and crop\n    const srcStride = this.srcWidth;\n    const width = this.imageWidth;\n    const height = this.imageHeight;\n    const xOffs = this.imageOffsetX;\n    const yOffs = this.imageOffsetY;\n    // clear image buffer before writing\n    imageBuffer.fill(0);\n    // handle layer visibility by returning a blank image if the layer is invisible\n    if (!this.layerVisibility[layerIndex + 1])\n      return imageBuffer;\n    // convert to palette indices and crop\n    for (let srcY = yOffs, dstY = 0; dstY < height; srcY++, dstY++) {\n      for (let srcX = xOffs, dstX = 0; dstX < width; srcX++, dstX++) {\n        const srcPtr = srcY * srcStride + srcX;\n        const dstPtr = dstY * width + dstX;\n        let pixel = layerBuffer[srcPtr];\n        if (pixel !== 0) imageBuffer[dstPtr] = palette[palettePtr + pixel];\n      }\n    }\n    return imageBuffer;\n  }\n\n  /** \n   * Get the pixels for a given frame layer, as RGBA pixels\n   * NOTE: layerIndex are not guaranteed to be sorted by 3D depth in KWZs, use {@link getFrameLayerOrder} to get the correct sort order first\n   * NOTE: if the visibility flag for this layer is turned off, the result will be empty\n   * @category Image\n  */\n  public getLayerPixelsRgba(\n    frameIndex: number,\n    layerIndex: number,\n    imageBuffer = new Uint32Array(this.imageWidth * this.imageHeight),\n    paletteBuffer = new Uint32Array(16)\n  ) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    assertRange(layerIndex, 0, this.numLayers - 1, 'Layer index');\n    // palette\n    this.getFramePaletteUint32(frameIndex, paletteBuffer);\n    const palettePtr = layerIndex * this.numLayerColors;\n    // raw pixels\n    const layers = this.decodeFrame(frameIndex);\n    const layerBuffer = layers[layerIndex];\n    // image dimensions and crop\n    const srcStride = this.srcWidth;\n    const width = this.imageWidth;\n    const height = this.imageHeight;\n    const xOffs = this.imageOffsetX;\n    const yOffs = this.imageOffsetY;\n    // clear image buffer before writing\n    imageBuffer.fill(paletteBuffer[0]);\n    // handle layer visibility by returning a blank image if the layer is invisible\n    if (!this.layerVisibility[layerIndex + 1])\n      return imageBuffer;\n    // convert to palette indices and crop\n    for (let srcY = yOffs, dstY = 0; dstY < height; srcY++, dstY++) {\n      for (let srcX = xOffs, dstX = 0; dstX < width; srcX++, dstX++) {\n        const srcPtr = srcY * srcStride + srcX;\n        const dstPtr = dstY * width + dstX;\n        let pixel = layerBuffer[srcPtr];\n        if (pixel !== 0) imageBuffer[dstPtr] = paletteBuffer[palettePtr + pixel];\n      }\n    }\n    return imageBuffer;\n  }\n\n  /** \n   * Get the layer draw order for a given frame\n   * @category Image\n  */\n  abstract getFrameLayerOrder(frameIndex: number): number[];\n\n  /** \n   * Get the image for a given frame, as palette indices\n   * @category Image\n  */\n  public getFramePixels(\n    frameIndex: number,\n    imageBuffer = new Uint8Array(this.imageWidth * this.imageHeight)\n  ) {\n    // image dimensions and crop\n    const srcStride = this.srcWidth;\n    const width = this.imageWidth;\n    const height = this.imageHeight;\n    const xOffs = this.imageOffsetX;\n    const yOffs = this.imageOffsetY;\n    // palette\n    const palette = this.getFramePaletteIndices(frameIndex);\n    // clear framebuffer with paper color\n    imageBuffer.fill(palette[0]);\n    // get layer info + decode into buffers\n    const layerOrder = this.getFrameLayerOrder(frameIndex);\n    const layers = this.decodeFrame(frameIndex);\n    // merge layers into framebuffer\n    for (let i = 0; i < this.numLayers; i++) {\n      const layerIndex = layerOrder[i];\n      const layerBuffer = layers[layerIndex];\n      const palettePtr = layerIndex * this.numLayerColors;\n      // skip if layer is not visible\n      if (!this.layerVisibility[layerIndex + 1])\n        continue;\n      // merge layer into rgb buffer\n      for (let srcY = yOffs, dstY = 0; dstY < height; srcY++, dstY++) {\n        for (let srcX = xOffs, dstX = 0; dstX < width; srcX++, dstX++) {\n          const srcPtr = srcY * srcStride + srcX;\n          const dstPtr = dstY * width + dstX;\n          let pixel = layerBuffer[srcPtr];\n          if (pixel !== 0) imageBuffer[dstPtr] = palette[palettePtr + pixel];\n        }\n      }\n    }\n    return imageBuffer;\n  }\n\n\n  /**\n   * Get the image for a given frame as an uint32 array of RGBA pixels\n   * @category Image\n   */\n  public getFramePixelsRgba(\n    frameIndex: number,\n    imageBuffer = new Uint32Array(this.imageWidth * this.imageHeight),\n    paletteBuffer = new Uint32Array(16)\n  ) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    // image dimensions and crop\n    const srcStride = this.srcWidth;\n    const width = this.imageWidth;\n    const height = this.imageHeight;\n    const xOffs = this.imageOffsetX;\n    const yOffs = this.imageOffsetY;\n    // palette\n    this.getFramePaletteUint32(frameIndex, paletteBuffer);\n    // clear framebuffer with paper color\n    imageBuffer.fill(paletteBuffer[0]);\n    // get layer info + decode into buffers\n    const layerOrder = this.getFrameLayerOrder(frameIndex);\n    const layers = this.decodeFrame(frameIndex);\n    // merge layers into framebuffer\n    for (let i = 0; i < this.numLayers; i++) {\n      const layerIndex = layerOrder[i];\n      const layerBuffer = layers[layerIndex];\n      const palettePtr = layerIndex * this.numLayerColors;\n      // skip if layer is not visible\n      if (!this.layerVisibility[layerIndex + 1])\n        continue;\n      // merge layer into rgb buffer\n      for (let srcY = yOffs, dstY = 0; dstY < height; srcY++, dstY++) {\n        for (let srcX = xOffs, dstX = 0; dstX < width; srcX++, dstX++) {\n          const srcPtr = srcY * srcStride + srcX;\n          const dstPtr = dstY * width + dstX;\n          let pixel = layerBuffer[srcPtr];\n          if (pixel !== 0) imageBuffer[dstPtr] = paletteBuffer[palettePtr + pixel];\n        }\n      }\n    }\n    return imageBuffer;\n  }\n\n  /** \n   * Get the color palette indices for a given frame. RGBA colors for these values can be indexed from {@link FlipnoteParserBase.globalPalette}\n   * @category Image\n  */\n  abstract getFramePaletteIndices(frameIndex: number): number[];\n  \n  /** \n   * Get the color palette for a given frame, as a list of `[r,g,b,a]` colors\n   * @category Image\n  */\n  abstract getFramePalette(frameIndex: number): FlipnotePaletteColor[];\n\n  /** \n   * Get the color palette for a given frame, as an uint32 array\n   * @category Image\n  */\n  public getFramePaletteUint32(\n    frameIndex: number,\n    paletteBuffer = new Uint32Array(16)\n  ) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    const colors = this.getFramePalette(frameIndex);\n    paletteBuffer.fill(0);\n    colors.forEach(([r, g, b, a], i) => paletteBuffer[i] = (a << 24) | (b << 16) | (g << 8) | r);\n    return paletteBuffer;\n  }\n\n  /** \n   * Get the sound effect flags for every frame in the Flipnote\n   * @category Audio\n  */\n  abstract decodeSoundFlags(): boolean[][];\n\n  /**\n   * Get the sound effect usage flags for every frame\n   * @category Audio\n   */\n  public abstract getSoundEffectFlags(): FlipnoteSoundEffectFlags[];\n\n  /**\n   * Get the sound effect usage flags for a given frame\n   * @category Audio\n   */\n  public abstract getFrameSoundEffectFlags(frameIndex: number): FlipnoteSoundEffectFlags;\n\n  /**\n   * Get the usage flags for a given track accross every frame\n   * @returns an array of booleans for every frame, indicating whether the track is used on that frame\n   * @category Audio\n   */\n  public getSoundEffectFlagsForTrack(trackId: FlipnoteSoundEffectTrack) {\n    return this.getSoundEffectFlags().map(frammeFlags => frammeFlags[trackId]);\n  };\n\n  /**\n   * Is a given track used on a given frame\n   * @category Audio\n   */\n  public isSoundEffectUsedOnFrame(trackId: FlipnoteSoundEffectTrack, frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    if (!this.soundEffectTracks.includes(trackId))\n      return false;\n    return this.getFrameSoundEffectFlags(frameIndex)[trackId];\n  }\n\n  /** \n   * Does an audio track exist in the Flipnote?\n   * @returns boolean\n   * @category Audio\n  */\n  public hasAudioTrack(trackId: FlipnoteAudioTrack): boolean {\n    return this.soundMeta.has(trackId) && this.soundMeta.get(trackId).length > 0;\n  }\n\n  /** \n   * Get the raw compressed audio data for a given track\n   * @returns byte array\n   * @category Audio\n  */\n  abstract getAudioTrackRaw(trackId: FlipnoteAudioTrack): Uint8Array;\n\n  /** \n   * Get the decoded audio data for a given track, using the track's native samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  abstract decodeAudioTrack(trackId: FlipnoteAudioTrack): Int16Array;\n\n  /** \n   * Get the decoded audio data for a given track, using the specified samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  abstract getAudioTrackPcm(trackId: FlipnoteAudioTrack, sampleRate?: number): Int16Array;\n\n  /** \n   * Get the full mixed audio for the Flipnote, using the specified samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  abstract getAudioMasterPcm(sampleRate?: number): Int16Array;\n\n  /**\n   * Get the body of the Flipnote - the data that is digested for computing the signature\n   * @returns content data as Uint8Array\n   * @category Verification\n   */\n  abstract getBody(): Uint8Array;\n\n  /**\n   * Get the Flipnote's signature data\n   * @returns signature data as Uint8Array\n   * @category Verification\n   */\n  abstract getSignature(): Uint8Array;\n\n  /**\n   * Verify whether this Flipnote's signature is valid\n   * @async\n   * @returns boolean\n   * @category Verification\n   */\n  abstract verify(): Promise<boolean>;\n}","/**\n * PPM decoder\n * Reads frames, audio, and metadata from Flipnote Studio PPM files \n * Based on my Python PPM decoder implementation (https://github.com/jaames/flipnote-tools)\n *  \n * Credits:\n *  PPM format reverse-engineering and documentation:\n *   - bricklife (http://ugomemo.g.hatena.ne.jp/bricklife/20090307/1236391313)\n *   - mirai-iro (http://mirai-iro.hatenablog.jp/entry/20090116/ugomemo_ppm)\n *   - harimau_tigris (http://ugomemo.g.hatena.ne.jp/harimau_tigris)\n *   - steven (http://www.dsibrew.org/wiki/User:Steven)\n *   - yellows8 (http://www.dsibrew.org/wiki/User:Yellows8)\n *   - PBSDS (https://github.com/pbsds)\n *   - jaames (https://github.com/jaames)\n *  Identifying the PPM sound codec:\n *   - Midmad from Hatena Haiku\n *   - WDLMaster from hcs64.com\n *  Helping me to identify issues with the Python decoder that this is based on:\n *   - Austin Burk (https://sudomemo.net)\n * \n *  Lastly, a huge thanks goes to Nintendo for creating Flipnote Studio, \n *  and to Hatena for providing the Flipnote Hatena online service, both of which inspired so many c:\n*/\n\nimport { \n  FlipnoteFormat,\n  FlipnotePaletteDefinition,\n  FlipnoteAudioTrack,\n  FlipnoteSoundEffectTrack,\n  FlipnoteSoundEffectFlags,\n  FlipnoteMeta,\n  FlipnoteParserBase\n} from './FlipnoteParserBase';\n\nimport {\n  ADPCM_INDEX_TABLE_4BIT,\n  ADPCM_STEP_TABLE,\n  clamp,\n  pcmResampleNearestNeighbour,\n  pcmGetClippingRatio,\n  assert,\n  assertRange,\n  dateFromNintendoTimestamp,\n  timeGetNoteDuration,\n  getPpmFsidRegion,\n  rsaLoadPublicKey,\n  rsaVerify\n} from '../utils';\n\n/** \n * PPM framerates in frames per second, indexed by the in-app frame speed.\n * Frame speed 0 is never noramally used\n */\nconst PPM_FRAMERATES = [0.5, 0.5, 1, 2, 4, 6, 12, 20, 30];\n\n/** \n * PPM color defines (red, green, blue, alpha)\n */\nconst PPM_PALETTE: FlipnotePaletteDefinition = {\n  WHITE: [0xff, 0xff, 0xff, 0xff],\n  BLACK: [0x0e, 0x0e, 0x0e, 0xff],\n  RED:   [0xff, 0x2a, 0x2a, 0xff],\n  BLUE:  [0x0a, 0x39, 0xff, 0xff]\n};\n\n/**\n * RSA public key used to verify that the PPM file signature is genuine.\n * \n * This **cannot** be used to resign Flipnotes, it can only verify that they are valid\n */\nconst PPM_PUBLIC_KEY: string = `-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDCPLwTL6oSflv+gjywi/sM0TUB\n90xqOvuCpjduETjPoN2FwMebxNjdKIqHUyDu4AvrQ6BDJc6gKUbZ1E27BGZoCPH4\n9zQRb+zAM6M9EjHwQ6BABr0u2TcF7xGg2uQ9MBWz9AfbVQ91NjfrNWo0f7UPmffv\n1VvixmTk1BCtavZxBwIDAQAB\n-----END PUBLIC KEY-----`;\n\n/** \n * PPM file metadata, stores information about its playback, author details, etc\n */\nexport interface PpmMeta extends FlipnoteMeta {\n  /** In-app frame playback speed when the BGM audio track was recorded */\n  bgmSpeed: number;\n};\n\n/**\n * PPM parser options for enabling optimisations and other extra features.\n * None are currently implemented\n */\nexport type PpmParserSettings = {};\n\n/**\n * Parser class for (DSiWare) Flipnote Studio's PPM animation format.\n * \n * Format docs: https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format\n * @category File Parser\n */\nexport class PpmParser extends FlipnoteParserBase {\n\n  /** Default PPM parser settings */\n  static defaultSettings: PpmParserSettings = {};\n  /** File format type */\n  static format = FlipnoteFormat.PPM;\n  /** Animation frame width */\n  static width = 256;\n  /** Animation frame height */\n  static height = 192;\n  /** Number of animation frame layers */\n  static numLayers = 2;\n  /** Number of colors per layer (aside from transparent) */\n  static numLayerColors = 1;\n  /** Audio track base sample rate */\n  static rawSampleRate = 8192;\n  /** Nintendo DSi audio output rate */\n  static sampleRate = 32768;\n  /** Which audio tracks are available in this format */\n  static audioTracks = [\n    FlipnoteAudioTrack.BGM,\n    FlipnoteAudioTrack.SE1,\n    FlipnoteAudioTrack.SE2,\n    FlipnoteAudioTrack.SE3\n  ];\n  /** Which sound effect tracks are available in this format */\n  static soundEffectTracks = [\n    FlipnoteSoundEffectTrack.SE1,\n    FlipnoteSoundEffectTrack.SE2,\n    FlipnoteSoundEffectTrack.SE3,\n  ];\n  /** Global animation frame color palette */\n  static globalPalette = [\n    PPM_PALETTE.WHITE,\n    PPM_PALETTE.BLACK,\n    PPM_PALETTE.RED,\n    PPM_PALETTE.BLUE\n  ];\n\n  /** File format type, reflects {@link PpmParser.format} */\n  public format = FlipnoteFormat.PPM;\n  /** Custom object tag */\n  public [Symbol.toStringTag] = 'Flipnote Studio PPM animation file';\n  /** Animation frame width, reflects {@link PpmParser.width} */\n  public imageWidth = PpmParser.width;\n  /** Animation frame height, reflects {@link PpmParser.height} */\n  public imageHeight = PpmParser.height;\n  /** X offset for the top-left corner of the animation frame */\n  public imageOffsetX = 0;\n  /** Y offset for the top-left corner of the animation frame */\n  public imageOffsetY = 0;\n  /** Number of animation frame layers, reflects {@link PpmParser.numLayers} */\n  public numLayers = PpmParser.numLayers;\n  /** Number of colors per layer (aside from transparent), reflects {@link PpmParser.numLayerColors} */\n  public numLayerColors = PpmParser.numLayerColors;\n  /** @internal */\n  public srcWidth = PpmParser.width;\n  /** Which audio tracks are available in this format, reflects {@link PpmParser.audioTracks} */\n  public audioTracks = PpmParser.audioTracks;\n  /** Which sound effect tracks are available in this format, reflects {@link PpmParser.soundEffectTracks} */\n  public soundEffectTracks = PpmParser.soundEffectTracks;\n  /** Audio track base sample rate, reflects {@link PpmParser.rawSampleRate} */\n  public rawSampleRate = PpmParser.rawSampleRate;\n  /** Audio output sample rate, reflects {@link PpmParser.sampleRate} */\n  public sampleRate = PpmParser.sampleRate;\n  /** Global animation frame color palette, reflects {@link PpmParser.globalPalette} */\n  public globalPalette = PpmParser.globalPalette;\n  /** File metadata, see {@link PpmMeta} for structure */\n  public meta: PpmMeta;\n  /** File format version; always the same as far as we know */\n  public version: number;\n\n  private layerBuffers: [Uint8Array, Uint8Array];\n  private soundFlags: boolean[][];\n  private prevLayerBuffers: [Uint8Array, Uint8Array];\n  private lineEncodingBuffers: [Uint8Array, Uint8Array];\n  private prevDecodedFrame: number = null;\n  private frameDataLength: number;\n  private soundDataLength: number;\n  private soundDataOffset: number;\n  private frameOffsets: Uint32Array;\n\n  /**\n   * Create a new PPM file parser instance\n   * @param arrayBuffer an ArrayBuffer containing file data\n   * @param settings parser settings (none currently implemented)\n   */\n  constructor(arrayBuffer: ArrayBuffer, settings: Partial<PpmParserSettings> = {}) {\n    super(arrayBuffer);\n    this.decodeHeader();\n    this.decodeAnimationHeader();\n    this.decodeSoundHeader();\n    // this is always true afaik, it's likely just a remnant from development\n    // doesn't hurt to be accurate though...\n    if (((this.version >> 4) & 0xf) !== 0) {\n      this.decodeMeta();\n    }\n    // create image buffers\n    this.layerBuffers = [\n      new Uint8Array(PpmParser.width * PpmParser.height),\n      new Uint8Array(PpmParser.width * PpmParser.height)\n    ];\n    this.prevLayerBuffers = [\n      new Uint8Array(PpmParser.width * PpmParser.height),\n      new Uint8Array(PpmParser.width * PpmParser.height)\n    ];\n    this.lineEncodingBuffers = [\n      new Uint8Array(PpmParser.height),\n      new Uint8Array(PpmParser.height)\n    ];\n    this.prevDecodedFrame = null;\n  }\n\n  private decodeHeader() {\n    assert(16 < this.byteLength);\n    this.seek(4);\n    // decode header\n    // https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format#header\n    this.frameDataLength = this.readUint32();\n    this.soundDataLength = this.readUint32();\n    this.frameCount = this.readUint16() + 1;\n    this.version = this.readUint16();\n    // sound data offset = frame data offset + frame data length + sound effect flags\n    let soundDataOffset = 0x06A0 + this.frameDataLength + this.frameCount;\n    if (soundDataOffset % 4 !== 0) soundDataOffset += 4 - (soundDataOffset % 4);\n    assert(soundDataOffset < this.byteLength);\n    this.soundDataOffset = soundDataOffset;\n  }\n\n  private readFilename() {\n    const mac = this.readHex(3);\n    const random = this.readChars(13);\n    const edits = this.readUint16().toString().padStart(3, '0');\n    return `${ mac }_${ random }_${ edits }`;\n  }\n\n  private decodeMeta() {\n    // https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format#metadata\n    assert(0x06A8 < this.byteLength);\n    this.seek(0x10);\n    const lock = this.readUint16();\n    const thumbIndex = this.readInt16();\n    const rootAuthorName = this.readWideChars(11);\n    const parentAuthorName = this.readWideChars(11);\n    const currentAuthorName = this.readWideChars(11);\n    const parentAuthorId = this.readHex(8, true);\n    const currentAuthorId = this.readHex(8, true);\n    const parentFilename = this.readFilename();\n    const currentFilename = this.readFilename();\n    const rootAuthorId = this.readHex(8, true);\n    this.seek(0x9A);\n    const timestamp = dateFromNintendoTimestamp(this.readInt32());\n    this.seek(0x06A6);\n    const flags = this.readUint16();\n    this.thumbFrameIndex = thumbIndex;\n    this.layerVisibility = {\n      1: (flags & 0x10) === 0,\n      2: (flags & 0x20) === 0,\n      3: false\n    };\n    this.isSpinoff = (currentAuthorId !== parentAuthorId) || (currentAuthorId !== rootAuthorId);\n    this.meta = {\n      lock: lock === 1,\n      loop: (flags >> 1 & 0x1) === 1,\n      isSpinoff: this.isSpinoff,\n      frameCount: this.frameCount,\n      frameSpeed: this.frameSpeed,\n      bgmSpeed: this.bgmSpeed,\n      duration: this.duration,\n      thumbIndex: thumbIndex,\n      timestamp: timestamp,\n      root: {\n        username: rootAuthorName,\n        fsid: rootAuthorId,\n        region: getPpmFsidRegion(rootAuthorId),\n        filename: null\n      },\n      parent: {\n        username: parentAuthorName,\n        fsid: parentAuthorId,\n        region: getPpmFsidRegion(parentAuthorId),\n        filename: parentFilename\n      },\n      current: {\n        username: currentAuthorName,\n        fsid: currentAuthorId,\n        region: getPpmFsidRegion(currentAuthorId),\n        filename: currentFilename\n      },\n    };\n  }\n\n  private decodeAnimationHeader() {\n    // jump to the start of the animation data section\n    // https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format#animation-header\n    this.seek(0x06A0);\n    const offsetTableLength = this.readUint16();\n    const numOffsets = offsetTableLength / 4;\n    assert(numOffsets <= this.frameCount);\n    // skip padding + flags\n    this.seek(0x06A8);\n    // read frame offsets and build them into a table\n    const frameOffsets = new Uint32Array(numOffsets);\n    for (let n = 0; n < numOffsets; n++) {\n      const ptr = 0x06A8 + offsetTableLength + this.readUint32();\n      assert(ptr < this.byteLength, `Frame ${ n } pointer is out of bounds`);\n      frameOffsets[n] = ptr;\n    }\n    this.frameOffsets = frameOffsets;\n  }\n\n  private decodeSoundHeader() {\n    // https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format#sound-header\n    let ptr = this.soundDataOffset;\n    this.seek(ptr);\n    const bgmLen = this.readUint32();\n    const se1Len = this.readUint32();\n    const se2Len = this.readUint32();\n    const se3Len = this.readUint32();\n    this.frameSpeed = 8 - this.readUint8();\n    this.bgmSpeed = 8 - this.readUint8();\n    assert(this.frameSpeed <= 8 && this.bgmSpeed <= 8);\n    ptr += 32;\n    this.framerate = PPM_FRAMERATES[this.frameSpeed];\n    this.duration = timeGetNoteDuration(this.frameCount, this.framerate);\n    this.bgmrate = PPM_FRAMERATES[this.bgmSpeed];\n    const soundMeta = new Map();\n    soundMeta.set(FlipnoteAudioTrack.BGM, {ptr: ptr,           length: bgmLen});\n    soundMeta.set(FlipnoteAudioTrack.SE1, {ptr: ptr += bgmLen, length: se1Len});\n    soundMeta.set(FlipnoteAudioTrack.SE2, {ptr: ptr += se1Len, length: se2Len});\n    soundMeta.set(FlipnoteAudioTrack.SE3, {ptr: ptr += se2Len, length: se3Len});\n    this.soundMeta = soundMeta;\n  }\n\n  private isNewFrame(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameOffsets[frameIndex]);\n    const header = this.readUint8();\n    return (header >> 7) & 0x1;\n  }\n  \n  /** \n   * Decode a frame, returning the raw pixel buffers for each layer\n   * @category Image\n  */\n  public decodeFrame(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    // return existing layer buffers if no new frame has been decoded since the last call\n    if (this.prevDecodedFrame === frameIndex)\n      return this.layerBuffers;\n    // decode prev frame if nevessary for diffing\n    if (this.prevDecodedFrame !== frameIndex - 1 && (!this.isNewFrame(frameIndex)) && frameIndex !== 0)\n      this.decodeFrame(frameIndex - 1);\n    this.prevDecodedFrame = frameIndex;\n    // https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format#animation-data\n    this.seek(this.frameOffsets[frameIndex]);\n    const header = this.readUint8();\n    const isNewFrame = (header >> 7) & 0x1;\n    const isTranslated = (header >> 5) & 0x3;\n    // reset current layer buffers\n    this.layerBuffers[0].fill(0);\n    this.layerBuffers[1].fill(0);\n\n    let translateX = 0;\n    let translateY = 0;\n    if (isTranslated) {\n      translateX = this.readInt8();\n      translateY = this.readInt8();\n    }\n\n    // unpack line encodings for each layer\n    for (let layerIndex = 0; layerIndex < 2; layerIndex++) {\n      const lineEncodingBuffer = this.lineEncodingBuffers[layerIndex];\n      lineEncodingBuffer.fill(0);\n      for (let ptr = 0; ptr < lineEncodingBuffer.length;) {\n        let byte = this.readUint8();\n        // the 4 lines in this byte are all empty (type 0) - skip\n        if (byte === 0) {\n          ptr += 4;\n          continue;\n        }\n        // unpack 4 line types from the current byte\n        lineEncodingBuffer[ptr++] = byte & 0x03;\n        lineEncodingBuffer[ptr++] = (byte >> 2) & 0x03;\n        lineEncodingBuffer[ptr++] = (byte >> 4) & 0x03;\n        lineEncodingBuffer[ptr++] = (byte >> 6) & 0x03;\n      }\n    }\n\n    // unpack layer bitmaps\n    for (let layerIndex = 0; layerIndex < 2; layerIndex++) {\n      const pixelBuffer = this.layerBuffers[layerIndex];\n      const lineEncodingBuffer = this.lineEncodingBuffers[layerIndex];\n      for (let y = 0; y < PpmParser.height; y++) {\n        let pixelBufferPtr = y * PpmParser.width;\n        const lineType = lineEncodingBuffer[y];\n        switch(lineType) {\n          // line type 0 = blank line, decode nothing\n          case 0:\n            break;\n          // line type 1 = compressed bitmap line\n          case 1:\n            // read lineHeader as a big-endian int\n            var lineHeader = this.readUint32(false);\n            // loop through each bit in the line header\n            // shift lineheader to the left by 1 bit every interation, \n            // so on the next loop cycle the next bit will be checked\n            // and if the line header equals 0, no more bits are set, \n            // the rest of the line is empty and can be skipped\n            for (; lineHeader !== 0; lineHeader <<= 1, pixelBufferPtr += 8) {\n              // if the bit is set, this 8-pix wide chunk is stored\n              // else we can just leave it blank and move on to the next chunk\n              if (lineHeader & 0x80000000) {\n                let chunk = this.readUint8();\n                // unpack chunk bits\n                // the chunk if shifted right 1 bit on every loop\n                // if the chunk equals 0, no more bits are set, \n                // so the rest of the chunk is empty and can be skipped\n                for (let pixel = 0; chunk !== 0; pixel++, chunk >>= 1)\n                  pixelBuffer[pixelBufferPtr + pixel] = chunk & 0x1;\n              }\n            }\n            break;\n          // line type 2 = compressed bitmap line like type 1, but all pixels are set to 1 first\n          case 2:\n            // line type 2 starts as an inverted line\n            pixelBuffer.fill(1, pixelBufferPtr, pixelBufferPtr + PpmParser.width);\n            // read lineHeader as a big-endian int\n            var lineHeader = this.readUint32(false);\n            // loop through each bit in the line header\n            // shift lineheader to the left by 1 bit every interation, \n            // so on the next loop cycle the next bit will be checked\n            // and if the line header equals 0, no more bits are set, \n            // the rest of the line is empty and can be skipped\n            for (; lineHeader !== 0; lineHeader <<= 1, pixelBufferPtr += 8) {\n              // if the bit is set, this 8-pix wide chunk is stored\n              // else we can just leave it blank and move on to the next chunk\n              if (lineHeader & 0x80000000) {\n                let chunk = this.readUint8();\n                // unpack chunk bits\n                for (let pixel = 0; pixel < 8; pixel++, chunk >>= 1)\n                  pixelBuffer[pixelBufferPtr + pixel] = chunk & 0x1;\n              }\n            }\n            break;\n          // line type 3 = raw bitmap line\n          case 3:\n            for (let chunk = 0, i = 0; i < PpmParser.width; i++) {\n              if (i % 8 === 0)\n                chunk = this.readUint8();\n              pixelBuffer[pixelBufferPtr++] = chunk & 0x1;\n              chunk >>= 1;\n            }\n            break;\n        }\n      }\n    }\n    // if the current frame is based on changes from the preivous one, merge them by XORing their values\n    const layer1 = this.layerBuffers[0];\n    const layer2 = this.layerBuffers[1];\n    const layer1Prev = this.prevLayerBuffers[0];\n    const layer2Prev = this.prevLayerBuffers[1];\n    if (!isNewFrame) {\n      let dest: number, src: number;\n      // loop through each line\n      for (let y = 0; y < PpmParser.height; y++) {\n        // skip to next line if this one falls off the top edge of the screen\n        if (y - translateY < 0)\n          continue;\n        // stop once the bottom screen edge has been reached\n        if (y - translateY >= PpmParser.height)\n          break;\n        // loop through each pixel in the line\n        for (let x = 0; x < PpmParser.width; x++) {\n          // skip to the next pixel if this one falls off the left edge of the screen\n          if (x - translateX < 0)\n            continue;\n          // stop diffing this line once the right screen edge has been reached\n          if (x - translateX >= PpmParser.width)\n            break;\n          dest = x + y * PpmParser.width;\n          src = dest - (translateX + translateY * PpmParser.width);\n          // diff pixels with a binary XOR\n          layer1[dest] ^= layer1Prev[src];\n          layer2[dest] ^= layer2Prev[src];\n        }\n      }\n    }\n    // copy the current layer buffers to the previous ones\n    this.prevLayerBuffers[0].set(this.layerBuffers[0]);\n    this.prevLayerBuffers[1].set(this.layerBuffers[1]);\n    return this.layerBuffers;\n  }\n\n  /** \n   * Get the layer draw order for a given frame\n   * @category Image\n   * @returns Array of layer indexes, in the order they should be drawn\n  */\n  public getFrameLayerOrder(frameIndex?: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    return [1, 0];\n  }\n\n  /** \n   * Get the color palette indices for a given frame. RGBA colors for these values can be indexed from {@link PpmParser.globalPalette}\n   *\n   * Returns an array where:\n   *  - index 0 is the paper color index\n   *  - index 1 is the layer 1 color index\n   *  - index 2 is the layer 2 color index\n   * @category Image\n  */\n  public getFramePaletteIndices(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameOffsets[frameIndex]);\n    const header = this.readUint8();\n    const isInverted = (header & 0x1) !== 1;\n    const penMap = [\n      isInverted ? 0 : 1, // pen index 0 isn't used in normal cases\n      isInverted ? 0 : 1,\n      2,\n      3,\n    ];\n    return [\n      isInverted ? 1 : 0, // paper\n      penMap[(header >> 1) & 0x3], // layer 1 color\n      penMap[(header >> 3) & 0x3], // layer 2 color\n    ];\n  }\n\n  /**\n   * Get the RGBA colors for a given frame\n   * \n   * Returns an array where:\n   *  - index 0 is the paper color\n   *  - index 1 is the layer 1 color\n   *  - index 2 is the layer 2 color\n   * @category Image\n   */\n  public getFramePalette(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    const indices = this.getFramePaletteIndices(frameIndex);\n    return indices.map(colorIndex => this.globalPalette[colorIndex]);\n  }\n\n  /** \n   * Get the sound effect flags for every frame in the Flipnote\n   * @category Audio\n  */\n  public decodeSoundFlags() {\n    if (this.soundFlags !== undefined)\n      return this.soundFlags;\n    assert(0x06A0 + this.frameDataLength < this.byteLength);\n    // https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format#sound-effect-flags\n    this.seek(0x06A0 + this.frameDataLength);\n    const numFlags = this.frameCount;\n    const flags = this.readBytes(numFlags);\n    this.soundFlags = new Array(numFlags);\n    for (let i = 0; i < numFlags; i++) {\n      const byte = flags[i];\n      this.soundFlags[i] = [\n        (byte & 0x1) !== 0, // SE1 bitflag\n        (byte & 0x2) !== 0, // SE2 bitflag\n        (byte & 0x4) !== 0, // SE3 bitflag\n      ];\n    }\n    return this.soundFlags;\n  }\n\n  /**\n   * Get the sound effect usage flags for every frame\n   * @category Audio\n   */\n  public getSoundEffectFlags(): FlipnoteSoundEffectFlags[] {\n    return this.decodeSoundFlags().map(frameFlags => ({\n      [FlipnoteSoundEffectTrack.SE1]: frameFlags[0],\n      [FlipnoteSoundEffectTrack.SE2]: frameFlags[1],\n      [FlipnoteSoundEffectTrack.SE3]: frameFlags[2]\n    }));\n  }\n\n  /**\n   * Get the sound effect usage flags for a given frame\n   * @category Audio\n   */\n  public getFrameSoundEffectFlags(frameIndex: number): FlipnoteSoundEffectFlags {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(0x06A0 + this.frameDataLength + frameIndex);\n    const byte = this.readUint8();\n    return {\n      [FlipnoteSoundEffectTrack.SE1]: (byte & 0x1) !== 0,\n      [FlipnoteSoundEffectTrack.SE2]: (byte & 0x2) !== 0,\n      [FlipnoteSoundEffectTrack.SE3]: (byte & 0x4) !== 0\n    }\n  }\n\n  /** \n   * Get the raw compressed audio data for a given track\n   * @returns byte array\n   * @category Audio\n  */\n  public getAudioTrackRaw(trackId: FlipnoteAudioTrack) {\n    const trackMeta = this.soundMeta.get(trackId);\n    assert(trackMeta.ptr + trackMeta.length < this.byteLength);\n    this.seek(trackMeta.ptr);\n    return this.readBytes(trackMeta.length);\n  }\n  \n  /** \n   * Get the decoded audio data for a given track, using the track's native samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  public decodeAudioTrack(trackId: FlipnoteAudioTrack) {\n    // note this doesn't resample\n    // TODO: kinda slow, maybe use sample lookup table\n    // decode a 4 bit IMA adpcm audio track\n    // https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format#sound-data\n    const src = this.getAudioTrackRaw(trackId);\n    const srcSize = src.length;\n    const dst = new Int16Array(srcSize * 2);\n    let srcPtr = 0;\n    let dstPtr = 0;\n    let sample = 0;\n    let stepIndex = 0;\n    let predictor = 0;\n    let lowNibble = true;\n    while (srcPtr < srcSize) {\n      // switch between high and low nibble each loop iteration\n      // increments srcPtr after every high nibble\n      if (lowNibble)\n        sample = src[srcPtr] & 0xF;\n      else\n        sample = src[srcPtr++] >> 4;\n      lowNibble = !lowNibble;\n      const step = ADPCM_STEP_TABLE[stepIndex];\n      let diff = step >> 3;\n      if (sample & 1)\n        diff += step >> 2;\n      if (sample & 2)\n        diff += step >> 1;\n      if (sample & 4)\n        diff += step;\n      if (sample & 8)\n        diff = -diff;\n      predictor += diff;\n      predictor = clamp(predictor, -32768, 32767);\n      stepIndex += ADPCM_INDEX_TABLE_4BIT[sample];\n      stepIndex = clamp(stepIndex, 0, 88);\n      dst[dstPtr++] = predictor;\n    }\n    return dst;\n  }\n\n  /** \n   * Get the decoded audio data for a given track, using the specified samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  public getAudioTrackPcm(trackId: FlipnoteAudioTrack, dstFreq = this.sampleRate) {\n    const srcPcm = this.decodeAudioTrack(trackId);\n    let srcFreq = this.rawSampleRate;\n    if (trackId === FlipnoteAudioTrack.BGM) {\n      const bgmAdjust = (1 / this.bgmrate) / (1 / this.framerate);\n      srcFreq = this.rawSampleRate * bgmAdjust;\n    }\n    if (srcFreq !== dstFreq)\n      return pcmResampleNearestNeighbour(srcPcm, srcFreq, dstFreq);\n    return srcPcm;\n  }\n\n  private pcmAudioMix(src: Int16Array, dst: Int16Array, dstOffset: number = 0) {\n    const srcSize = src.length;\n    const dstSize = dst.length;\n    for (let n = 0; n < srcSize; n++) {\n      if (dstOffset + n > dstSize)\n        break;\n      // half src volume\n      const samp = dst[dstOffset + n] + (src[n] / 2);\n      dst[dstOffset + n] = clamp(samp, -32768, 32767);\n    }\n  }\n\n  /** \n   * Get the full mixed audio for the Flipnote, using the specified samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  public getAudioMasterPcm(dstFreq = this.sampleRate) {\n    const dstSize = Math.ceil(this.duration * dstFreq);\n    const master = new Int16Array(dstSize);\n    const hasBgm = this.hasAudioTrack(FlipnoteAudioTrack.BGM);\n    const hasSe1 = this.hasAudioTrack(FlipnoteAudioTrack.SE1);\n    const hasSe2 = this.hasAudioTrack(FlipnoteAudioTrack.SE2);\n    const hasSe3 = this.hasAudioTrack(FlipnoteAudioTrack.SE3);\n    // Mix background music\n    if (hasBgm) {\n      const bgmPcm = this.getAudioTrackPcm(FlipnoteAudioTrack.BGM, dstFreq);\n      this.pcmAudioMix(bgmPcm, master, 0);\n    }\n    // Mix sound effects\n    if (hasSe1 || hasSe2 || hasSe3) {\n      const samplesPerFrame = dstFreq / this.framerate;\n      const se1Pcm = hasSe1 ? this.getAudioTrackPcm(FlipnoteAudioTrack.SE1, dstFreq) : null;\n      const se2Pcm = hasSe2 ? this.getAudioTrackPcm(FlipnoteAudioTrack.SE2, dstFreq) : null;\n      const se3Pcm = hasSe3 ? this.getAudioTrackPcm(FlipnoteAudioTrack.SE3, dstFreq) : null;\n      const seFlags = this.decodeSoundFlags();\n      for (let frame = 0; frame < this.frameCount; frame++) {\n        const seOffset = Math.ceil(frame * samplesPerFrame);\n        const flag = seFlags[frame];\n        if (hasSe1 && flag[0])\n          this.pcmAudioMix(se1Pcm, master, seOffset);\n        if (hasSe2 && flag[1])\n          this.pcmAudioMix(se2Pcm, master, seOffset);\n        if (hasSe3 && flag[2])\n          this.pcmAudioMix(se3Pcm, master, seOffset);\n      }\n    }\n    this.audioClipRatio = pcmGetClippingRatio(master);\n    return master;\n  }\n\n  /**\n   * Get the body of the Flipnote - the data that is digested for the signature\n   * @category Verification\n   */\n  public getBody() {\n    const bodyEnd = this.soundDataOffset + this.soundDataLength + 32;\n    return this.bytes.subarray(0, bodyEnd);\n  }\n\n  /**\n  * Get the Flipnote's signature data\n  * @category Verification\n  */\n  public getSignature() {\n    const bodyEnd = this.soundDataOffset + this.soundDataLength + 32;\n    return this.bytes.subarray(bodyEnd, bodyEnd + 128);\n  }\n  \n  /**\n   * Verify whether this Flipnote's signature is valid\n   * @category Verification\n   */\n  public async verify() {\n    const key = await rsaLoadPublicKey(PPM_PUBLIC_KEY, 'SHA-1');\n    return await rsaVerify(key, this.getSignature(), this.getBody());\n  }\n}","import { \n  FlipnoteFormat,\n  FlipnotePaletteDefinition,\n  FlipnoteAudioTrack,\n  FlipnoteSoundEffectTrack,\n  FlipnoteSoundEffectFlags,\n  FlipnoteMeta,\n  FlipnoteParserBase\n} from './FlipnoteParserBase';\n\nimport {\n  ADPCM_STEP_TABLE,\n  ADPCM_INDEX_TABLE_2BIT,\n  ADPCM_INDEX_TABLE_4BIT,\n  clamp,\n  assert,\n  assertRange,\n  pcmResampleLinear,\n  pcmGetClippingRatio,\n  pcmGetRms,\n  dateFromNintendoTimestamp,\n  timeGetNoteDuration,\n  getKwzFsidRegion,\n  isKwzDsiLibraryFsid,\n  rsaLoadPublicKey,\n  rsaVerify,\n} from '../utils';\n\n/** \n * KWZ framerates in frames per second, indexed by the in-app frame speed\n */\nconst KWZ_FRAMERATES = [.2, .5, 1, 2, 4, 6, 8, 12, 20, 24, 30];\n\n/** \n * KWZ color defines (red, green, blue, alpha)\n */\nconst KWZ_PALETTE: FlipnotePaletteDefinition = {\n  WHITE:  [0xff, 0xff, 0xff, 0xff],\n  BLACK:  [0x10, 0x10, 0x10, 0xff],\n  RED:    [0xff, 0x10, 0x10, 0xff],\n  YELLOW: [0xff, 0xe7, 0x00, 0xff],\n  GREEN:  [0x00, 0x86, 0x31, 0xff],\n  BLUE:   [0x00, 0x38, 0xce, 0xff],\n  NONE:   [0xff, 0xff, 0xff, 0x00]\n};\n\n/**\n * RSA public key used to verify that the PPM file signature is genuine.\n * \n * This **cannot** be used to resign Flipnotes, it can only verify that they are valid\n */\nconst KWZ_PUBLIC_KEY: string = `-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuv+zHAXXvbbtRqxADDeJ\nArX2b9RMxj3T+qpRg3FnIE/jeU3tj7eoDzsMduY+D/UT9CSnP+QHYY/vf0n5lqX9\ns6ljoZAmyUuruyj1e5Bg+fkDEu/yPEPQjqhbyywCyYL4TEAOJveopUBx9fdQxUJ6\nJ4J5oCE/Im1kFrlGW+puARiHmt3mmUyNzO8bI/Jx3cGSfoOHJG1foEaQsI5aaKqA\npBqxtzvwqMhudcZtAWSyRMBMlndvkRnVTDNTfTXLOYdHShCIgnKULCTH87uLBIP/\nnsmr4/bnQz8q2rp/HyVO+0yjR6mVr0NX5APJQ+6riJmGg3t3VOldhKP7aTHDUW+h\nkQIDAQAB\n-----END PUBLIC KEY-----`;\n\n/** \n * Pre computed bitmasks for readBits; done as a slight optimisation\n * @internal\n */\nconst BITMASKS = new Uint16Array(16);\nfor (let i = 0; i < 16; i++) {\n  BITMASKS[i] = (1 << i) - 1;\n}\n\n/** \n * Every possible sequence of pixels for each 8-pixel line\n * @internal \n */\nconst KWZ_LINE_TABLE = new Uint8Array(6561 * 8);\n/** \n * Same lines as KWZ_LINE_TABLE, but the pixels are shift-rotated to the left by one place\n * @internal\n */\nconst KWZ_LINE_TABLE_SHIFT = new Uint8Array(6561 * 8);\n\n/** @internal */\nvar offset = 0;\nfor (let a = 0; a < 3; a++)\nfor (let b = 0; b < 3; b++)\nfor (let c = 0; c < 3; c++)\nfor (let d = 0; d < 3; d++)\nfor (let e = 0; e < 3; e++)\nfor (let f = 0; f < 3; f++)\nfor (let g = 0; g < 3; g++)\nfor (let h = 0; h < 3; h++)\n{\n  KWZ_LINE_TABLE.set([b, a, d, c, f, e, h, g], offset);\n  KWZ_LINE_TABLE_SHIFT.set([a, d, c, f, e, h, g, b], offset);\n  offset += 8;\n}\n\n/**\n * Commonly used lines - represents lines where all the pixels are empty, full, \n * or include a pattern produced by the paint tool, etc\n * @internal\n */\nconst KWZ_LINE_TABLE_COMMON = new Uint8Array(32 * 8);\n/** \n * Same lines as common line table, but shift-rotates one place to the left\n * @internal\n */\nconst KWZ_LINE_TABLE_COMMON_SHIFT = new Uint8Array(32 * 8);\n\n[\n  0x0000, 0x0CD0, 0x19A0, 0x02D9, 0x088B, 0x0051, 0x00F3, 0x0009,\n  0x001B, 0x0001, 0x0003, 0x05B2, 0x1116, 0x00A2, 0x01E6, 0x0012,\n  0x0036, 0x0002, 0x0006, 0x0B64, 0x08DC, 0x0144, 0x00FC, 0x0024,\n  0x001C, 0x0004, 0x0334, 0x099C, 0x0668, 0x1338, 0x1004, 0x166C\n].forEach((value, i) => {\n  const lineTablePtr = value * 8;\n  const pixels = KWZ_LINE_TABLE.subarray(lineTablePtr, lineTablePtr + 8);\n  const shiftPixels = KWZ_LINE_TABLE_SHIFT.subarray(lineTablePtr, lineTablePtr + 8);\n  KWZ_LINE_TABLE_COMMON.set(pixels, i * 8);\n  KWZ_LINE_TABLE_COMMON_SHIFT.set(shiftPixels, i * 8);\n});\n\n/** \n * KWZ section types\n * @internal\n */\nexport type KwzSectionMagic = 'KFH' | 'KTN' | 'KMC' | 'KMI' | 'KSN' | 'KIC';\n\n/** \n * KWZ section map, tracking their offset and length\n * @internal\n */\nexport type KwzSectionMap = Map<KwzSectionMagic, {\n  ptr: number, \n  length: number\n}>;\n\n/** \n * KWZ file metadata, stores information about its playback, author details, etc\n */\nexport interface KwzMeta extends FlipnoteMeta {\n  /** Date representing when the file was created */\n  creationTimestamp: Date;\n};\n\n/** \n * KWZ frame metadata, stores information about each frame, like layer depths sound effect usage\n */\nexport interface KwzFrameMeta {\n  /** Frame flags */\n  flags: number[];\n  /** Frame layer sizes */\n  layerSize: number[];\n  /** Frame author's Flipnote Studio ID */\n  frameAuthor: string;\n  /** Frame layer 3D depths */\n  layerDepth: number[];\n  /** Frame sound */\n  soundFlags: number;\n  /** Whether this frame contains photos taken with the console's camera */\n  cameraFlag: number;\n};\n\n/** \n * KWZ parser options for enabling optimisations and other extra features\n */\nexport type KwzParserSettings = {\n  /** \n   * Skip full metadata parsing for quickness\n   */\n  quickMeta: boolean;\n  /** \n   * Apply special cases for DSi library notes\n   */ \n  dsiLibraryNote: boolean;\n  /** \n   * Automatically crop out the border around any frames\n   */ \n  borderCrop: boolean;\n  /**\n   * Nintendo messed up the initial adpcm state for a bunch of the PPM to KWZ conversions on DSi Library. They are effectively random.\n   * By default flipnote.js will try to make a best guess, but you can disable this and provide your own state values\n   * \n   * This is only enabled if `dsiLibraryNote` is also set to `true`\n   */\n   guessInitialBgmState: boolean;\n  /**\n   * Manually provide the initial adpcm step index for the BGM track.\n   * \n   * This is only enabled if `dsiLibraryNote` is also set to `true`\n   */\n  initialBgmStepIndex: number | null;\n  /**\n   * Manually provide the initial adpcm predictor for the BGM track.\n   * \n   * This is only enabled if `dsiLibraryNote` is also set to `true`\n   */\n  initialBgmPredictor: number | null;\n};\n\n/** \n * Parser class for Flipnote Studio 3D's KWZ animation format\n * \n * KWZ format docs: https://github.com/Flipnote-Collective/flipnote-studio-3d-docs/wiki/KWZ-Format\n * @category File Parser\n */\nexport class KwzParser extends FlipnoteParserBase {\n\n  /** Default KWZ parser settings */\n  static defaultSettings: KwzParserSettings = {\n    quickMeta: false,\n    dsiLibraryNote: false,\n    borderCrop: false,\n    guessInitialBgmState: true,\n    initialBgmPredictor: null,\n    initialBgmStepIndex: null,\n  };\n  /** File format type */\n  static format = FlipnoteFormat.KWZ;\n  /** Animation frame width */\n  static width = 320;\n  /** Animation frame height */\n  static height = 240;\n  /** Number of animation frame layers */\n  static numLayers = 3;\n  /** Number of colors per layer (aside from transparent) */\n  static numLayerColors = 2;\n  /** Audio track base sample rate */\n  static rawSampleRate = 16364;\n  /** Audio output sample rate. NOTE: probably isn't accurate, full KWZ audio stack is still on the todo */\n  static sampleRate = 32768;\n  /** Which audio tracks are available in this format */\n  static audioTracks = [\n    FlipnoteAudioTrack.BGM,\n    FlipnoteAudioTrack.SE1,\n    FlipnoteAudioTrack.SE2,\n    FlipnoteAudioTrack.SE3,\n    FlipnoteAudioTrack.SE4,\n  ];\n  /** Which sound effect tracks are available in this format */\n  static soundEffectTracks = [\n    FlipnoteSoundEffectTrack.SE1,\n    FlipnoteSoundEffectTrack.SE2,\n    FlipnoteSoundEffectTrack.SE3,\n    FlipnoteSoundEffectTrack.SE4,\n  ];\n  /** Global animation frame color palette */\n  static globalPalette = [\n    KWZ_PALETTE.WHITE,\n    KWZ_PALETTE.BLACK,\n    KWZ_PALETTE.RED,\n    KWZ_PALETTE.YELLOW,\n    KWZ_PALETTE.GREEN,\n    KWZ_PALETTE.BLUE,\n    KWZ_PALETTE.NONE,\n  ];\n  \n  /** File format type, reflects {@link KwzParser.format} */\n  public format = FlipnoteFormat.KWZ;\n  /** Custom object tag */\n  public [Symbol.toStringTag] = 'Flipnote Studio 3D KWZ animation file';\n  /** Animation frame width, reflects {@link KwzParser.width} */\n  public imageWidth = KwzParser.width;\n  /** Animation frame height, reflects {@link KwzParser.height} */\n  public imageHeight = KwzParser.height;\n  /** X offset for the top-left corner of the animation frame */\n  public imageOffsetX = 0;\n  /** Y offset for the top-left corner of the animation frame */\n  public imageOffsetY = 0;\n  /** Number of animation frame layers, reflects {@link KwzParser.numLayers} */\n  public numLayers = KwzParser.numLayers;\n  /** Number of colors per layer (aside from transparent), reflects {@link KwzParser.numLayerColors} */\n  public numLayerColors = KwzParser.numLayerColors;\n  /** @internal */\n  public srcWidth = KwzParser.width;\n  /** Which audio tracks are available in this format, reflects {@link KwzParser.audioTracks} */\n  public audioTracks = KwzParser.audioTracks;\n  /** Which sound effect tracks are available in this format, reflects {@link KwzParser.soundEffectTracks} */\n  public soundEffectTracks = KwzParser.soundEffectTracks;\n  /** Audio track base sample rate, reflects {@link KwzParser.rawSampleRate} */\n  public rawSampleRate = KwzParser.rawSampleRate;\n  /** Audio output sample rate, reflects {@link KwzParser.sampleRate} */\n  public sampleRate = KwzParser.sampleRate;\n  /** Global animation frame color palette, reflects {@link KwzParser.globalPalette} */\n  public globalPalette = KwzParser.globalPalette;\n  /** File metadata, see {@link KwzMeta} for structure */\n  public meta: KwzMeta;\n\n  private settings: KwzParserSettings;\n  private sectionMap: KwzSectionMap;\n  private bodyEndOffset: number;\n  private layerBuffers: [Uint8Array, Uint8Array, Uint8Array];\n  private soundFlags: boolean[][]; // sound effect flag cache\n  private prevDecodedFrame: number = null;\n  // private frameMeta: Map<number, KwzFrameMeta>;\n  private frameMetaOffsets: Uint32Array;\n  private frameDataOffsets: Uint32Array;\n  private frameLayerSizes: [number, number, number][];\n  private bitIndex = 0;\n  private bitValue = 0;\n  \n  /**\n   * Create a new KWZ file parser instance\n   * @param arrayBuffer an ArrayBuffer containing file data\n   * @param settings parser settings\n   */\n  constructor(arrayBuffer: ArrayBuffer, settings: Partial<KwzParserSettings> = {}) {\n    super(arrayBuffer);\n    this.settings = {...KwzParser.defaultSettings, ...settings};\n    this.buildSectionMap();\n    this.layerBuffers = [\n      new Uint8Array(KwzParser.width * KwzParser.height),\n      new Uint8Array(KwzParser.width * KwzParser.height),\n      new Uint8Array(KwzParser.width * KwzParser.height),\n    ];\n    // if the KIC section is present, we're dealing with a folder icon\n    // these are single-frame KWZs without a KFH section for metadata, or a KSN section for sound\n    // while the data for a full frame (320*240) is present, only the top-left 24*24 pixels are used\n    if (this.sectionMap.has('KIC')) {\n      this.isFolderIcon = true;\n      // icons still use the full 320 * 240 frame size, so we just set up our image crop to deal with that\n      this.imageWidth = 24;\n      this.imageHeight = 24;\n      this.frameCount = 1;\n      this.frameSpeed = 0;\n      this.framerate = KWZ_FRAMERATES[0];\n      this.thumbFrameIndex = 0;\n      this.getFrameOffsets();\n    }\n    // if the KFH section is present, then this is a handwritten comment from the Flipnote Gallery World online service\n    // these are single-frame KWZs, just with no sound\n    else if (!this.sectionMap.has('KSN')) {\n      this.isComment = true; \n      this.decodeMeta();\n      this.getFrameOffsets();\n    }\n    // else let's assume this is a regular note\n    else {\n      this.decodeMeta();\n      this.getFrameOffsets();\n      this.decodeSoundHeader();\n    }\n\n    // apply special optimisations for converted DSi library notes\n    if (this.settings.dsiLibraryNote) {\n      this.isDsiLibraryNote = true;\n    }\n    \n    // automatically crop out the border around every frame\n    if (this.settings.borderCrop) {\n      // dsi library notes can be cropped to their original resolution\n      if (this.isDsiLibraryNote) {\n        this.imageOffsetX = 32;\n        this.imageOffsetY = 24;\n        this.imageWidth = 256;\n        this.imageHeight = 192;\n      }\n      // even standard notes have a bit of a border...\n      else if (!this.isFolderIcon) {\n        this.imageOffsetX = 5;\n        this.imageOffsetY = 5;\n        this.imageWidth = 310;\n        this.imageHeight = 230;\n      }\n    }\n  }\n  \n  private buildSectionMap() {\n    this.seek(0);\n    const fileSize = this.byteLength - 256;\n    const sectionMap = new Map();\n    let sectionCount = 0;\n    let ptr = 0;\n    // counting sections should mitigate against one of mrnbayoh's notehax exploits\n    while (ptr < fileSize && sectionCount < 6) {\n      this.seek(ptr);\n      const magic = this.readChars(4).substring(0, 3) as KwzSectionMagic;\n      const length = this.readUint32();\n      sectionMap.set(magic, { ptr, length });\n      ptr += length + 8;\n      sectionCount += 1;\n    }\n    this.bodyEndOffset = ptr;\n    this.sectionMap = sectionMap;\n    assert(sectionMap.has('KMC') && sectionMap.has('KMI'));\n  }\n\n  private readBits(num: number) {\n    // assert(num < 16);\n    if (this.bitIndex + num > 16) {\n      const nextBits = this.readUint16();\n      this.bitValue |= nextBits << (16 - this.bitIndex);\n      this.bitIndex -= 16;\n    }\n    const result = this.bitValue & BITMASKS[num];\n    this.bitValue >>= num;\n    this.bitIndex += num;\n    return result;\n  }\n\n  private readFsid() {\n    if (this.settings.dsiLibraryNote) { // format as DSi PPM FSID\n      const hex = this.readHex(10, true);\n      return hex.slice(2, 18);\n    }\n    const hex = this.readHex(10);\n    return `${hex.slice(0, 4)}-${hex.slice(4, 8)}-${hex.slice(8, 12)}-${hex.slice(12, 18)}`.toLowerCase();\n  }\n\n  private readFilename() {\n    const ptr = this.pointer;\n    const chars = this.readChars(28);\n    if (chars.length === 28)\n      return chars;\n    // Otherwise, this is likely a DSi Library note, \n    // where sometimes Nintendo's buggy PPM converter includes the original packed PPM filename\n    this.seek(ptr);\n    const mac = this.readHex(3);\n    const random = this.readChars(13);\n    const edits = this.readUint16().toString().padStart(3, '0');\n    this.seek(ptr + 28);\n    return `${ mac }_${ random }_${ edits }`;\n  }\n\n  private decodeMeta() {\n    if (this.settings.quickMeta)\n      return this.decodeMetaQuick();\n    assert(this.sectionMap.has('KFH'));\n    this.seek(this.sectionMap.get('KFH').ptr + 12);\n    const creationTime = dateFromNintendoTimestamp(this.readUint32());\n    const modifiedTime = dateFromNintendoTimestamp(this.readUint32());\n    // const simonTime = \n    const appVersion = this.readUint32();\n    const rootAuthorId = this.readFsid();\n    const parentAuthorId = this.readFsid();\n    const currentAuthorId = this.readFsid();\n    const rootAuthorName = this.readWideChars(11);\n    const parentAuthorName = this.readWideChars(11);\n    const currentAuthorName = this.readWideChars(11);\n    const rootFilename = this.readFilename();\n    const parentFilename = this.readFilename();\n    const currentFilename = this.readFilename();\n    const frameCount = this.readUint16();\n    const thumbIndex = this.readUint16();\n    const flags = this.readUint16();\n    const frameSpeed = this.readUint8();\n    const layerFlags = this.readUint8();\n    this.isSpinoff = (currentAuthorId !== parentAuthorId) || (currentAuthorId !== rootAuthorId);\n    this.frameCount = frameCount;\n    this.frameSpeed = frameSpeed;\n    this.framerate = KWZ_FRAMERATES[frameSpeed];\n    this.duration = timeGetNoteDuration(this.frameCount, this.framerate);\n    this.thumbFrameIndex = thumbIndex;\n    this.layerVisibility = {\n      1: (layerFlags & 0x1) === 0,\n      2: (layerFlags & 0x2) === 0,\n      3: (layerFlags & 0x3) === 0,\n    };\n    // Try to auto-detect whether the current author ID matches a converted PPM ID\n    if (isKwzDsiLibraryFsid(currentAuthorId)) {\n      this.isDsiLibraryNote = true;\n    }\n    this.meta = {\n      lock: (flags & 0x1) !== 0,\n      loop: (flags & 0x2) !== 0,\n      isSpinoff: this.isSpinoff,\n      frameCount: frameCount,\n      frameSpeed: frameSpeed,\n      duration: this.duration,\n      thumbIndex: thumbIndex,\n      timestamp: modifiedTime,\n      creationTimestamp: creationTime,\n      root: {\n        username: rootAuthorName,\n        fsid: rootAuthorId,\n        region: getKwzFsidRegion(rootAuthorId),\n        filename: rootFilename,\n        isDsiFilename: rootFilename.length !== 28\n      },\n      parent: {\n        username: parentAuthorName,\n        fsid: parentAuthorId,\n        region: getKwzFsidRegion(parentAuthorId),\n        filename: parentFilename,\n        isDsiFilename: parentFilename.length !== 28\n      },\n      current: {\n        username: currentAuthorName,\n        fsid: currentAuthorId,\n        region: getKwzFsidRegion(currentAuthorId),\n        filename: currentFilename,\n        isDsiFilename: currentFilename.length !== 28\n      },\n    };\n  }\n\n  private decodeMetaQuick() {\n    assert(this.sectionMap.has('KFH'));\n    this.seek(this.sectionMap.get('KFH').ptr + 0x8 + 0xC4);\n    const frameCount = this.readUint16();\n    const thumbFrameIndex = this.readUint16();\n    const flags = this.readUint16();\n    const frameSpeed = this.readUint8();\n    const layerFlags = this.readUint8();\n    this.frameCount = frameCount;\n    this.thumbFrameIndex = thumbFrameIndex;\n    this.frameSpeed = frameSpeed;\n    this.framerate = KWZ_FRAMERATES[frameSpeed];\n    this.duration = timeGetNoteDuration(this.frameCount, this.framerate);\n    this.layerVisibility = {\n      1: (layerFlags & 0x1) === 0,\n      2: (layerFlags & 0x2) === 0,\n      3: (layerFlags & 0x3) === 0,\n    };\n  }\n\n  private getFrameOffsets() {\n    assert(this.sectionMap.has('KMI') && this.sectionMap.has('KMC'));\n    const numFrames = this.frameCount;\n    const kmiSection = this.sectionMap.get('KMI');\n    const kmcSection = this.sectionMap.get('KMC');\n    assert(kmiSection.length / 28 >= numFrames);\n    const frameMetaOffsets = new Uint32Array(numFrames);\n    const frameDataOffsets = new Uint32Array(numFrames);\n    const frameLayerSizes: [number, number, number][] = [];\n    let frameMetaPtr = kmiSection.ptr + 8;\n    let frameDataPtr = kmcSection.ptr + 12;\n    for (let frameIndex = 0; frameIndex < numFrames; frameIndex++) {\n      this.seek(frameMetaPtr + 4);\n      const layerASize = this.readUint16();\n      const layerBSize = this.readUint16();\n      const layerCSize = this.readUint16();\n      frameMetaOffsets[frameIndex] = frameMetaPtr\n      frameDataOffsets[frameIndex] = frameDataPtr;\n      frameMetaPtr += 28;\n      frameDataPtr += layerASize + layerBSize + layerCSize;\n      assert(frameMetaPtr < this.byteLength, `frame${ frameIndex } meta pointer out of bounds`);\n      assert(frameDataPtr < this.byteLength, `frame${ frameIndex } data pointer out of bounds`);\n      frameLayerSizes.push([layerASize, layerBSize, layerCSize]);\n    }\n    this.frameMetaOffsets = frameMetaOffsets;\n    this.frameDataOffsets = frameDataOffsets;\n    this.frameLayerSizes = frameLayerSizes;\n  }\n\n  private decodeSoundHeader() {\n    assert(this.sectionMap.has('KSN'));\n    let ptr = this.sectionMap.get('KSN').ptr + 8;\n    this.seek(ptr);\n    this.bgmSpeed = this.readUint32();\n    assert(this.bgmSpeed <= 10);\n    this.bgmrate = KWZ_FRAMERATES[this.bgmSpeed];\n    const trackSizes = new Uint32Array(this.buffer, ptr + 4, 20);\n    const soundMeta = new Map();\n    soundMeta.set(FlipnoteAudioTrack.BGM, {ptr: ptr += 28,            length: trackSizes[0]});\n    soundMeta.set(FlipnoteAudioTrack.SE1, {ptr: ptr += trackSizes[0], length: trackSizes[1]});\n    soundMeta.set(FlipnoteAudioTrack.SE2, {ptr: ptr += trackSizes[1], length: trackSizes[2]});\n    soundMeta.set(FlipnoteAudioTrack.SE3, {ptr: ptr += trackSizes[2], length: trackSizes[3]});\n    soundMeta.set(FlipnoteAudioTrack.SE4, {ptr: ptr += trackSizes[3], length: trackSizes[4]});\n    this.soundMeta = soundMeta;\n  }\n\n  /** \n   * Get the color palette indices for a given frame. RGBA colors for these values can be indexed from {@link KwzParser.globalPalette}\n   * \n   * Returns an array where:\n   *  - index 0 is the paper color index\n   *  - index 1 is the layer A color 1 index\n   *  - index 2 is the layer A color 2 index\n   *  - index 3 is the layer B color 1 index\n   *  - index 4 is the layer B color 2 index\n   *  - index 5 is the layer C color 1 index\n   *  - index 6 is the layer C color 2 index\n   * @category Image\n  */\n  public getFramePaletteIndices(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameMetaOffsets[frameIndex]);\n    const flags = this.readUint32();\n    return [\n      flags & 0xF,\n      (flags >> 8) & 0xF,\n      (flags >> 12) & 0xF,\n      (flags >> 16) & 0xF,\n      (flags >> 20) & 0xF,\n      (flags >> 24) & 0xF,\n      (flags >> 28) & 0xF,\n    ];\n  }\n\n  /**\n   * Get the RGBA colors for a given frame\n   * \n   * Returns an array where:\n   *  - index 0 is the paper color\n   *  - index 1 is the layer A color 1\n   *  - index 2 is the layer A color 2\n   *  - index 3 is the layer B color 1\n   *  - index 4 is the layer B color 2\n   *  - index 5 is the layer C color 1\n   *  - index 6 is the layer C color 2\n   * @category Image\n  */\n  public getFramePalette(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    const indices = this.getFramePaletteIndices(frameIndex);\n    return indices.map(colorIndex => this.globalPalette[colorIndex]);\n  }\n\n  private getFrameDiffingFlag(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameMetaOffsets[frameIndex]);\n    const flags = this.readUint32();\n    return (flags >> 4) & 0x07;\n  }\n\n  private getFrameLayerSizes(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameMetaOffsets[frameIndex] + 0x4);\n    return [\n      this.readUint16(),\n      this.readUint16(),\n      this.readUint16()\n    ];\n  }\n\n  private getFrameLayerDepths(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameMetaOffsets[frameIndex] + 0x14);\n    const a = [\n      this.readUint8(),\n      this.readUint8(),\n      this.readUint8()\n    ];\n    return a;\n  }\n\n  private getFrameAuthor(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameMetaOffsets[frameIndex] + 0xA);\n    return this.readFsid();\n  }\n\n  private decodeFrameSoundFlags(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameMetaOffsets[frameIndex] + 0x17);\n    const soundFlags = this.readUint8();\n    return [\n      (soundFlags & 0x1) !== 0,\n      (soundFlags & 0x2) !== 0,\n      (soundFlags & 0x4) !== 0,\n      (soundFlags & 0x8) !== 0,\n    ];\n  }\n\n  private getFrameCameraFlags(frameIndex: number) {\n    this.seek(this.frameMetaOffsets[frameIndex] + 0x1A);\n    const cameraFlags = this.readUint8();\n    return [\n      (cameraFlags & 0x1) !== 0,\n      (cameraFlags & 0x2) !== 0,\n      (cameraFlags & 0x4) !== 0,\n    ];\n  }\n\n  /** \n   * Get the layer draw order for a given frame\n   * @category Image\n   * @returns Array of layer indexes, in the order they should be drawn\n  */\n  public getFrameLayerOrder(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    const depths = this.getFrameLayerDepths(frameIndex);\n    return [2, 1, 0].sort((a, b) => depths[b] - depths[a]);\n  }\n\n  /** \n   * Decode a frame, returning the raw pixel buffers for each layer\n   * @category Image\n  */\n  public decodeFrame(frameIndex: number, diffingFlag = 0x7, isPrevFrame = false) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    // return existing layer buffers if no new frame has been decoded since the last call\n    if (this.prevDecodedFrame === frameIndex)\n      return this.layerBuffers;\n    // the prevDecodedFrame check is an optimisation for decoding frames in full sequence\n    if (this.prevDecodedFrame !== frameIndex - 1 && frameIndex !== 0) {\n      // if this frame is being decoded as a prev frame, then we only want to decode the layers necessary\n      // diffingFlag is negated with ~ so if no layers are diff-based, diffingFlag is 0\n      if (isPrevFrame)\n        diffingFlag = diffingFlag & ~this.getFrameDiffingFlag(frameIndex + 1);\n      // if diffing flag isn't 0, decode the previous frame before this one\n      if (diffingFlag !== 0)\n        this.decodeFrame(frameIndex - 1, diffingFlag, true);\n    }\n    \n    let framePtr = this.frameDataOffsets[frameIndex];\n    const layerSizes = this.frameLayerSizes[frameIndex];\n\n    for (let layerIndex = 0; layerIndex < 3; layerIndex++) {\n      // dsi gallery conversions don't use the third layer, so it can be skipped if this is set\n      if (this.settings.dsiLibraryNote && layerIndex === 3)\n        break;\n\n      this.seek(framePtr);\n      let layerSize = layerSizes[layerIndex];\n      framePtr += layerSize;\n      const pixelBuffer = this.layerBuffers[layerIndex];\n\n      // if the layer is 38 bytes then it hasn't changed at all since the previous frame, so we can skip it\n      if (layerSize === 38)\n        continue;\n\n      // if this layer doesn't need to be decoded for diffing\n      if (((diffingFlag >> layerIndex) & 0x1) === 0)\n        continue;\n\n      // reset readbits state\n      this.bitIndex = 16;\n      this.bitValue = 0;\n\n      // tile skip counter\n      let skipTileCounter = 0;\n\n      for (let tileOffsetY = 0; tileOffsetY < 240; tileOffsetY += 128) {\n        for (let tileOffsetX = 0; tileOffsetX < 320; tileOffsetX += 128) {\n          // loop small tiles\n          for (let subTileOffsetY = 0; subTileOffsetY < 128; subTileOffsetY += 8) {\n            const y = tileOffsetY + subTileOffsetY;\n            if (y >= 240)\n              break;\n\n            for (let subTileOffsetX = 0; subTileOffsetX < 128; subTileOffsetX += 8) {\n              const x = tileOffsetX + subTileOffsetX;\n              if (x >= 320)\n                break;\n\n              // continue to next tile loop if skipTileCounter is > 0\n              if (skipTileCounter > 0) {\n                skipTileCounter -= 1;\n                continue;\n              }\n\n              let pixelBufferPtr = y * KwzParser.width + x;\n              const tileType = this.readBits(3);\n\n              if (tileType === 0) {\n                const linePtr = this.readBits(5) * 8;\n                const pixels = KWZ_LINE_TABLE_COMMON.subarray(linePtr, linePtr + 8);\n                pixelBuffer.set(pixels, pixelBufferPtr);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n              } \n\n              else if (tileType === 1) {\n                const linePtr = this.readBits(13) * 8;\n                const pixels = KWZ_LINE_TABLE.subarray(linePtr, linePtr + 8);\n                pixelBuffer.set(pixels, pixelBufferPtr);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n              } \n              \n              else if (tileType === 2) {\n                const linePtr = this.readBits(5) * 8;\n                const a = KWZ_LINE_TABLE_COMMON.subarray(linePtr, linePtr + 8);\n                const b = KWZ_LINE_TABLE_COMMON_SHIFT.subarray(linePtr, linePtr + 8);\n                pixelBuffer.set(a, pixelBufferPtr);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n                pixelBuffer.set(a, pixelBufferPtr += 320);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n                pixelBuffer.set(a, pixelBufferPtr += 320);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n                pixelBuffer.set(a, pixelBufferPtr += 320);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n              } \n              \n              else if (tileType === 3) {\n                const linePtr = this.readBits(13) * 8;\n                const a = KWZ_LINE_TABLE.subarray(linePtr, linePtr + 8);\n                const b = KWZ_LINE_TABLE_SHIFT.subarray(linePtr, linePtr + 8);\n                pixelBuffer.set(a, pixelBufferPtr);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n                pixelBuffer.set(a, pixelBufferPtr += 320);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n                pixelBuffer.set(a, pixelBufferPtr += 320);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n                pixelBuffer.set(a, pixelBufferPtr += 320);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n              }\n\n              // most common tile type\n              else if (tileType === 4) {\n                const flags = this.readBits(8);\n                for (let mask = 1; mask < 0xFF; mask <<= 1) {\n                  if (flags & mask) {\n                    const linePtr = this.readBits(5) * 8;\n                    const pixels = KWZ_LINE_TABLE_COMMON.subarray(linePtr, linePtr + 8);\n                    pixelBuffer.set(pixels, pixelBufferPtr);\n                  }\n                  else {\n                    const linePtr = this.readBits(13) * 8;\n                    const pixels = KWZ_LINE_TABLE.subarray(linePtr, linePtr + 8);\n                    pixelBuffer.set(pixels, pixelBufferPtr);\n                  }\n                  pixelBufferPtr += 320;\n                }\n              }\n\n              else if (tileType === 5) {\n                skipTileCounter = this.readBits(5);\n                continue;\n              }\n\n              // type 6 doesnt exist\n\n              else if (tileType === 7) {\n                let pattern = this.readBits(2);\n                let useCommonLines = this.readBits(1);\n                let a, b;\n\n                if (useCommonLines !== 0) {\n                  const linePtrA = this.readBits(5) * 8;\n                  const linePtrB = this.readBits(5) * 8;\n                  a = KWZ_LINE_TABLE_COMMON.subarray(linePtrA, linePtrA + 8);\n                  b = KWZ_LINE_TABLE_COMMON.subarray(linePtrB, linePtrB + 8);\n                  pattern += 1;\n                } \n                else {\n                  const linePtrA = this.readBits(13) * 8;\n                  const linePtrB = this.readBits(13) * 8;\n                  a = KWZ_LINE_TABLE.subarray(linePtrA, linePtrA + 8);\n                  b = KWZ_LINE_TABLE.subarray(linePtrB, linePtrB + 8);\n                }\n\n                switch (pattern % 4) {\n                  case 0:\n                    pixelBuffer.set(a, pixelBufferPtr);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    break;\n                  case 1:\n                    pixelBuffer.set(a, pixelBufferPtr);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    break;\n                  case 2:\n                    pixelBuffer.set(a, pixelBufferPtr);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    break;\n                  case 3:\n                    pixelBuffer.set(a, pixelBufferPtr);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    break;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    this.prevDecodedFrame = frameIndex;\n    return this.layerBuffers;\n  }\n\n  /** \n   * Get the sound effect flags for every frame in the Flipnote\n   * @category Audio\n  */\n  public decodeSoundFlags() {\n    if (this.soundFlags !== undefined)\n      return this.soundFlags;\n    this.soundFlags = new Array(this.frameCount)\n      .fill(false)\n      .map((_, i) => this.decodeFrameSoundFlags(i))\n    return this.soundFlags;\n  }\n\n  /**\n   * Get the sound effect usage flags for every frame\n   * @category Audio\n   */\n  public getSoundEffectFlags(): FlipnoteSoundEffectFlags[] {\n    return this.decodeSoundFlags().map((frameFlags) => ({\n      [FlipnoteSoundEffectTrack.SE1]: frameFlags[0],\n      [FlipnoteSoundEffectTrack.SE2]: frameFlags[1],\n      [FlipnoteSoundEffectTrack.SE3]: frameFlags[2],\n      [FlipnoteSoundEffectTrack.SE4]: frameFlags[3],\n    }));  \n  }\n\n  /**\n   * Get the sound effect usage for a given frame\n   * @param frameIndex\n   * @category Audio\n   */\n  public getFrameSoundEffectFlags(frameIndex: number): FlipnoteSoundEffectFlags {\n    const frameFlags = this.decodeFrameSoundFlags(frameIndex);\n    return {\n      [FlipnoteSoundEffectTrack.SE1]: frameFlags[0],\n      [FlipnoteSoundEffectTrack.SE2]: frameFlags[1],\n      [FlipnoteSoundEffectTrack.SE3]: frameFlags[2],\n      [FlipnoteSoundEffectTrack.SE4]: frameFlags[3],\n    };\n  }\n\n  /** \n   * Get the raw compressed audio data for a given track\n   * @returns Byte array\n   * @category Audio\n  */\n  public getAudioTrackRaw(trackId: FlipnoteAudioTrack) {\n    const trackMeta = this.soundMeta.get(trackId);\n    assert(trackMeta.ptr + trackMeta.length < this.byteLength);\n    return new Uint8Array(this.buffer, trackMeta.ptr, trackMeta.length);\n  }\n\n  private decodeAdpcm(src: Uint8Array, dst: Int16Array, predictor = 0, stepIndex = 0) {\n    const srcSize = src.length;\n    let dstPtr = 0;\n    let sample = 0;\n    let step = 0;\n    let diff = 0;\n    // loop through each byte in the raw adpcm data\n    for (let srcPtr = 0; srcPtr < srcSize; srcPtr++) {\n      let currByte = src[srcPtr];\n      let currBit = 0;\n      while (currBit < 8) {\n        // 2 bit sample\n        if (stepIndex < 18 || currBit > 4) {\n          sample = currByte & 0x3;\n          step = ADPCM_STEP_TABLE[stepIndex];\n          diff = step >> 3;\n          if (sample & 1)\n            diff += step;\n          if (sample & 2)\n            diff = -diff;\n          predictor += diff;\n          stepIndex += ADPCM_INDEX_TABLE_2BIT[sample];\n          currByte >>= 2;\n          currBit += 2;\n        }\n        // 4 bit sample\n        else {\n          sample = currByte & 0xf;\n          step = ADPCM_STEP_TABLE[stepIndex];\n          diff = step >> 3;\n          if (sample & 1) \n            diff += step >> 2;\n          if (sample & 2) \n            diff += step >> 1;\n          if (sample & 4)\n            diff += step;\n          if (sample & 8)\n            diff = -diff;\n          predictor += diff;\n          stepIndex += ADPCM_INDEX_TABLE_4BIT[sample];\n          currByte >>= 4;\n          currBit += 4;\n        }\n        stepIndex = clamp(stepIndex, 0, 79);\n        // clamp as 12 bit then scale to 16\n        predictor = clamp(predictor, -2048, 2047);\n        dst[dstPtr] = predictor * 16;\n        dstPtr += 1;\n      }\n    }\n    return dstPtr;\n  }\n\n  /** \n   * Get the decoded audio data for a given track, using the track's native samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  public decodeAudioTrack(trackId: FlipnoteAudioTrack) {\n    const settings = this.settings;\n    const src = this.getAudioTrackRaw(trackId);\n    const dstSize = this.rawSampleRate * 60; // enough for 60 seconds, the max bgm size\n    const dst = new Int16Array(dstSize);\n    // initial decoder state\n    let predictor = 0;\n    let stepIndex = 40;\n    // Nintendo messed up the initial adpcm state for a bunch of the PPM conversions on DSi Library\n    // they are effectively random, so you can optionally provide your own state values, or let the lib make a best guess\n    if (this.isDsiLibraryNote && trackId === FlipnoteAudioTrack.BGM) {\n      // allow manual overrides for default predictor\n      if (settings.initialBgmPredictor !== null)\n        predictor = settings.initialBgmPredictor;\n\n      // allow manual overrides for default step index\n      if (settings.initialBgmStepIndex !== null)\n        stepIndex = settings.initialBgmStepIndex;\n\n      // bruteforce step index by finding the lowest track root mean square \n      if (settings.guessInitialBgmState) {\n        let bestRms = 0xFFFFFFFF; // arbritrarily large\n        let bestStepIndex = 0;\n        for (stepIndex = 0; stepIndex <= 40; stepIndex++) {\n          const dstPtr = this.decodeAdpcm(src, dst, predictor, stepIndex);\n          const rms = pcmGetRms(dst.subarray(0, dstPtr)); // uses same underlying memory as dst\n          if (rms < bestRms) {\n            bestRms = rms;\n            bestStepIndex = stepIndex;\n          }\n        }\n        stepIndex = bestStepIndex;\n      }\n    }\n    // decode track\n    const dstPtr = this.decodeAdpcm(src, dst, predictor, stepIndex);\n    // copy part of dst with slice() so dst buffer can be garbage collected\n    return dst.slice(0, dstPtr);\n  }\n\n  /** \n   * Get the decoded audio data for a given track, using the specified samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  public getAudioTrackPcm(trackId: FlipnoteAudioTrack, dstFreq = this.sampleRate) {\n    const srcPcm = this.decodeAudioTrack(trackId);\n    let srcFreq = this.rawSampleRate;\n    if (trackId === FlipnoteAudioTrack.BGM) {\n      const bgmAdjust = (1 / this.bgmrate) / (1 / this.framerate);\n      srcFreq = this.rawSampleRate * bgmAdjust;\n    }\n    if (srcFreq !== dstFreq)\n      return pcmResampleLinear(srcPcm, srcFreq, dstFreq);\n\n    return srcPcm;\n  }\n\n  private pcmAudioMix(src: Int16Array, dst: Int16Array, dstOffset: number = 0) {\n    const srcSize = src.length;\n    const dstSize = dst.length;\n    for (let n = 0; n < srcSize; n++) {\n      if (dstOffset + n > dstSize)\n        break;\n      // half src volume\n      const samp = dst[dstOffset + n] + src[n];\n      dst[dstOffset + n] = clamp(samp, -32768, 32767);\n    }\n  }\n\n  /** \n   * Get the full mixed audio for the Flipnote, using the specified samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  public getAudioMasterPcm(dstFreq = this.sampleRate) {\n    const dstSize = Math.ceil(this.duration * dstFreq);\n    const master = new Int16Array(dstSize);\n    const hasBgm = this.hasAudioTrack(FlipnoteAudioTrack.BGM);\n    const hasSe1 = this.hasAudioTrack(FlipnoteAudioTrack.SE1);\n    const hasSe2 = this.hasAudioTrack(FlipnoteAudioTrack.SE2);\n    const hasSe3 = this.hasAudioTrack(FlipnoteAudioTrack.SE3);\n    const hasSe4 = this.hasAudioTrack(FlipnoteAudioTrack.SE4);\n    // Mix background music\n    if (hasBgm) {\n      const bgmPcm = this.getAudioTrackPcm(FlipnoteAudioTrack.BGM, dstFreq);\n      this.pcmAudioMix(bgmPcm, master, 0);\n    }\n    // Mix sound effects\n    if (hasSe1 || hasSe2 || hasSe3 || hasSe4) {\n      const samplesPerFrame = dstFreq / this.framerate;\n      const se1Pcm = hasSe1 ? this.getAudioTrackPcm(FlipnoteAudioTrack.SE1, dstFreq) : null;\n      const se2Pcm = hasSe2 ? this.getAudioTrackPcm(FlipnoteAudioTrack.SE2, dstFreq) : null;\n      const se3Pcm = hasSe3 ? this.getAudioTrackPcm(FlipnoteAudioTrack.SE3, dstFreq) : null;\n      const se4Pcm = hasSe4 ? this.getAudioTrackPcm(FlipnoteAudioTrack.SE4, dstFreq) : null;\n      const soundEffectFlags = this.decodeSoundFlags();\n      for (let i = 0; i < this.frameCount; i++) {\n        const seFlags = soundEffectFlags[i];\n        const seOffset = Math.ceil(i * samplesPerFrame);\n        if (hasSe1 && seFlags[0])\n          this.pcmAudioMix(se1Pcm, master, seOffset);\n        if (hasSe2 && seFlags[1])\n          this.pcmAudioMix(se2Pcm, master, seOffset);\n        if (hasSe3 && seFlags[2])\n          this.pcmAudioMix(se3Pcm, master, seOffset);\n        if (hasSe4 && seFlags[3])\n          this.pcmAudioMix(se4Pcm, master, seOffset);\n      }\n    }\n    this.audioClipRatio = pcmGetClippingRatio(master);\n    return master;\n  }\n\n  /**\n   * Get the body of the Flipnote - the data that is digested for the signature\n   * @category Verification\n   */\n  public getBody() {\n    const bodyEnd = this.bodyEndOffset;\n    return this.bytes.subarray(0, bodyEnd);\n  }\n\n  /**\n   * Get the Flipnote's signature data\n   * @category Verification\n   */\n  public getSignature() {\n    const bodyEnd = this.bodyEndOffset;\n    return this.bytes.subarray(bodyEnd, bodyEnd + 256);\n  }\n\n  /**\n   * Verify whether this Flipnote's signature is valid\n   * @category Verification\n   */\n  public async verify() {\n    const key = await rsaLoadPublicKey(KWZ_PUBLIC_KEY, 'SHA-256');\n    return await rsaVerify(key, this.getSignature(), this.getBody());\n  }\n}","import { isBrowser } from '../utils';\nimport { LoaderDefinition } from './LoaderDefinition';\n\n/** \n * Loader for web url strings (Browser only)\n * @internal\n */\nconst webUrlLoader: LoaderDefinition<string> = {\n\n  matches: function(source) {\n    return isBrowser && typeof source === 'string';\n  },\n\n  load: function(source, resolve, reject) {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', source, true);\n    xhr.responseType = 'arraybuffer'; \n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4) {\n        if (xhr.status >= 200 && xhr.status < 300)\n          resolve(xhr.response);\n        else\n          reject({\n            type: 'httpError',\n            status: xhr.status,\n            statusText: xhr.statusText\n          });\n      }\n    };\n    xhr.send(null);\n  }\n\n};\n\nexport default webUrlLoader;","import { isNode, assertNodeEnv, dynamicRequire } from '../utils';\nimport { ServerResponse } from 'http';\nimport { LoaderDefinition } from './LoaderDefinition';\n\n/** \n * Loader for web url strings (Node only)\n * @internal\n */\nconst nodeUrlLoader: LoaderDefinition<string> = {\n\n  matches: function(source) {\n    return isNode && typeof source === 'string';\n  },\n\n  load: function(source, resolve, reject) {\n    assertNodeEnv();\n    const http = dynamicRequire(module, 'https');\n    http.get(source, (res: ServerResponse) => {\n      const chunks: Buffer[] = [];\n      res.on('data', chunk => chunks.push(chunk));\n      res.on('end', () => {\n        const buffer = Buffer.concat(chunks);\n        resolve(buffer.buffer);\n      });\n      res.on('error', (err) => reject(err));\n    });\n  }\n\n};\n\nexport default nodeUrlLoader;","import { assert, isBrowser } from '../utils';\nimport { LoaderDefinition } from './LoaderDefinition';\n\n/** \n * Loader for File objects (browser only)\n * @internal\n */\nconst fileLoader: LoaderDefinition<File> = {\n\n  matches: function(source) {\n    return isBrowser \n      && typeof File !== 'undefined' \n      && typeof FileReader !== 'undefined' \n      && source instanceof File;\n  },\n\n  load: function(source, resolve, reject) {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      resolve(reader.result as ArrayBuffer);\n    };\n    reader.onerror = (event) => {\n      reject({type: 'fileReadError'});\n    };\n    reader.readAsArrayBuffer(source);\n  }\n\n};\n\nexport default fileLoader;","import { isBrowser } from '../utils';\nimport { LoaderDefinition } from './LoaderDefinition';\n\n/** \n * Loader for Blob objects (browser only)\n * @internal\n */\nconst blobLoader: LoaderDefinition<Blob> = {\n\n  matches: function(source) {\n    return isBrowser \n      && typeof Blob !== 'undefined'\n      && typeof Response !== 'undefined'\n      && source instanceof Blob;\n  },\n\n  load: function(source, resolve, reject) {\n    // https://stackoverflow.com/questions/15341912/how-to-go-from-blob-to-arraybuffer\n    new Response(source).arrayBuffer()\n      .then(resolve)\n      .catch(reject);\n  }\n\n};\n\nexport default blobLoader;","import { isNode } from '../utils';\nimport { LoaderDefinition } from './LoaderDefinition';\n\n/** \n * Loader for Buffer objects (Node only)\n * @internal\n */\nconst nodeBufferLoader: LoaderDefinition<Buffer> = {\n\n  matches: function(source) {\n    return isNode && (source instanceof Buffer);\n  },\n\n  load: function(source, resolve, reject) {\n    resolve(source.buffer);\n  }\n\n};\n\nexport default nodeBufferLoader;","import { LoaderDefinition } from './LoaderDefinition';\n\n/** \n * Loader for ArrayBuffer objects\n * @internal\n */\nconst arrayBufferLoader: LoaderDefinition<ArrayBuffer> = {\n\n  matches: function(source) {\n    return (source instanceof ArrayBuffer);\n  },\n\n  load: function(source, resolve, reject) {\n    resolve(source);\n  }\n\n};\n\nexport default arrayBufferLoader;","import { LoaderDefinition } from './LoaderDefinition';\nimport webUrlLoader from './webUrlLoader';\nimport nodeUrlLoader from './nodeUrlLoader';\nimport fileLoader from './fileLoader';\nimport blobLoader from './blobLoader';\nimport nodeBufferLoader from './nodeBufferLoader';\nimport arrayBufferLoader from './arrayBufferLoader';\n\n/** @internal */\nconst loaders: LoaderDefinition<any>[] = [\n  webUrlLoader,\n  nodeUrlLoader,\n  fileLoader,\n  blobLoader,\n  nodeBufferLoader,\n  arrayBufferLoader\n];\n\n/** @internal */\nexport function loadSource(source: any): Promise<ArrayBuffer> {\n  return new Promise((resolve, reject) => {\n    for (let i = 0; i < loaders.length; i++) {\n      const loader = loaders[i];\n      if (loader.matches(source))\n        return loader.load(source, resolve, reject);\n    }\n    reject('No loader available for source type');\n  });\n}","import { PpmParser } from './parsers/PpmParser';\nimport { KwzParser } from './parsers/KwzParser';\nimport { loadSource } from './loaders';\n\nimport { Flipnote, FlipnoteParserSettings } from './parsers';\n\n/**\n * Source to load a Flipnote from. Depending on the operating envionment, this can be:\n * - A string representing a web URL\n * - An {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer | ArrayBuffer}\n * - A {@link https://developer.mozilla.org/en-US/docs/Web/API/File | File} object (Browser only)\n * - A {@link https://nodejs.org/api/buffer.html | Buffer} object (NodeJS only)\n */\nexport type FlipnoteSource = string | ArrayBuffer | Buffer | File;\n\n/**\n * Load a Flipnote from a given source, returning a promise with a parser object. \n * It will auto-detect the Flipnote format and return either a {@link PpmParser} or {@link KwzParser} accordingly.\n * \n * @param source - Source to load a Flipnote from. Depending on the operating envionment, this can be:\n * - A string representing a web URL\n * - An {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer | ArrayBuffer}\n * - A {@link https://developer.mozilla.org/en-US/docs/Web/API/File | File} object (Browser only)\n * - A {@link https://nodejs.org/api/buffer.html | Buffer} object (NodeJS only)\n * @param parserConfig - Config settings to pass to the parser, see {@link FlipnoteParserSettings}\n */\nexport function parseSource(source: FlipnoteSource, parserConfig?: Partial<FlipnoteParserSettings>): Promise<Flipnote> {\n  return loadSource(source)\n  .then((arrayBuffer: ArrayBuffer) => {\n    return new Promise((resolve, reject) => {\n      // check the buffer's magic to identify which format it uses\n      const magicBytes = new Uint8Array(arrayBuffer.slice(0, 4));\n      const magic = (magicBytes[0] << 24) | (magicBytes[1] << 16) | (magicBytes[2] << 8) | magicBytes[3];\n      // check if magic is PARA (ppm magic)\n      if (magic === 0x50415241)\n        resolve(new PpmParser(arrayBuffer, parserConfig));\n      // check if magic is KFH (kwz magic)\n      else if ((magic & 0xFFFFFF00) === 0x4B464800)\n        resolve(new KwzParser(arrayBuffer, parserConfig));\n      // check if magic is KIC (fs3d folder icon)\n      else if ((magic & 0xFFFFFF00) === 0x4B494300)\n        resolve(new KwzParser(arrayBuffer, parserConfig));\n      else\n        reject('Could not identify source as a valid Flipnote file');\n    });\n  });\n}","/** \n * Player event types\n */\nexport enum PlayerEvent {\n  __Any = 'any', // special event, gets called on everything\n  Play = 'play',\n  Pause = 'pause',\n  CanPlay = 'canplay',\n  CanPlayThrough = 'canplaythrough',\n  SeekStart = 'seeking',\n  SeekEnd = 'seeked',\n  Duration = 'durationchange',\n  Loop = 'loop',\n  Ended = 'ended',\n  VolumeChange = 'volumechange',\n  Progress = 'progress',\n  TimeUpdate = 'timeupdate',\n  FrameUpdate = 'frameupdate',\n  FrameNext = 'framenext',\n  FramePrev = 'frameprev',\n  FrameFirst = 'framefirst',\n  FrameLast = 'framelast',\n  Ready = 'ready',\n  Load = 'load',\n  LoadStart = 'loadstart',\n  LoadedData = 'loadeddata',\n  LoadedMeta = 'loadedmetadata',\n  Emptied = 'emptied',\n  Close = 'close',\n  Error = 'error',\n  Destroy = 'destroy',\n}\n\n/** @internal */\nexport type PlayerEventMap = Map<PlayerEvent, Function[]>;\n\n/** @internal */\nexport const supportedEvents: PlayerEvent[] = [\n  PlayerEvent.Play,\n  PlayerEvent.Pause,\n  PlayerEvent.CanPlay,\n  PlayerEvent.CanPlayThrough,\n  PlayerEvent.SeekStart,\n  PlayerEvent.SeekEnd,\n  PlayerEvent.Duration,\n  PlayerEvent.Loop,\n  PlayerEvent.Ended,\n  PlayerEvent.VolumeChange,\n  PlayerEvent.Progress,\n  PlayerEvent.TimeUpdate,\n  PlayerEvent.FrameUpdate,\n  PlayerEvent.FrameNext,\n  PlayerEvent.FramePrev,\n  PlayerEvent.FrameFirst,\n  PlayerEvent.FrameLast,\n  PlayerEvent.Ready,\n  PlayerEvent.Load,\n  PlayerEvent.LoadStart,\n  PlayerEvent.LoadedData,\n  PlayerEvent.LoadedMeta,\n  PlayerEvent.Emptied,\n  PlayerEvent.Close,\n  PlayerEvent.Error,\n];","/** @internal */\nexport function createTimeRanges(ranges: [number, number][]): TimeRanges {\n  return {\n    length: ranges.length,\n    start: (i: number) => ranges[i][0],\n    end: (i: number) => ranges[i][1],\n  }\n}\n\n/** @internal */\nexport function padNumber(num: number, strLength: number) {\n  return num.toString().padStart(strLength, '0');\n}\n\n/** @internal */\nexport function formatTime(seconds: number) {\n  const m = Math.floor((seconds % 3600) / 60);\n  const s = Math.floor(seconds % 60);\n  return `${ m }:${ padNumber(s, 2) }`\n}","import { FlipnoteParserBase } from '../parsers';\n\n/** @internal */\nexport abstract class CanvasInterface {\n\n  public note: FlipnoteParserBase;\n  public width: number;\n  public height: number;\n\n  public srcWidth: number;\n  public srcHeight: number;\n  public dstWidth: number;\n  public dstHeight: number;\n  public prevFrameIndex: number;\n\n  constructor (parent: Element, width: number, height: number) {}\n\n  public abstract setCanvasSize(width: number, height: number): void\n\n  public abstract setNote(note: FlipnoteParserBase): void\n\n  public abstract clear(color?: [number, number, number, number]): void\n\n  public abstract drawFrame(frameIndex: number): void\n\n  public abstract forceUpdate(): void;\n\n  public abstract getDataUrl(type?: string, quality?: any): string\n\n  public abstract getBlob(type?: string, quality?: any): Promise<Blob>\n\n  public abstract destroy(): void\n}","/* @license twgl.js 4.17.0 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\nAvailable via the MIT license.\nsee: http://github.com/greggman/twgl.js for details */\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\n\nlet VecType = Float32Array;\n\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n * @memberOf module:twgl/v3\n */\nfunction setDefaultType(ctor) {\n  const oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @param {number} [x] Initial x value.\n * @param {number} [y] Initial y value.\n * @param {number} [z] Initial z value.\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\nfunction create(x, y, z) {\n  const dst = new VecType(3);\n  if (x) {\n    dst[0] = x;\n  }\n  if (y) {\n    dst[1] = y;\n  }\n  if (z) {\n    dst[2] = z;\n  }\n  return dst;\n}\n\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A vector tha tis the sum of a and b.\n * @memberOf module:twgl/v3\n */\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n\n  return dst;\n}\n\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A vector that is the difference of a and b.\n * @memberOf module:twgl/v3\n */\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The linear interpolated result.\n * @memberOf module:twgl/v3\n */\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} t Interpolation coefficients vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} the linear interpolated result.\n * @memberOf module:twgl/v3\n */\nfunction lerpV(a, b, t, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n  dst[2] = a[2] + t[2] * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The max components vector.\n * @memberOf module:twgl/v3\n */\nfunction max(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n  dst[2] = Math.max(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The min components vector.\n * @memberOf module:twgl/v3\n */\nfunction min(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n  dst[2] = Math.min(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The scaled vector.\n * @memberOf module:twgl/v3\n */\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n\n  return dst;\n}\n\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The scaled vector.\n * @memberOf module:twgl/v3\n */\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n\n  return dst;\n}\n\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of a cross b.\n * @memberOf module:twgl/v3\n */\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  const t1 = a[2] * b[0] - a[0] * b[2];\n  const t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n\n  return dst;\n}\n\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\nfunction dot(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\n}\n\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\nfunction length$1(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\nfunction distance(a, b) {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\nfunction distanceSq(a, b) {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n\n  const lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  const len = Math.sqrt(lenSq);\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\nfunction negate(v, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n\n  return dst;\n}\n\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\nfunction copy(v, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\nfunction multiply(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n\n  return dst;\n}\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n\n  return dst;\n}\n\nvar v3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  add: add,\n  copy: copy,\n  create: create,\n  cross: cross,\n  distance: distance,\n  distanceSq: distanceSq,\n  divide: divide,\n  divScalar: divScalar,\n  dot: dot,\n  lerp: lerp,\n  lerpV: lerpV,\n  length: length$1,\n  lengthSq: lengthSq,\n  max: max,\n  min: min,\n  mulScalar: mulScalar,\n  multiply: multiply,\n  negate: negate,\n  normalize: normalize,\n  setDefaultType: setDefaultType,\n  subtract: subtract\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nlet MatType = Float32Array;\n\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n * @memberOf module:twgl/m4\n */\nfunction setDefaultType$1(ctor) {\n  const oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\nfunction negate$1(m, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = -m[ 0];\n  dst[ 1] = -m[ 1];\n  dst[ 2] = -m[ 2];\n  dst[ 3] = -m[ 3];\n  dst[ 4] = -m[ 4];\n  dst[ 5] = -m[ 5];\n  dst[ 6] = -m[ 6];\n  dst[ 7] = -m[ 7];\n  dst[ 8] = -m[ 8];\n  dst[ 9] = -m[ 9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n\n  return dst;\n}\n\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\nfunction copy$1(m, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = m[ 0];\n  dst[ 1] = m[ 1];\n  dst[ 2] = m[ 2];\n  dst[ 3] = m[ 3];\n  dst[ 4] = m[ 4];\n  dst[ 5] = m[ 5];\n  dst[ 6] = m[ 6];\n  dst[ 7] = m[ 7];\n  dst[ 8] = m[ 8];\n  dst[ 9] = m[ 9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n\n  return dst;\n}\n\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n function transpose(m, dst) {\n  dst = dst || new MatType(16);\n  if (dst === m) {\n    let t;\n\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  dst[ 0] = m00;\n  dst[ 1] = m10;\n  dst[ 2] = m20;\n  dst[ 3] = m30;\n  dst[ 4] = m01;\n  dst[ 5] = m11;\n  dst[ 6] = m21;\n  dst[ 7] = m31;\n  dst[ 8] = m02;\n  dst[ 9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n\n  return dst;\n}\n\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n  const tmp_0  = m22 * m33;\n  const tmp_1  = m32 * m23;\n  const tmp_2  = m12 * m33;\n  const tmp_3  = m32 * m13;\n  const tmp_4  = m12 * m23;\n  const tmp_5  = m22 * m13;\n  const tmp_6  = m02 * m33;\n  const tmp_7  = m32 * m03;\n  const tmp_8  = m02 * m23;\n  const tmp_9  = m22 * m03;\n  const tmp_10 = m02 * m13;\n  const tmp_11 = m12 * m03;\n  const tmp_12 = m20 * m31;\n  const tmp_13 = m30 * m21;\n  const tmp_14 = m10 * m31;\n  const tmp_15 = m30 * m11;\n  const tmp_16 = m10 * m21;\n  const tmp_17 = m20 * m11;\n  const tmp_18 = m00 * m31;\n  const tmp_19 = m30 * m01;\n  const tmp_20 = m00 * m21;\n  const tmp_21 = m20 * m01;\n  const tmp_22 = m00 * m11;\n  const tmp_23 = m10 * m01;\n\n  const t0 = (tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31) -\n      (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  const t1 = (tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31) -\n      (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  const t2 = (tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31) -\n      (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  const t3 = (tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21) -\n      (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n\n  const d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n\n  dst[ 0] = d * t0;\n  dst[ 1] = d * t1;\n  dst[ 2] = d * t2;\n  dst[ 3] = d * t3;\n  dst[ 4] = d * ((tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30) -\n          (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[ 5] = d * ((tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30) -\n          (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[ 6] = d * ((tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30) -\n          (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[ 7] = d * ((tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20) -\n          (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[ 8] = d * ((tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33) -\n          (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[ 9] = d * ((tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33) -\n          (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * ((tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33) -\n          (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * ((tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23) -\n          (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * ((tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12) -\n          (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * ((tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22) -\n          (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * ((tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02) -\n          (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * ((tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12) -\n          (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n\n  return dst;\n}\n\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\nfunction multiply$1(a, b, dst) {\n  dst = dst || new MatType(16);\n\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[ 4 + 0];\n  const a11 = a[ 4 + 1];\n  const a12 = a[ 4 + 2];\n  const a13 = a[ 4 + 3];\n  const a20 = a[ 8 + 0];\n  const a21 = a[ 8 + 1];\n  const a22 = a[ 8 + 2];\n  const a23 = a[ 8 + 3];\n  const a30 = a[12 + 0];\n  const a31 = a[12 + 1];\n  const a32 = a[12 + 2];\n  const a33 = a[12 + 3];\n  const b00 = b[0];\n  const b01 = b[1];\n  const b02 = b[2];\n  const b03 = b[3];\n  const b10 = b[ 4 + 0];\n  const b11 = b[ 4 + 1];\n  const b12 = b[ 4 + 2];\n  const b13 = b[ 4 + 3];\n  const b20 = b[ 8 + 0];\n  const b21 = b[ 8 + 1];\n  const b22 = b[ 8 + 2];\n  const b23 = b[ 8 + 3];\n  const b30 = b[12 + 0];\n  const b31 = b[12 + 1];\n  const b32 = b[12 + 2];\n  const b33 = b[12 + 3];\n\n  dst[ 0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[ 1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[ 2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[ 3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[ 4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[ 5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[ 6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[ 7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[ 8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[ 9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n\n  return dst;\n}\n\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix with translation set.\n * @memberOf module:twgl/m4\n */\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n  if (a !== dst) {\n    dst[ 0] = a[ 0];\n    dst[ 1] = a[ 1];\n    dst[ 2] = a[ 2];\n    dst[ 3] = a[ 3];\n    dst[ 4] = a[ 4];\n    dst[ 5] = a[ 5];\n    dst[ 6] = a[ 6];\n    dst[ 7] = a[ 7];\n    dst[ 8] = a[ 8];\n    dst[ 9] = a[ 9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\nfunction getTranslation(m, dst) {\n  dst = dst || create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {module:twgl/v3.Vec3} [dst] vector.\n * @return {module:twgl/v3.Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\nfunction getAxis(m, axis, dst) {\n  dst = dst || create();\n  const off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix with axis set.\n * @memberOf module:twgl/m4\n */\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy$1(a, dst);\n  }\n  const off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n\n  const f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  const rangeInv = 1.0 / (zNear - zFar);\n\n  dst[0]  = f / aspect;\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = f;\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 orthogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  dst[0]  = 2 / (right - left);\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = 2 / (top - bottom);\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  const dx = (right - left);\n  const dy = (top - bottom);\n  const dz = (near - far);\n\n  dst[ 0] = 2 * near / dx;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 2 * near / dy;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = (left + right) / dx;\n  dst[ 9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n\n  return dst;\n}\n\nlet xAxis;\nlet yAxis;\nlet zAxis;\n\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {module:twgl/v3.Vec3} eye The position of the eye.\n * @param {module:twgl/v3.Vec3} target The position meant to be viewed.\n * @param {module:twgl/v3.Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n\n  xAxis = xAxis || create();\n  yAxis = yAxis || create();\n  zAxis = zAxis || create();\n\n  normalize(\n      subtract(eye, target, zAxis), zAxis);\n  normalize(cross(up, zAxis, xAxis), xAxis);\n  normalize(cross(zAxis, xAxis, yAxis), yAxis);\n\n  dst[ 0] = xAxis[0];\n  dst[ 1] = xAxis[1];\n  dst[ 2] = xAxis[2];\n  dst[ 3] = 0;\n  dst[ 4] = yAxis[0];\n  dst[ 5] = yAxis[1];\n  dst[ 6] = yAxis[2];\n  dst[ 7] = 0;\n  dst[ 8] = zAxis[0];\n  dst[ 9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Translates the given 4-by-4 matrix by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The translated matrix.\n * @memberOf module:twgl/m4\n */\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[ 0] = m00;\n    dst[ 1] = m01;\n    dst[ 2] = m02;\n    dst[ 3] = m03;\n    dst[ 4] = m10;\n    dst[ 5] = m11;\n    dst[ 6] = m12;\n    dst[ 7] = m13;\n    dst[ 8] = m20;\n    dst[ 9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = c;\n  dst[ 6] = s;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[4]  = c * m10 + s * m20;\n  dst[5]  = c * m11 + s * m21;\n  dst[6]  = c * m12 + s * m22;\n  dst[7]  = c * m13 + s * m23;\n  dst[8]  = c * m20 - s * m10;\n  dst[9]  = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[ 0] = m[ 0];\n    dst[ 1] = m[ 1];\n    dst[ 2] = m[ 2];\n    dst[ 3] = m[ 3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;\n  dst[ 1] = 0;\n  dst[ 2] = -s;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = s;\n  dst[ 9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 - s * m20;\n  dst[ 1] = c * m01 - s * m21;\n  dst[ 2] = c * m02 - s * m22;\n  dst[ 3] = c * m03 - s * m23;\n  dst[ 8] = c * m20 + s * m00;\n  dst[ 9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[ 4] = m[ 4];\n    dst[ 5] = m[ 5];\n    dst[ 6] = m[ 6];\n    dst[ 7] = m[ 7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;\n  dst[ 1] = s;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = -s;\n  dst[ 5] = c;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 + s * m10;\n  dst[ 1] = c * m01 + s * m11;\n  dst[ 2] = c * m02 + s * m12;\n  dst[ 3] = c * m03 + s * m13;\n  dst[ 4] = c * m10 - s * m00;\n  dst[ 5] = c * m11 - s * m01;\n  dst[ 6] = c * m12 - s * m02;\n  dst[ 7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  dst[ 0] = xx + (1 - xx) * c;\n  dst[ 1] = x * y * oneMinusCosine + z * s;\n  dst[ 2] = x * z * oneMinusCosine - y * s;\n  dst[ 3] = 0;\n  dst[ 4] = x * y * oneMinusCosine - z * s;\n  dst[ 5] = yy + (1 - yy) * c;\n  dst[ 6] = y * z * oneMinusCosine + x * s;\n  dst[ 7] = 0;\n  dst[ 8] = x * z * oneMinusCosine + y * s;\n  dst[ 9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  const r00 = xx + (1 - xx) * c;\n  const r01 = x * y * oneMinusCosine + z * s;\n  const r02 = x * z * oneMinusCosine - y * s;\n  const r10 = x * y * oneMinusCosine - z * s;\n  const r11 = yy + (1 - yy) * c;\n  const r12 = y * z * oneMinusCosine + x * s;\n  const r20 = x * z * oneMinusCosine + y * s;\n  const r21 = y * z * oneMinusCosine - x * s;\n  const r22 = zz + (1 - zz) * c;\n\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n\n  dst[ 0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[ 1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[ 2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[ 3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[ 4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[ 5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[ 6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[ 7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[ 8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[ 9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {module:twgl/v3.Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = v[0];\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = v[1];\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Scales the given 4-by-4 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {module:twgl/v3.Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The scaled matrix.\n * @memberOf module:twgl/m4\n */\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[ 0] = v0 * m[0 * 4 + 0];\n  dst[ 1] = v0 * m[0 * 4 + 1];\n  dst[ 2] = v0 * m[0 * 4 + 2];\n  dst[ 3] = v0 * m[0 * 4 + 3];\n  dst[ 4] = v1 * m[1 * 4 + 0];\n  dst[ 5] = v1 * m[1 * 4 + 1];\n  dst[ 6] = v1 * m[1 * 4 + 2];\n  dst[ 7] = v1 * m[1 * 4 + 3];\n  dst[ 8] = v2 * m[2 * 4 + 0];\n  dst[ 9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The point.\n * @param {module:twgl/v3.Vec3} [dst] optional vec3 to store result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed point.\n * @memberOf module:twgl/m4\n */\nfunction transformPoint(m, v, dst) {\n  dst = dst || create();\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The direction.\n * @param {module:twgl/v3.Vec3} [dst] optional Vec3 to store result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\nfunction transformDirection(m, v, dst) {\n  dst = dst || create();\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The normal.\n * @param {module:twgl/v3.Vec3} [dst] The direction. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed normal.\n * @memberOf module:twgl/m4\n */\nfunction transformNormal(m, v, dst) {\n  dst = dst || create();\n  const mi = inverse(m);\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n  return dst;\n}\n\nvar m4 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  axisRotate: axisRotate,\n  axisRotation: axisRotation,\n  copy: copy$1,\n  frustum: frustum,\n  getAxis: getAxis,\n  getTranslation: getTranslation,\n  identity: identity,\n  inverse: inverse,\n  lookAt: lookAt,\n  multiply: multiply$1,\n  negate: negate$1,\n  ortho: ortho,\n  perspective: perspective,\n  rotateX: rotateX,\n  rotateY: rotateY,\n  rotateZ: rotateZ,\n  rotationX: rotationX,\n  rotationY: rotationY,\n  rotationZ: rotationZ,\n  scale: scale,\n  scaling: scaling,\n  setAxis: setAxis,\n  setDefaultType: setDefaultType$1,\n  setTranslation: setTranslation,\n  transformDirection: transformDirection,\n  transformNormal: transformNormal,\n  transformPoint: transformPoint,\n  translate: translate,\n  translation: translation,\n  transpose: transpose\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* DataType */\nconst BYTE                           = 0x1400;\nconst UNSIGNED_BYTE                  = 0x1401;\nconst SHORT                          = 0x1402;\nconst UNSIGNED_SHORT                 = 0x1403;\nconst INT                            = 0x1404;\nconst UNSIGNED_INT                   = 0x1405;\nconst FLOAT                          = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4       = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1       = 0x8034;\nconst UNSIGNED_SHORT_5_6_5         = 0x8363;\nconst HALF_FLOAT                   = 0x140B;\nconst UNSIGNED_INT_2_10_10_10_REV  = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV     = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nconst UNSIGNED_INT_24_8            = 0x84FA;\n\nconst glTypeToTypedArray = {};\n{\n  const tt = glTypeToTypedArray;\n  tt[BYTE]                           = Int8Array;\n  tt[UNSIGNED_BYTE]                  = Uint8Array;\n  tt[SHORT]                          = Int16Array;\n  tt[UNSIGNED_SHORT]                 = Uint16Array;\n  tt[INT]                            = Int32Array;\n  tt[UNSIGNED_INT]                   = Uint32Array;\n  tt[FLOAT]                          = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4]         = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1]         = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5]           = Uint16Array;\n  tt[HALF_FLOAT]                     = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV]    = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV]   = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV]       = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\n  tt[UNSIGNED_INT_24_8]              = Uint32Array;\n}\n\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array)         { return BYTE; }           // eslint-disable-line\n  if (typedArray instanceof Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArray instanceof Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArray instanceof Int16Array)        { return SHORT; }          // eslint-disable-line\n  if (typedArray instanceof Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\n  if (typedArray instanceof Int32Array)        { return INT; }            // eslint-disable-line\n  if (typedArray instanceof Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\n  if (typedArray instanceof Float32Array)      { return FLOAT; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferView} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)         { return BYTE; }           // eslint-disable-line\n  if (typedArrayType === Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArrayType === Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArrayType === Int16Array)        { return SHORT; }          // eslint-disable-line\n  if (typedArrayType === Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\n  if (typedArrayType === Int32Array)        { return INT; }            // eslint-disable-line\n  if (typedArrayType === Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\n  if (typedArrayType === Float32Array)      { return FLOAT; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\nfunction getTypedArrayTypeForGLType(type) {\n  const CTOR = glTypeToTypedArray[type];\n  if (!CTOR) {\n    throw new Error('unknown gl type');\n  }\n  return CTOR;\n}\n\nconst isArrayBuffer = typeof SharedArrayBuffer !== 'undefined'\n  ? function isArrayBufferOrSharedArrayBuffer(a) {\n    return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof SharedArrayBuffer);\n  }\n  : function isArrayBuffer(a) {\n    return a && a.buffer && a.buffer instanceof ArrayBuffer;\n  };\n\nvar typedarrays = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getGLTypeForTypedArray: getGLTypeForTypedArray,\n  getGLTypeForTypedArrayType: getGLTypeForTypedArrayType,\n  getTypedArrayTypeForGLType: getTypedArrayTypeForGLType,\n  isArrayBuffer: isArrayBuffer\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint no-console: \"off\" */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n * @private\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function(name) {\n    const value = src[name];\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n * @private\n */\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function(key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {  /* eslint no-prototype-builtins: 0 */\n      dst[key] = src[key];\n    }\n  });\n}\n\nfunction error(...args) {\n  console.error(...args);\n}\n\nfunction warn(...args) {\n  console.warn(...args);\n}\n\nfunction isBuffer(gl, t) {\n  return typeof WebGLBuffer !== 'undefined' && t instanceof WebGLBuffer;\n}\n\nfunction isRenderbuffer(gl, t) {\n  return typeof WebGLRenderbuffer !== 'undefined' && t instanceof WebGLRenderbuffer;\n}\n\nfunction isShader(gl, t) {\n  return typeof WebGLShader !== 'undefined' && t instanceof WebGLShader;\n}\n\nfunction isTexture(gl, t) {\n  return typeof WebGLTexture !== 'undefined' && t instanceof WebGLTexture;\n}\n\nfunction isSampler(gl, t) {\n  return typeof WebGLSampler !== 'undefined' && t instanceof WebGLSampler;\n}\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst STATIC_DRAW                  = 0x88e4;\nconst ARRAY_BUFFER                 = 0x8892;\nconst ELEMENT_ARRAY_BUFFER         = 0x8893;\nconst BUFFER_SIZE                  = 0x8764;\n\nconst BYTE$1                         = 0x1400;\nconst UNSIGNED_BYTE$1                = 0x1401;\nconst SHORT$1                        = 0x1402;\nconst UNSIGNED_SHORT$1               = 0x1403;\nconst INT$1                          = 0x1404;\nconst UNSIGNED_INT$1                 = 0x1405;\nconst FLOAT$1                        = 0x1406;\nconst defaults = {\n  attribPrefix: \"\",\n};\n\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n * In other words I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\nfunction setAttributePrefix(prefix) {\n  defaults.attribPrefix = prefix;\n}\n\nfunction setDefaults(newDefaults) {\n  copyExistingProperties(newDefaults, defaults);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || STATIC_DRAW);\n}\n\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n  type = type || ARRAY_BUFFER;\n  const buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n}\n\n// This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\nfunction getNormalizationForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array)    { return true; }  // eslint-disable-line\n  if (typedArray instanceof Uint8Array)   { return true; }  // eslint-disable-line\n  return false;\n}\n\n// This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)    { return true; }  // eslint-disable-line\n  if (typedArrayType === Uint8Array)   { return true; }  // eslint-disable-line\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nconst texcoordRE = /coord|texture/i;\nconst colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  let numComponents;\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3;  // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw new Error(`Can not guess numComponents for attribute '${name}'. Tried ${numComponents} but ${length} values is not evenly divisible by ${numComponents}. You should specify it.`);\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array,\n    };\n  }\n\n  let Type = array.type;\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n  return new Type(array.data);\n}\n\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of components of an array\n * @typedef {Object} FullArraySpec\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {(number|number[]|ArrayBufferView)} data The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {constructor} [type] type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\n * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @property {WebGLBuffer} [buffer] Buffer to use for this attribute. This lets you use your own buffer\n *    but you will need to supply `numComponents` and `type`. You can effectively pass an `AttribInfo`\n *    to provide this. Example:\n *\n *         const bufferInfo1 = twgl.createBufferInfoFromArrays(gl, {\n *           position: [1, 2, 3, ... ],\n *         });\n *         const bufferInfo2 = twgl.createBufferInfoFromArrays(gl, {\n *           position: bufferInfo1.attribs.position,  // use the same buffer from bufferInfo1\n *         });\n *\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @param {module:twgl.BufferInfo} [srcBufferInfo] a BufferInfo to copy from\n *   This lets you share buffers. Any arrays you supply will override\n *   the buffers from srcBufferInfo.\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\nfunction createAttribsFromArrays(gl, arrays) {\n  const attribs = {};\n  Object.keys(arrays).forEach(function(arrayName) {\n    if (!isIndices(arrayName)) {\n      const array = arrays[arrayName];\n      const attribName = array.attrib || array.name || array.attribName || (defaults.attribPrefix + arrayName);\n      if (array.value) {\n        if (!Array.isArray(array.value) && !isArrayBuffer(array.value)) {\n          throw new Error('array.value is not array or typedarray');\n        }\n        attribs[attribName] = {\n          value: array.value,\n        };\n      } else {\n        let buffer;\n        let type;\n        let normalization;\n        let numComponents;\n        if (array.buffer && array.buffer instanceof WebGLBuffer) {\n          buffer = array.buffer;\n          numComponents = array.numComponents || array.size;\n          type = array.type;\n          normalization = array.normalize;\n        } else if (typeof array === \"number\" || typeof array.data === \"number\") {\n          const numValues = array.data || array;\n          const arrayType = array.type || Float32Array;\n          const numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n          type = getGLTypeForTypedArrayType(arrayType);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n          numComponents = array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues);\n          buffer = gl.createBuffer();\n          gl.bindBuffer(ARRAY_BUFFER, buffer);\n          gl.bufferData(ARRAY_BUFFER, numBytes, array.drawType || STATIC_DRAW);\n        } else {\n          const typedArray = makeTypedArray(array, arrayName);\n          buffer = createBufferFromTypedArray(gl, typedArray, undefined, array.drawType);\n          type = getGLTypeForTypedArray(typedArray);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray);\n          numComponents = getNumComponents(array, arrayName);\n        }\n        attribs[attribName] = {\n          buffer:        buffer,\n          numComponents: numComponents,\n          type:          type,\n          normalize:     normalization,\n          stride:        array.stride || 0,\n          offset:        array.offset || 0,\n          divisor:       array.divisor === undefined ? undefined : array.divisor,\n          drawType:      array.drawType,\n        };\n      }\n    }\n  });\n  gl.bindBuffer(ARRAY_BUFFER, null);\n  return attribs;\n}\n\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically update the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably inefficient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n  if (offset !== undefined) {\n    gl.bindBuffer(ARRAY_BUFFER, attribInfo.buffer);\n    gl.bufferSubData(ARRAY_BUFFER, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === BYTE$1)           return 1;  // eslint-disable-line\n  if (type === UNSIGNED_BYTE$1)  return 1;  // eslint-disable-line\n  if (type === SHORT$1)          return 2;  // eslint-disable-line\n  if (type === UNSIGNED_SHORT$1) return 2;  // eslint-disable-line\n  if (type === INT$1)            return 4;  // eslint-disable-line\n  if (type === UNSIGNED_INT$1)   return 4;  // eslint-disable-line\n  if (type === FLOAT$1)          return 4;  // eslint-disable-line\n  return 0;\n}\n\n// Tries to get the number of elements from a set of arrays.\nconst positionKeys = ['position', 'positions', 'a_position'];\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  let key;\n  let ii;\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n    if (key in arrays) {\n      break;\n    }\n  }\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n  const array = arrays[key];\n  const length = getArray(array).length;\n  const numComponents = getNumComponents(array, key);\n  const numElements = length / numComponents;\n  if (length % numComponents > 0) {\n    throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n  }\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  let key;\n  let ii;\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n    if (key in attribs) {\n      break;\n    }\n    key = defaults.attribPrefix + key;\n    if (key in attribs) {\n      break;\n    }\n  }\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n  const attrib = attribs[key];\n  gl.bindBuffer(ARRAY_BUFFER, attrib.buffer);\n  const numBytes = gl.getBufferParameter(ARRAY_BUFFER, BUFFER_SIZE);\n  gl.bindBuffer(ARRAY_BUFFER, null);\n\n  const bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  const totalElements = numBytes / bytesPerValue;\n  const numComponents = attrib.numComponents || attrib.size;\n  // TODO: check stride\n  const numElements = totalElements / numComponents;\n  if (numElements % 1 !== 0) {\n    throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n  }\n  return numElements;\n}\n\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs appropriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         position: { buffer: WebGLBuffer, numComponents: 3, },\n *         normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also be TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or AugmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         texcoord: { numComponents: 2, buffer: gl.createBuffer(), },\n *         normal: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @param {module:twgl.BufferInfo} [srcBufferInfo] An existing\n *        buffer info to start from. WebGLBuffers etc specified\n *        in the srcBufferInfo will be used in a new BufferInfo\n *        with any arrays specified overriding the ones in\n *        srcBufferInfo.\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\nfunction createBufferInfoFromArrays(gl, arrays, srcBufferInfo) {\n  const newAttribs = createAttribsFromArrays(gl, arrays);\n  const bufferInfo = Object.assign({}, srcBufferInfo ? srcBufferInfo : {});\n  bufferInfo.attribs = Object.assign({}, srcBufferInfo ? srcBufferInfo.attribs : {}, newAttribs);\n  const indices = arrays.indices;\n  if (indices) {\n    const newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = getGLTypeForTypedArray(newIndices);\n  } else if (!bufferInfo.numElements) {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that contains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be derived otherwise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\nfunction createBufferFromArray(gl, array, arrayName) {\n  const type = arrayName === \"indices\" ? ELEMENT_ARRAY_BUFFER : ARRAY_BUFFER;\n  const typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\nfunction createBuffersFromArrays(gl, arrays) {\n  const buffers = { };\n  Object.keys(arrays).forEach(function(key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  });\n\n  // Ugh!\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = getGLTypeForTypedArray(makeTypedArray(arrays.indices));\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\nvar attributes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createAttribsFromArrays: createAttribsFromArrays,\n  createBuffersFromArrays: createBuffersFromArrays,\n  createBufferFromArray: createBufferFromArray,\n  createBufferFromTypedArray: createBufferFromTypedArray,\n  createBufferInfoFromArrays: createBufferInfoFromArrays,\n  setAttribInfoBufferFromArray: setAttribInfoBufferFromArray,\n  setAttributePrefix: setAttributePrefix,\n  setAttributeDefaults_: setDefaults,\n  getNumComponents_: getNumComponents,\n  getArray_: getArray\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst getArray$1 = getArray;  // eslint-disable-line\nconst getNumComponents$1 = getNumComponents;  // eslint-disable-line\n\n/**\n * @typedef {(Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array)} TypedArray\n */\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n * @private\n */\nfunction augmentTypedArray(typedArray, numComponents) {\n  let cursor = 0;\n  typedArray.push = function() {\n    for (let ii = 0; ii < arguments.length; ++ii) {\n      const value = arguments[ii];\n      if (value instanceof Array || isArrayBuffer(value)) {\n        for (let jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n  typedArray.reset = function(opt_index) {\n    cursor = opt_index || 0;\n  };\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function() {\n      return this.length / this.numComponents | 0;\n    },\n  });\n  return typedArray;\n}\n\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  const Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n\n/**\n * Given indexed vertices creates a new set of vertices un-indexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\nfunction deindexVertices(vertices) {\n  const indices = vertices.indices;\n  const newVertices = {};\n  const numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    const srcBuffer = vertices[channel];\n    const numComponents = srcBuffer.numComponents;\n    const dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n    for (let ii = 0; ii < numElements; ++ii) {\n      const ndx = indices[ii];\n      const offset = ndx * numComponents;\n      for (let jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n\n  return newVertices;\n}\n\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw new Error('can not flatten normals of indexed vertices. deindex them first');\n  }\n\n  const normals = vertices.normal;\n  const numNormals = normals.length;\n  for (let ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    const nax = normals[ii + 0];\n    const nay = normals[ii + 1];\n    const naz = normals[ii + 2];\n\n    const nbx = normals[ii + 3];\n    const nby = normals[ii + 4];\n    const nbz = normals[ii + 5];\n\n    const ncx = normals[ii + 6];\n    const ncy = normals[ii + 7];\n    const ncz = normals[ii + 8];\n\n    // add them\n    let nx = nax + nbx + ncx;\n    let ny = nay + nby + ncy;\n    let nz = naz + nbz + ncz;\n\n    // normalize them\n    const length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n\n    nx /= length;\n    ny /= length;\n    nz /= length;\n\n    // copy them back in\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  const len = array.length;\n  const tmp = new Float32Array(3);\n  for (let ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii    ] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal$1(mi, v, dst) {\n  dst = dst || create();\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Reorients directions by the given matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, transformDirection);\n  return array;\n}\n\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, inverse(matrix), transformNormal$1);\n  return array;\n}\n\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, transformPoint);\n  return array;\n}\n\n/**\n * @typedef {(number[]|TypedArray)} NativeArrayOrTypedArray\n */\n\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, NativeArrayOrTypedArray>} arrays The vertices to reorient\n * @param {module:twgl/m4.Mat4} matrix matrix to reorient by.\n * @return {Object.<string, NativeArrayOrTypedArray>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function(name) {\n    const array = arrays[name];\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray>} the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [\n        xOffset + -1 * size, yOffset + -1 * size,\n        xOffset +  1 * size, yOffset + -1 * size,\n        xOffset + -1 * size, yOffset +  1 * size,\n        xOffset +  1 * size, yOffset +  1 * size,\n      ],\n    },\n    normal: [\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n    ],\n    texcoord: [\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1,\n    ],\n    indices: [ 0, 1, 2, 2, 1, 3 ],\n  };\n}\n\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createPlaneVertices(\n    width,\n    depth,\n    subdivisionsWidth,\n    subdivisionsDepth,\n    matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || identity();\n\n  const numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (let z = 0; z <= subdivisionsDepth; z++) {\n    for (let x = 0; x <= subdivisionsWidth; x++) {\n      const u = x / subdivisionsWidth;\n      const v = z / subdivisionsDepth;\n      positions.push(\n          width * u - width * 0.5,\n          0,\n          depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  const numVertsAcross = subdivisionsWidth + 1;\n  const indices = createAugmentedTypedArray(\n      3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (let z = 0; z < subdivisionsDepth; z++) {  // eslint-disable-line\n    for (let x = 0; x < subdivisionsWidth; x++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (z + 0) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x,\n          (z + 0) * numVertsAcross + x + 1);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (z + 1) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x + 1,\n          (z + 0) * numVertsAcross + x + 1);\n    }\n  }\n\n  const arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  }, matrix);\n  return arrays;\n}\n\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createSphereVertices(\n    radius,\n    subdivisionsAxis,\n    subdivisionsHeight,\n    opt_startLatitudeInRadians,\n    opt_endLatitudeInRadians,\n    opt_startLongitudeInRadians,\n    opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw new Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || (Math.PI * 2);\n\n  const latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  const longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians;\n\n  // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n  const numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2 , numVertices);\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let y = 0; y <= subdivisionsHeight; y++) {\n    for (let x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      const u = x / subdivisionsAxis;\n      const v = y / subdivisionsHeight;\n      const theta = longRange * u + opt_startLongitudeInRadians;\n      const phi = latRange * v + opt_startLatitudeInRadians;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  const numVertsAround = subdivisionsAxis + 1;\n  const indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n  for (let x = 0; x < subdivisionsAxis; x++) {  // eslint-disable-line\n    for (let y = 0; y < subdivisionsHeight; y++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (y + 0) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (y + 1) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n * @private\n */\nconst CUBE_FACE_INDICES = [\n  [3, 7, 5, 1],  // right\n  [6, 2, 0, 4],  // left\n  [6, 7, 3, 2],  // ??\n  [0, 1, 5, 4],  // ??\n  [7, 6, 4, 5],  // front\n  [2, 3, 1, 0],  // back\n];\n\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createCubeVertices(size) {\n  size = size || 1;\n  const k = size / 2;\n\n  const cornerVertices = [\n    [-k, -k, -k],\n    [+k, -k, -k],\n    [-k, +k, -k],\n    [+k, +k, -k],\n    [-k, -k, +k],\n    [+k, -k, +k],\n    [-k, +k, +k],\n    [+k, +k, +k],\n  ];\n\n  const faceNormals = [\n    [+1, +0, +0],\n    [-1, +0, +0],\n    [+0, +1, +0],\n    [+0, -1, +0],\n    [+0, +0, +1],\n    [+0, +0, -1],\n  ];\n\n  const uvCoords = [\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [1, 1],\n  ];\n\n  const numVertices = 6 * 4;\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2 , numVertices);\n  const indices   = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (let f = 0; f < 6; ++f) {\n    const faceIndices = CUBE_FACE_INDICES[f];\n    for (let v = 0; v < 4; ++v) {\n      const position = cornerVertices[faceIndices[v]];\n      const normal = faceNormals[f];\n      const uv = uvCoords[v];\n\n      // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n\n    }\n    // Two triangles make a square face.\n    const offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createTruncatedConeVertices(\n    bottomRadius,\n    topRadius,\n    height,\n    radialSubdivisions,\n    verticalSubdivisions,\n    opt_topCap,\n    opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw new Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  const topCap = (opt_topCap === undefined) ? true : opt_topCap;\n  const bottomCap = (opt_bottomCap === undefined) ? true : opt_bottomCap;\n\n  const extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n\n  const numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n  const indices   = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra / 2) * 2, Uint16Array);\n\n  const vertsAroundEdge = radialSubdivisions + 1;\n\n  // The slant of the cone is constant across its surface\n  const slant = Math.atan2(bottomRadius - topRadius, height);\n  const cosSlant = Math.cos(slant);\n  const sinSlant = Math.sin(slant);\n\n  const start = topCap ? -2 : 0;\n  const end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (let yy = start; yy <= end; ++yy) {\n    let v = yy / verticalSubdivisions;\n    let y = height * v;\n    let ringRadius;\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius +\n        (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n    y -= height / 2;\n    for (let ii = 0; ii < vertsAroundEdge; ++ii) {\n      const sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      const cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      if (yy < 0) {\n        normals.push(0, -1, 0);\n      } else if (yy > verticalSubdivisions) {\n        normals.push(0, 1, 0);\n      } else if (ringRadius === 0.0) {\n        normals.push(0, 0, 0);\n      } else {\n        normals.push(sin * cosSlant, sinSlant, cos * cosSlant);\n      }\n      texcoords.push((ii / radialSubdivisions), 1 - v);\n    }\n  }\n\n  for (let yy = 0; yy < verticalSubdivisions + extra; ++yy) {  // eslint-disable-line\n    if (yy === 1 && topCap || yy === verticalSubdivisions + extra - 2 && bottomCap) {\n      continue;\n    }\n    for (let ii = 0; ii < radialSubdivisions; ++ii) {  // eslint-disable-line\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 0) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii);\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 0 + ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n * @private\n */\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  const data = [];\n  for (let ii = 0; ii < rleData.length; ii += 4) {\n    const runLength = rleData[ii];\n    const element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n    for (let jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n  return data;\n}\n\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction create3DFVertices() {\n\n  const positions = [\n    // left column front\n    0,   0,  0,\n    0, 150,  0,\n    30,   0,  0,\n    0, 150,  0,\n    30, 150,  0,\n    30,   0,  0,\n\n    // top rung front\n    30,   0,  0,\n    30,  30,  0,\n    100,   0,  0,\n    30,  30,  0,\n    100,  30,  0,\n    100,   0,  0,\n\n    // middle rung front\n    30,  60,  0,\n    30,  90,  0,\n    67,  60,  0,\n    30,  90,  0,\n    67,  90,  0,\n    67,  60,  0,\n\n    // left column back\n      0,   0,  30,\n     30,   0,  30,\n      0, 150,  30,\n      0, 150,  30,\n     30,   0,  30,\n     30, 150,  30,\n\n    // top rung back\n     30,   0,  30,\n    100,   0,  30,\n     30,  30,  30,\n     30,  30,  30,\n    100,   0,  30,\n    100,  30,  30,\n\n    // middle rung back\n     30,  60,  30,\n     67,  60,  30,\n     30,  90,  30,\n     30,  90,  30,\n     67,  60,  30,\n     67,  90,  30,\n\n    // top\n      0,   0,   0,\n    100,   0,   0,\n    100,   0,  30,\n      0,   0,   0,\n    100,   0,  30,\n      0,   0,  30,\n\n    // top rung front\n    100,   0,   0,\n    100,  30,   0,\n    100,  30,  30,\n    100,   0,   0,\n    100,  30,  30,\n    100,   0,  30,\n\n    // under top rung\n    30,   30,   0,\n    30,   30,  30,\n    100,  30,  30,\n    30,   30,   0,\n    100,  30,  30,\n    100,  30,   0,\n\n    // between top rung and middle\n    30,   30,   0,\n    30,   60,  30,\n    30,   30,  30,\n    30,   30,   0,\n    30,   60,   0,\n    30,   60,  30,\n\n    // top of middle rung\n    30,   60,   0,\n    67,   60,  30,\n    30,   60,  30,\n    30,   60,   0,\n    67,   60,   0,\n    67,   60,  30,\n\n    // front of middle rung\n    67,   60,   0,\n    67,   90,  30,\n    67,   60,  30,\n    67,   60,   0,\n    67,   90,   0,\n    67,   90,  30,\n\n    // bottom of middle rung.\n    30,   90,   0,\n    30,   90,  30,\n    67,   90,  30,\n    30,   90,   0,\n    67,   90,  30,\n    67,   90,   0,\n\n    // front of bottom\n    30,   90,   0,\n    30,  150,  30,\n    30,   90,  30,\n    30,   90,   0,\n    30,  150,   0,\n    30,  150,  30,\n\n    // bottom\n    0,   150,   0,\n    0,   150,  30,\n    30,  150,  30,\n    0,   150,   0,\n    30,  150,  30,\n    30,  150,   0,\n\n    // left side\n    0,   0,   0,\n    0,   0,  30,\n    0, 150,  30,\n    0,   0,   0,\n    0, 150,  30,\n    0, 150,   0,\n  ];\n\n  const texcoords = [\n    // left column front\n    0.22, 0.19,\n    0.22, 0.79,\n    0.34, 0.19,\n    0.22, 0.79,\n    0.34, 0.79,\n    0.34, 0.19,\n\n    // top rung front\n    0.34, 0.19,\n    0.34, 0.31,\n    0.62, 0.19,\n    0.34, 0.31,\n    0.62, 0.31,\n    0.62, 0.19,\n\n    // middle rung front\n    0.34, 0.43,\n    0.34, 0.55,\n    0.49, 0.43,\n    0.34, 0.55,\n    0.49, 0.55,\n    0.49, 0.43,\n\n    // left column back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // middle rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // top rung front\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // under top rung\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // between top rung and middle\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // top of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // front of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom of middle rung.\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // front of bottom\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // left side\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n  ];\n\n  const normals = expandRLEData([\n    // left column front\n    // top rung front\n    // middle rung front\n    18, 0, 0, 1,\n\n    // left column back\n    // top rung back\n    // middle rung back\n    18, 0, 0, -1,\n\n    // top\n    6, 0, 1, 0,\n\n    // top rung front\n    6, 1, 0, 0,\n\n    // under top rung\n    6, 0, -1, 0,\n\n    // between top rung and middle\n    6, 1, 0, 0,\n\n    // top of middle rung\n    6, 0, 1, 0,\n\n    // front of middle rung\n    6, 1, 0, 0,\n\n    // bottom of middle rung.\n    6, 0, -1, 0,\n\n    // front of bottom\n    6, 1, 0, 0,\n\n    // bottom\n    6, 0, -1, 0,\n\n    // left side\n    6, -1, 0, 0,\n  ]);\n\n  const colors = expandRLEData([\n        // left column front\n        // top rung front\n        // middle rung front\n      18, 200,  70, 120,\n\n        // left column back\n        // top rung back\n        // middle rung back\n      18, 80, 70, 200,\n\n        // top\n      6, 70, 200, 210,\n\n        // top rung front\n      6, 200, 200, 70,\n\n        // under top rung\n      6, 210, 100, 70,\n\n        // between top rung and middle\n      6, 210, 160, 70,\n\n        // top of middle rung\n      6, 70, 180, 210,\n\n        // front of middle rung\n      6, 100, 70, 210,\n\n        // bottom of middle rung.\n      6, 76, 210, 100,\n\n        // front of bottom\n      6, 140, 210, 80,\n\n        // bottom\n      6, 90, 130, 110,\n\n        // left side\n      6, 160, 160, 220,\n  ], [255]);\n\n  const numVerts = positions.length / 3;\n\n  const arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2,  numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array),\n  };\n\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (let ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCrescentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCrescentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n function createCrescentVertices(\n    verticalRadius,\n    outerRadius,\n    innerRadius,\n    thickness,\n    subdivisionsDown,\n    startOffset,\n    endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw new Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset   = endOffset || 1;\n\n  const subdivisionsThick = 2;\n\n  const offsetRange = endOffset - startOffset;\n  const numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  const positions   = createAugmentedTypedArray(3, numVertices);\n  const normals     = createAugmentedTypedArray(3, numVertices);\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (let z = 0; z <= subdivisionsDown; z++) {\n      const uBack = x / (subdivisionsThick - 1);\n      const v = z / subdivisionsDown;\n      const xBack = (uBack - 0.5) * 2;\n      const angle = (startOffset + (v * offsetRange)) * Math.PI;\n      const s = Math.sin(angle);\n      const c = Math.cos(angle);\n      const radius = lerp(verticalRadius, arcRadius, s);\n      const px = xBack * thickness;\n      const py = c * verticalRadius;\n      const pz = s * radius;\n      positions.push(px, py, pz);\n      const n = add(multiply([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  }\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let x = 0; x < subdivisionsThick; x++) {\n    const uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  }\n\n  // Do outer surface.\n  const indices = createAugmentedTypedArray(3, (subdivisionsDown * 2) * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (let z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(\n          leftArcOffset + z + 0,\n          leftArcOffset + z + 1,\n          rightArcOffset + z + 0);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          leftArcOffset + z + 1,\n          rightArcOffset + z + 1,\n          rightArcOffset + z + 0);\n    }\n  }\n\n  const numVerticesDown = subdivisionsDown + 1;\n  // front\n  createSurface(numVerticesDown * 0, numVerticesDown * 4);\n  // right\n  createSurface(numVerticesDown * 5, numVerticesDown * 7);\n  // back\n  createSurface(numVerticesDown * 6, numVerticesDown * 2);\n  // left\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n\n  return {\n    position: positions,\n    normal:   normals,\n    texcoord: texcoords,\n    indices:  indices,\n  };\n}\n\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n /**\n  * Creates cylinder buffers. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n  * @param {number} radius Radius of cylinder.\n  * @param {number} height Height of cylinder.\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n  * @param {boolean} [topCap] Create top cap. Default = true.\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n  * @return {Object.<string, WebGLBuffer>} The created buffers.\n  * @memberOf module:twgl/primitives\n  * @function createCylinderBuffers\n  */\n\n /**\n  * Creates cylinder vertices. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param {number} radius Radius of cylinder.\n  * @param {number} height Height of cylinder.\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n  * @param {boolean} [topCap] Create top cap. Default = true.\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n  * @return {Object.<string, TypedArray>} The created vertices.\n  * @memberOf module:twgl/primitives\n  */\nfunction createCylinderVertices(\n    radius,\n    height,\n    radialSubdivisions,\n    verticalSubdivisions,\n    topCap,\n    bottomCap) {\n  return createTruncatedConeVertices(\n      radius,\n      radius,\n      height,\n      radialSubdivisions,\n      verticalSubdivisions,\n      topCap,\n      bottomCap);\n}\n\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createTorusVertices(\n    radius,\n    thickness,\n    radialSubdivisions,\n    bodySubdivisions,\n    startAngle,\n    endAngle) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw new Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  const range = endAngle - startAngle;\n\n  const radialParts = radialSubdivisions + 1;\n  const bodyParts   = bodySubdivisions + 1;\n  const numVertices = radialParts * bodyParts;\n  const positions   = createAugmentedTypedArray(3, numVertices);\n  const normals     = createAugmentedTypedArray(3, numVertices);\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\n  const indices     = createAugmentedTypedArray(3, (radialSubdivisions) * (bodySubdivisions) * 2, Uint16Array);\n\n  for (let slice = 0; slice < bodyParts; ++slice) {\n    const v = slice / bodySubdivisions;\n    const sliceAngle = v * Math.PI * 2;\n    const sliceSin = Math.sin(sliceAngle);\n    const ringRadius = radius + sliceSin * thickness;\n    const ny = Math.cos(sliceAngle);\n    const y = ny * thickness;\n    for (let ring = 0; ring < radialParts; ++ring) {\n      const u = ring / radialSubdivisions;\n      const ringAngle = startAngle + u * range;\n      const xSin = Math.sin(ringAngle);\n      const zCos = Math.cos(ringAngle);\n      const x = xSin * ringRadius;\n      const z = zCos * ringRadius;\n      const nx = xSin * sliceSin;\n      const nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (let slice = 0; slice < bodySubdivisions; ++slice) {  // eslint-disable-line\n    for (let ring = 0; ring < radialSubdivisions; ++ring) {  // eslint-disable-line\n      const nextRingIndex  = 1 + ring;\n      const nextSliceIndex = 1 + slice;\n      indices.push(radialParts * slice          + ring,\n                   radialParts * nextSliceIndex + ring,\n                   radialParts * slice          + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + ring,\n                   radialParts * nextSliceIndex + nextRingIndex,\n                   radialParts * slice          + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal:   normals,\n    texcoord: texcoords,\n    indices:  indices,\n  };\n}\n\n\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createDiscVertices(\n    radius,\n    divisions,\n    stacks,\n    innerRadius,\n    stackPower) {\n  if (divisions < 3) {\n    throw new Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0;\n\n  // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n  const numVertices = (divisions + 1) * (stacks + 1);\n\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n  const indices   = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n\n  let firstIndex = 0;\n  const radiusSpan = radius - innerRadius;\n  const pointsPerStack = divisions + 1;\n\n  // Build the disk one stack at a time.\n  for (let stack = 0; stack <= stacks; ++stack) {\n    const stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (let i = 0; i <= divisions; ++i) {\n      const theta = 2.0 * Math.PI * i / divisions;\n      const x = stackRadius * Math.cos(theta);\n      const z = stackRadius * Math.sin(theta);\n\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - (i / divisions), stack / stacks);\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        const a = firstIndex + (i + 1);\n        const b = firstIndex + i;\n        const c = firstIndex + i - pointsPerStack;\n        const d = firstIndex + (i + 1) - pointsPerStack;\n\n        // Make a quad of the vertices a, b, c, d.\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n * @private\n */\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, AugmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, AugmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  const numElements = vertices.position.numElements;\n  const vColors = createAugmentedTypedArray(4, numElements, Uint8Array);\n  const rand = options.rand || function(ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n  vertices.color = vColors;\n  if (vertices.indices) {\n    // just make random colors if index\n    for (let ii = 0; ii < numElements; ++ii) {\n      vColors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    const numVertsPerColor = options.vertsPerColor || 3;\n    const numSets = numElements / numVertsPerColor;\n    for (let ii = 0; ii < numSets; ++ii) {  // eslint-disable-line\n      const color = [rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3)];\n      for (let jj = 0; jj < numVertsPerColor; ++jj) {\n        vColors.push(color);\n      }\n    }\n  }\n  return vertices;\n}\n\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n * @private\n */\nfunction createBufferFunc(fn) {\n  return function(gl) {\n    const arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return createBuffersFromArrays(gl, arrays);\n  };\n}\n\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n * @private\n */\nfunction createBufferInfoFunc(fn) {\n  return function(gl) {\n    const arrays = fn.apply(null,  Array.prototype.slice.call(arguments, 1));\n    return createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nconst arraySpecPropertyNames = [\n  \"numComponents\",\n  \"size\",\n  \"type\",\n  \"normalize\",\n  \"stride\",\n  \"offset\",\n  \"attrib\",\n  \"name\",\n  \"attribName\",\n];\n\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n * @private\n */\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  const length = src.length;\n  for (let ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n * @private\n */\nfunction createArrayOfSameType(srcArray, length) {\n  const arraySrc = getArray$1(srcArray);\n  const newArray = new arraySrc.constructor(length);\n  let newArraySpec = newArray;\n  // If it appears to have been augmented make new one augmented\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  }\n  // If it was a full spec make new one a full spec\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray,\n    };\n    copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n  return newArraySpec;\n}\n\n/**\n * Concatenates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primitives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatenated vertices.\n * @memberOf module:twgl/primitives\n */\nfunction concatVertices(arrayOfArrays) {\n  const names = {};\n  let baseName;\n  // get names of all arrays.\n  // and numElements for each set of vertices\n  for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n    const arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function(name) {  // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n      const arrayInfo = arrays[name];\n      const numComponents = getNumComponents$1(arrayInfo, name);\n      const array = getArray$1(arrayInfo);\n      const numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  }\n\n  // compute length of combined array\n  // and return one for reference\n  function getLengthOfCombinedArrays(name) {\n    let length = 0;\n    let arraySpec;\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n      const arrays = arrayOfArrays[ii];\n      const arrayInfo = arrays[name];\n      const array = getArray$1(arrayInfo);\n      length += array.length;\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n    return {\n      length: length,\n      spec: arraySpec,\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    let baseIndex = 0;\n    let offset = 0;\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n      const arrays = arrayOfArrays[ii];\n      const arrayInfo = arrays[name];\n      const array = getArray$1(arrayInfo);\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n      offset += array.length;\n    }\n  }\n\n  const base = names[baseName];\n\n  const newArrays = {};\n  Object.keys(names).forEach(function(name) {\n    const info = getLengthOfCombinedArrays(name);\n    const newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray$1(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The duplicated vertices.\n * @memberOf module:twgl/primitives\n */\nfunction duplicateVertices(arrays) {\n  const newArrays = {};\n  Object.keys(arrays).forEach(function(name) {\n    const arraySpec = arrays[name];\n    const srcArray = getArray$1(arraySpec);\n    const newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray$1(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nconst create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nconst create3DFBuffers = createBufferFunc(create3DFVertices);\nconst createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nconst createCubeBuffers = createBufferFunc(createCubeVertices);\nconst createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nconst createPlaneBuffers = createBufferFunc(createPlaneVertices);\nconst createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nconst createSphereBuffers = createBufferFunc(createSphereVertices);\nconst createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nconst createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nconst createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nconst createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nconst createCrescentBufferInfo = createBufferInfoFunc(createCrescentVertices);\nconst createCrescentBuffers = createBufferFunc(createCrescentVertices);\nconst createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nconst createCylinderBuffers = createBufferFunc(createCylinderVertices);\nconst createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nconst createTorusBuffers = createBufferFunc(createTorusVertices);\nconst createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nconst createDiscBuffers = createBufferFunc(createDiscVertices);\n\n// these were mis-spelled until 4.12\nconst createCresentBufferInfo = createCrescentBufferInfo;\nconst createCresentBuffers = createCrescentBuffers;\nconst createCresentVertices = createCrescentVertices;\n\nvar primitives = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  create3DFBufferInfo: create3DFBufferInfo,\n  create3DFBuffers: create3DFBuffers,\n  create3DFVertices: create3DFVertices,\n  createAugmentedTypedArray: createAugmentedTypedArray,\n  createCubeBufferInfo: createCubeBufferInfo,\n  createCubeBuffers: createCubeBuffers,\n  createCubeVertices: createCubeVertices,\n  createPlaneBufferInfo: createPlaneBufferInfo,\n  createPlaneBuffers: createPlaneBuffers,\n  createPlaneVertices: createPlaneVertices,\n  createSphereBufferInfo: createSphereBufferInfo,\n  createSphereBuffers: createSphereBuffers,\n  createSphereVertices: createSphereVertices,\n  createTruncatedConeBufferInfo: createTruncatedConeBufferInfo,\n  createTruncatedConeBuffers: createTruncatedConeBuffers,\n  createTruncatedConeVertices: createTruncatedConeVertices,\n  createXYQuadBufferInfo: createXYQuadBufferInfo,\n  createXYQuadBuffers: createXYQuadBuffers,\n  createXYQuadVertices: createXYQuadVertices,\n  createCresentBufferInfo: createCresentBufferInfo,\n  createCresentBuffers: createCresentBuffers,\n  createCresentVertices: createCresentVertices,\n  createCrescentBufferInfo: createCrescentBufferInfo,\n  createCrescentBuffers: createCrescentBuffers,\n  createCrescentVertices: createCrescentVertices,\n  createCylinderBufferInfo: createCylinderBufferInfo,\n  createCylinderBuffers: createCylinderBuffers,\n  createCylinderVertices: createCylinderVertices,\n  createTorusBufferInfo: createTorusBufferInfo,\n  createTorusBuffers: createTorusBuffers,\n  createTorusVertices: createTorusVertices,\n  createDiscBufferInfo: createDiscBufferInfo,\n  createDiscBuffers: createDiscBuffers,\n  createDiscVertices: createDiscVertices,\n  deindexVertices: deindexVertices,\n  flattenNormals: flattenNormals,\n  makeRandomVertexColors: makeRandomVertexColors,\n  reorientDirections: reorientDirections,\n  reorientNormals: reorientNormals,\n  reorientPositions: reorientPositions,\n  reorientVertices: reorientVertices,\n  concatVertices: concatVertices,\n  duplicateVertices: duplicateVertices\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n * @private\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc');\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @return {string} enum string or hex value\n * @memberOf module:twgl\n * @function glEnumToString\n */\nconst glEnumToString = (function() {\n  const haveEnumsForType = {};\n  const enums = {};\n\n  function addEnums(gl) {\n    const type = gl.constructor.name;\n    if (!haveEnumsForType[type]) {\n      for (const key in gl) {\n        if (typeof gl[key] === 'number') {\n          const existing = enums[gl[key]];\n          enums[gl[key]] = existing ? `${existing} | ${key}` : key;\n        }\n      }\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || (\"0x\" + value.toString(16));\n  };\n}());\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  glEnumToString: glEnumToString,\n  isWebGL1: isWebGL1,\n  isWebGL2: isWebGL2\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nconst defaults$1 = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined,\n};\nconst isArrayBuffer$1 = isArrayBuffer;\n\n// Should we make this on demand?\nconst getShared2DContext = function() {\n  let s_ctx;\n  return function getShared2DContext() {\n    s_ctx = s_ctx ||\n        ((typeof document !== 'undefined' && document.createElement)\n          ? document.createElement(\"canvas\").getContext(\"2d\")\n          : null);\n    return s_ctx;\n  };\n}();\n\n// NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an ImageBitmap to be cut. Unfortunately cutting an ImageBitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\nconst ALPHA                          = 0x1906;\nconst RGB                            = 0x1907;\nconst RGBA                           = 0x1908;\nconst LUMINANCE                      = 0x1909;\nconst LUMINANCE_ALPHA                = 0x190A;\nconst DEPTH_COMPONENT                = 0x1902;\nconst DEPTH_STENCIL                  = 0x84F9;\n\n/* TextureWrapMode */\n// const REPEAT                         = 0x2901;\n// const MIRRORED_REPEAT                = 0x8370;\nconst CLAMP_TO_EDGE                  = 0x812f;\n\n/* TextureMagFilter */\nconst NEAREST                        = 0x2600;\nconst LINEAR                         = 0x2601;\n\n/* TextureMinFilter */\n// const NEAREST_MIPMAP_NEAREST         = 0x2700;\n// const LINEAR_MIPMAP_NEAREST          = 0x2701;\n// const NEAREST_MIPMAP_LINEAR          = 0x2702;\n// const LINEAR_MIPMAP_LINEAR           = 0x2703;\n\n/* Texture Target */\nconst TEXTURE_2D                     = 0x0de1;\nconst TEXTURE_CUBE_MAP               = 0x8513;\nconst TEXTURE_3D                     = 0x806f;\nconst TEXTURE_2D_ARRAY               = 0x8c1a;\n\n/* Cubemap Targets */\nconst TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515;\nconst TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516;\nconst TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517;\nconst TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518;\nconst TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519;\nconst TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851a;\n\n/* Texture Parameters */\nconst TEXTURE_MIN_FILTER             = 0x2801;\nconst TEXTURE_MAG_FILTER             = 0x2800;\nconst TEXTURE_WRAP_S                 = 0x2802;\nconst TEXTURE_WRAP_T                 = 0x2803;\nconst TEXTURE_WRAP_R                 = 0x8072;\nconst TEXTURE_MIN_LOD                = 0x813a;\nconst TEXTURE_MAX_LOD                = 0x813b;\nconst TEXTURE_BASE_LEVEL             = 0x813c;\nconst TEXTURE_MAX_LEVEL              = 0x813d;\n\n\n/* Pixel store */\nconst UNPACK_ALIGNMENT                   = 0x0cf5;\nconst UNPACK_ROW_LENGTH                  = 0x0cf2;\nconst UNPACK_IMAGE_HEIGHT                = 0x806e;\nconst UNPACK_SKIP_PIXELS                 = 0x0cf4;\nconst UNPACK_SKIP_ROWS                   = 0x0cf3;\nconst UNPACK_SKIP_IMAGES                 = 0x806d;\nconst UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\nconst UNPACK_PREMULTIPLY_ALPHA_WEBGL     = 0x9241;\nconst UNPACK_FLIP_Y_WEBGL                = 0x9240;\n\nconst R8                           = 0x8229;\nconst R8_SNORM                     = 0x8F94;\nconst R16F                         = 0x822D;\nconst R32F                         = 0x822E;\nconst R8UI                         = 0x8232;\nconst R8I                          = 0x8231;\nconst RG16UI                       = 0x823A;\nconst RG16I                        = 0x8239;\nconst RG32UI                       = 0x823C;\nconst RG32I                        = 0x823B;\nconst RG8                          = 0x822B;\nconst RG8_SNORM                    = 0x8F95;\nconst RG16F                        = 0x822F;\nconst RG32F                        = 0x8230;\nconst RG8UI                        = 0x8238;\nconst RG8I                         = 0x8237;\nconst R16UI                        = 0x8234;\nconst R16I                         = 0x8233;\nconst R32UI                        = 0x8236;\nconst R32I                         = 0x8235;\nconst RGB8                         = 0x8051;\nconst SRGB8                        = 0x8C41;\nconst RGB565                       = 0x8D62;\nconst RGB8_SNORM                   = 0x8F96;\nconst R11F_G11F_B10F               = 0x8C3A;\nconst RGB9_E5                      = 0x8C3D;\nconst RGB16F                       = 0x881B;\nconst RGB32F                       = 0x8815;\nconst RGB8UI                       = 0x8D7D;\nconst RGB8I                        = 0x8D8F;\nconst RGB16UI                      = 0x8D77;\nconst RGB16I                       = 0x8D89;\nconst RGB32UI                      = 0x8D71;\nconst RGB32I                       = 0x8D83;\nconst RGBA8                        = 0x8058;\nconst SRGB8_ALPHA8                 = 0x8C43;\nconst RGBA8_SNORM                  = 0x8F97;\nconst RGB5_A1                      = 0x8057;\nconst RGBA4                        = 0x8056;\nconst RGB10_A2                     = 0x8059;\nconst RGBA16F                      = 0x881A;\nconst RGBA32F                      = 0x8814;\nconst RGBA8UI                      = 0x8D7C;\nconst RGBA8I                       = 0x8D8E;\nconst RGB10_A2UI                   = 0x906F;\nconst RGBA16UI                     = 0x8D76;\nconst RGBA16I                      = 0x8D88;\nconst RGBA32I                      = 0x8D82;\nconst RGBA32UI                     = 0x8D70;\n\nconst DEPTH_COMPONENT16            = 0x81A5;\nconst DEPTH_COMPONENT24            = 0x81A6;\nconst DEPTH_COMPONENT32F           = 0x8CAC;\nconst DEPTH32F_STENCIL8            = 0x8CAD;\nconst DEPTH24_STENCIL8             = 0x88F0;\n\n/* DataType */\nconst BYTE$2                         = 0x1400;\nconst UNSIGNED_BYTE$2                = 0x1401;\nconst SHORT$2                        = 0x1402;\nconst UNSIGNED_SHORT$2               = 0x1403;\nconst INT$2                          = 0x1404;\nconst UNSIGNED_INT$2                 = 0x1405;\nconst FLOAT$2                        = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4$1       = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1$1       = 0x8034;\nconst UNSIGNED_SHORT_5_6_5$1         = 0x8363;\nconst HALF_FLOAT$1                   = 0x140B;\nconst HALF_FLOAT_OES               = 0x8D61;  // Thanks Khronos for making this different >:(\nconst UNSIGNED_INT_2_10_10_10_REV$1  = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV$1 = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV$1     = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV$1 = 0x8DAD;\nconst UNSIGNED_INT_24_8$1            = 0x84FA;\n\nconst RG                           = 0x8227;\nconst RG_INTEGER                   = 0x8228;\nconst RED                          = 0x1903;\nconst RED_INTEGER                  = 0x8D94;\nconst RGB_INTEGER                  = 0x8D98;\nconst RGBA_INTEGER                 = 0x8D99;\n\nconst formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  const f = formatInfo;\n  f[ALPHA]           = { numColorComponents: 1, };\n  f[LUMINANCE]       = { numColorComponents: 1, };\n  f[LUMINANCE_ALPHA] = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGBA]            = { numColorComponents: 4, };\n  f[RED]             = { numColorComponents: 1, };\n  f[RED_INTEGER]     = { numColorComponents: 1, };\n  f[RG]              = { numColorComponents: 2, };\n  f[RG_INTEGER]      = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGB_INTEGER]     = { numColorComponents: 3, };\n  f[RGBA]            = { numColorComponents: 4, };\n  f[RGBA_INTEGER]    = { numColorComponents: 4, };\n  f[DEPTH_COMPONENT] = { numColorComponents: 1, };\n  f[DEPTH_STENCIL]   = { numColorComponents: 2, };\n}\n\n/**\n * @typedef {Object} TextureFormatDetails\n * @property {number} textureFormat format to pass texImage2D and similar functions.\n * @property {boolean} colorRenderable true if you can render to this format of texture.\n * @property {boolean} textureFilterable true if you can filter the texture, false if you can ony use `NEAREST`.\n * @property {number[]} type Array of possible types you can pass to texImage2D and similar function\n * @property {Object.<number,number>} bytesPerElementMap A map of types to bytes per element\n * @private\n */\n\nlet s_textureInternalFormatInfo;\nfunction getTextureInternalFormatInfo(internalFormat) {\n  if (!s_textureInternalFormatInfo) {\n    // NOTE: these properties need unique names so we can let Uglify mangle the name.\n    const t = {};\n    // unsized formats\n    t[ALPHA]              = { textureFormat: ALPHA,           colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2], };\n    t[LUMINANCE]          = { textureFormat: LUMINANCE,       colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2], };\n    t[LUMINANCE_ALPHA]    = { textureFormat: LUMINANCE_ALPHA, colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2, 4, 4, 8],        type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2], };\n    t[RGB]                = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 6, 6, 12, 2],    type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2, UNSIGNED_SHORT_5_6_5$1], };\n    t[RGBA]               = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 8, 8, 16, 2, 2], type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2, UNSIGNED_SHORT_4_4_4_4$1, UNSIGNED_SHORT_5_5_5_1$1], };\n    t[DEPTH_COMPONENT]    = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [2, 4],              type: [UNSIGNED_INT$2, UNSIGNED_SHORT$2], };\n\n    // sized formats\n    t[R8]                 = { textureFormat: RED,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1],        type: [UNSIGNED_BYTE$2], };\n    t[R8_SNORM]           = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [1],        type: [BYTE$2], };\n    t[R16F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [4, 2],     type: [FLOAT$2, HALF_FLOAT$1], };\n    t[R32F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: false, bytesPerElement: [4],        type: [FLOAT$2], };\n    t[R8UI]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [UNSIGNED_BYTE$2], };\n    t[R8I]                = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [BYTE$2], };\n    t[R16UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_SHORT$2], };\n    t[R16I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [SHORT$2], };\n    t[R32UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT$2], };\n    t[R32I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [INT$2], };\n    t[RG8]                = { textureFormat: RG,              colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2],        type: [UNSIGNED_BYTE$2], };\n    t[RG8_SNORM]          = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [2],        type: [BYTE$2], };\n    t[RG16F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [8, 4],     type: [FLOAT$2, HALF_FLOAT$1], };\n    t[RG32F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: false, bytesPerElement: [8],        type: [FLOAT$2], };\n    t[RG8UI]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_BYTE$2], };\n    t[RG8I]               = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [BYTE$2], };\n    t[RG16UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_SHORT$2], };\n    t[RG16I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [SHORT$2], };\n    t[RG32UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_INT$2], };\n    t[RG32I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [INT$2], };\n    t[RGB8]               = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE$2], };\n    t[SRGB8]              = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE$2], };\n    t[RGB565]             = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 2],     type: [UNSIGNED_BYTE$2, UNSIGNED_SHORT_5_6_5$1], };\n    t[RGB8_SNORM]         = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [BYTE$2], };\n    t[R11F_G11F_B10F]     = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT$2, HALF_FLOAT$1, UNSIGNED_INT_10F_11F_11F_REV$1], };\n    t[RGB9_E5]            = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT$2, HALF_FLOAT$1, UNSIGNED_INT_5_9_9_9_REV$1], };\n    t[RGB16F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6],    type: [FLOAT$2, HALF_FLOAT$1], };\n    t[RGB32F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [FLOAT$2], };\n    t[RGB8UI]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [UNSIGNED_BYTE$2], };\n    t[RGB8I]              = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [BYTE$2], };\n    t[RGB16UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [UNSIGNED_SHORT$2], };\n    t[RGB16I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [SHORT$2], };\n    t[RGB32UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [UNSIGNED_INT$2], };\n    t[RGB32I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [INT$2], };\n    t[RGBA8]              = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE$2], };\n    t[SRGB8_ALPHA8]       = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE$2], };\n    t[RGBA8_SNORM]        = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [4],        type: [BYTE$2], };\n    t[RGB5_A1]            = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2, 4],  type: [UNSIGNED_BYTE$2, UNSIGNED_SHORT_5_5_5_1$1, UNSIGNED_INT_2_10_10_10_REV$1], };\n    t[RGBA4]              = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2],     type: [UNSIGNED_BYTE$2, UNSIGNED_SHORT_4_4_4_4$1], };\n    t[RGB10_A2]           = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV$1], };\n    t[RGBA16F]            = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [16, 8],    type: [FLOAT$2, HALF_FLOAT$1], };\n    t[RGBA32F]            = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: false, bytesPerElement: [16],       type: [FLOAT$2], };\n    t[RGBA8UI]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_BYTE$2], };\n    t[RGBA8I]             = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [BYTE$2], };\n    t[RGB10_A2UI]         = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV$1], };\n    t[RGBA16UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_SHORT$2], };\n    t[RGBA16I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [SHORT$2], };\n    t[RGBA32I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [INT$2], };\n    t[RGBA32UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [UNSIGNED_INT$2], };\n    // Sized Internal\n    t[DEPTH_COMPONENT16]  = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [2, 4],     type: [UNSIGNED_SHORT$2, UNSIGNED_INT$2], };\n    t[DEPTH_COMPONENT24]  = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT$2], };\n    t[DEPTH_COMPONENT32F] = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT$2], };\n    t[DEPTH24_STENCIL8]   = { textureFormat: DEPTH_STENCIL,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_24_8$1], };\n    t[DEPTH32F_STENCIL8]  = { textureFormat: DEPTH_STENCIL,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT_32_UNSIGNED_INT_24_8_REV$1], };\n\n    Object.keys(t).forEach(function(internalFormat) {\n      const info = t[internalFormat];\n      info.bytesPerElementMap = {};\n      info.bytesPerElement.forEach(function(bytesPerElement, ndx) {\n        const type = info.type[ndx];\n        info.bytesPerElementMap[type] = bytesPerElement;\n      });\n    });\n    s_textureInternalFormatInfo = t;\n  }\n  return s_textureInternalFormatInfo[internalFormat];\n}\n\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  const bytesPerElement = info.bytesPerElementMap[type];\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n  return bytesPerElement;\n}\n\n/**\n * Info related to a specific texture internalFormat as returned\n * from {@link module:twgl/textures.getFormatAndTypeForInternalFormat}.\n *\n * @typedef {Object} TextureFormatInfo\n * @property {number} format Format to pass to texImage2D and related functions\n * @property {number} type Type to pass to texImage2D and related functions\n * @memberOf module:twgl/textures\n */\n\n/**\n * Gets the format and type for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {module:twgl/textures.TextureFormatInfo} the corresponding format and type,\n * @memberOf module:twgl/textures\n */\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return {\n    format: info.textureFormat,\n    type: info.type[0],\n  };\n}\n\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n * @private\n */\nfunction isPowerOf2(value) {\n  return (value & (value - 1)) === 0;\n}\n\n/**\n * Gets whether or not we can generate mips for the given\n * internal format.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number} width The width parameter from texImage2D etc..\n * @param {number} height The height parameter from texImage2D etc..\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\nfunction canGenerateMipmap(gl, width, height, internalFormat) {\n  if (!isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return info.colorRenderable && info.textureFilterable;\n}\n\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\nfunction canFilter(internalFormat) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return info.textureFilterable;\n}\n\n/**\n * Gets the number of components for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\nfunction getNumComponentsForFormat(format) {\n  const info = formatInfo[format];\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n  return info.numColorComponents;\n}\n\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n * @private\n */\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer$1(src)) {\n    return getGLTypeForTypedArray(src);\n  }\n  return defaultType || UNSIGNED_BYTE$2;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n  if (!width && !height) {\n    const size = Math.sqrt(numElements / (target === TEXTURE_CUBE_MAP ? 6 : 1));\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n  return {\n    width: width,\n    height: height,\n  };\n}\n\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\nfunction setDefaultTextureColor(color) {\n  defaults$1.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults$1(newDefaults) {\n  copyExistingProperties(newDefaults, defaults$1);\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number[]|ArrayBufferView} [color] Color to initialize this texture with if loading an image asynchronously.\n *     The default use a blue 1x1 pixel texture. You can set another default by calling `twgl.setDefaults`\n *     or you can set an individual texture's initial color by setting this property. Example: `[1, .5, .5, 1]` = pink\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediately. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then each entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n\n// NOTE: While querying GL is considered slow it's not remotely as slow\n// as uploading a texture. On top of that you're unlikely to call this in\n// a perf critical loop. Even if upload a texture every frame that's unlikely\n// to be more than 1 or 2 textures a frame. In other words, the benefits of\n// making the API easy to use outweigh any supposed perf benefits\n//\n// Also note I get that having one global of these is bad practice.\n// As long as it's used correctly it means no garbage which probably\n// doesn't matter when dealing with textures but old habits die hard.\nconst lastPackState = {};\n\n/**\n * Saves any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction savePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    lastPackState.colorspaceConversion = gl.getParameter(UNPACK_COLORSPACE_CONVERSION_WEBGL);\n    gl.pixelStorei(UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\n  }\n  if (options.premultiplyAlpha !== undefined) {\n    lastPackState.premultiplyAlpha = gl.getParameter(UNPACK_PREMULTIPLY_ALPHA_WEBGL);\n    gl.pixelStorei(UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\n  }\n  if (options.flipY !== undefined) {\n    lastPackState.flipY = gl.getParameter(UNPACK_FLIP_Y_WEBGL);\n    gl.pixelStorei(UNPACK_FLIP_Y_WEBGL, options.flipY);\n  }\n}\n\n/**\n * Restores any packing state that was set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction restorePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    gl.pixelStorei(UNPACK_COLORSPACE_CONVERSION_WEBGL, lastPackState.colorspaceConversion);\n  }\n  if (options.premultiplyAlpha !== undefined) {\n    gl.pixelStorei(UNPACK_PREMULTIPLY_ALPHA_WEBGL, lastPackState.premultiplyAlpha);\n  }\n  if (options.flipY !== undefined) {\n    gl.pixelStorei(UNPACK_FLIP_Y_WEBGL, lastPackState.flipY);\n  }\n}\n\n/**\n * Saves state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction saveSkipState(gl) {\n  lastPackState.unpackAlignment   = gl.getParameter(UNPACK_ALIGNMENT);\n  if (isWebGL2(gl)) {\n    lastPackState.unpackRowLength   = gl.getParameter(UNPACK_ROW_LENGTH);\n    lastPackState.unpackImageHeight = gl.getParameter(UNPACK_IMAGE_HEIGHT);\n    lastPackState.unpackSkipPixels  = gl.getParameter(UNPACK_SKIP_PIXELS);\n    lastPackState.unpackSkipRows    = gl.getParameter(UNPACK_SKIP_ROWS);\n    lastPackState.unpackSkipImages  = gl.getParameter(UNPACK_SKIP_IMAGES);\n  }\n}\n\n/**\n * Restores state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction restoreSkipState(gl) {\n  gl.pixelStorei(UNPACK_ALIGNMENT,    lastPackState.unpackAlignment);\n  if (isWebGL2(gl)) {\n    gl.pixelStorei(UNPACK_ROW_LENGTH,   lastPackState.unpackRowLength);\n    gl.pixelStorei(UNPACK_IMAGE_HEIGHT, lastPackState.unpackImageHeight);\n    gl.pixelStorei(UNPACK_SKIP_PIXELS,  lastPackState.unpackSkipPixels);\n    gl.pixelStorei(UNPACK_SKIP_ROWS,    lastPackState.unpackSkipRows);\n    gl.pixelStorei(UNPACK_SKIP_IMAGES,  lastPackState.unpackSkipImages);\n  }\n}\n\n\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParameteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @private\n */\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, TEXTURE_MAG_FILTER, options.minMag);\n  }\n  if (options.min) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_FILTER, options.min);\n  }\n  if (options.mag) {\n    parameteriFn.call(gl, target, TEXTURE_MAG_FILTER, options.mag);\n  }\n  if (options.wrap) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, TEXTURE_WRAP_T, options.wrap);\n    if (target === TEXTURE_3D || isSampler(gl, target)) {\n      parameteriFn.call(gl, target, TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_R, options.wrapR);\n  }\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_S, options.wrapS);\n  }\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_T, options.wrapT);\n  }\n  if (options.minLod) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_LOD, options.minLod);\n  }\n  if (options.maxLod) {\n    parameteriFn.call(gl, target, TEXTURE_MAX_LOD, options.maxLod);\n  }\n  if (options.baseLevel) {\n    parameteriFn.call(gl, target, TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n  if (options.maxLevel) {\n    parameteriFn.call(gl, target, TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n}\n\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureParameters(gl, tex, options) {\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n * @private\n */\nfunction createSampler(gl, options) {\n  const sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n * @private\n */\nfunction createSamplers(gl, samplerOptions) {\n  const samplers = {};\n  Object.keys(samplerOptions).forEach(function(name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n * @private\n */\nfunction make1Pixel(color) {\n  color = color || defaults$1.textureColor;\n  if (isArrayBuffer$1(color)) {\n    return color;\n  }\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @memberOf module:twgl/textures\n */\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat) {\n  options = options || defaults$1.textureOptions;\n  internalFormat = internalFormat || RGBA;\n  const target = options.target || TEXTURE_2D;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n  if (canGenerateMipmap(gl, width, height, internalFormat)) {\n    gl.generateMipmap(target);\n  } else {\n    const filtering = canFilter(internalFormat) ? LINEAR : NEAREST;\n    gl.texParameteri(target, TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(target, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || (options.auto === undefined && options.level === undefined);\n}\n\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n * @private\n */\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [\n      TEXTURE_CUBE_MAP_POSITIVE_X,\n      TEXTURE_CUBE_MAP_NEGATIVE_X,\n      TEXTURE_CUBE_MAP_POSITIVE_Y,\n      TEXTURE_CUBE_MAP_NEGATIVE_Y,\n      TEXTURE_CUBE_MAP_POSITIVE_Z,\n      TEXTURE_CUBE_MAP_NEGATIVE_Z,\n    ];\n}\n\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundant but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n * @private\n */\nfunction getCubeFacesWithNdx(gl, options) {\n  const faces = getCubeFaceOrder(gl, options);\n  // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n  const facesWithNdx = faces.map(function(face, ndx) {\n    return { face: face, ndx: ndx };\n  });\n  facesWithNdx.sort(function(a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults$1.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  const level = options.level || 0;\n  let width = element.width;\n  let height = element.height;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || formatType.type;\n  savePackState(gl, options);\n  gl.bindTexture(target, tex);\n  if (target === TEXTURE_CUBE_MAP) {\n    // guess the parts\n    const imgWidth  = element.width;\n    const imgHeight = element.height;\n    let size;\n    let slices;\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n    const ctx = getShared2DContext();\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\n        const xOffset = slices[f.ndx * 2 + 0] * size;\n        const yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      });\n      // Free up the canvas memory\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (typeof createImageBitmap !== 'undefined') {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\n        const xOffset = slices[f.ndx * 2 + 0] * size;\n        const yOffset = slices[f.ndx * 2 + 1] * size;\n        // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be un-renderable.\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n        createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none',\n        })\n        .then(function(imageBitmap) {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          restorePackState(gl, options);\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n          }\n        });\n      });\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    const smallest = Math.min(element.width, element.height);\n    const largest = Math.max(element.width, element.height);\n    const depth = largest / smallest;\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n    const xMult = element.width  === largest ? 1 : 0;\n    const yMult = element.height === largest ? 1 : 0;\n    saveSkipState(gl);\n    gl.pixelStorei(UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n    for (let d = 0; d < depth; ++d) {\n      const srcX = d * smallest * xMult;\n      const srcY = d * smallest * yMult;\n      gl.pixelStorei(UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n    restoreSkipState(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n  restorePackState(gl, options);\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n  }\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {\n}\n\n/**\n * Checks whether the url's origin is the same so that we can set the `crossOrigin`\n * @param {string} url url to image\n * @returns {boolean} true if the window's origin is the same as image's url\n * @private\n */\nfunction urlIsSameOrigin(url) {\n  if (typeof document !== 'undefined') {\n    // for IE really\n    const a = document.createElement('a');\n    a.href = url;\n    return a.hostname === location.hostname &&\n           a.port     === location.port &&\n           a.protocol === location.protocol;\n  } else {\n    const localOrigin = (new URL(location.href)).origin;\n    const urlOrigin = (new URL(url, location.href)).origin;\n    return urlOrigin === localOrigin;\n  }\n}\n\nfunction setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin) {\n  return crossOrigin === undefined && !urlIsSameOrigin(url)\n     ? 'anonymous'\n     : crossOrigin;\n}\n\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n * @private\n */\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  let img;\n  crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults$1.crossOrigin;\n  crossOrigin = setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin);\n  if (typeof Image !== 'undefined') {\n    img = new Image();\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    const clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError);  // eslint-disable-line\n      img.removeEventListener('load', onLoad);  // eslint-disable-line\n      img = null;\n    };\n\n    const onError = function onError() {\n      const msg = \"couldn't load image: \" + url;\n      error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    const onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (typeof ImageBitmap !== 'undefined') {\n    let err;\n    let bm;\n    const cb = function cb() {\n      callback(err, bm);\n    };\n\n    const options = {};\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n    fetch(url, options).then(function(response) {\n      if (!response.ok) {\n        throw response;\n      }\n      return response.blob();\n    }).then(function(blob) {\n      return createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none',\n      });\n    }).then(function(bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function(e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n  return img;\n}\n\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n * @private\n */\nfunction isTexImageSource(obj) {\n  return (typeof ImageBitmap !== 'undefined' && obj instanceof ImageBitmap) ||\n         (typeof ImageData !== 'undefined'  && obj instanceof ImageData) ||\n         (typeof HTMLElement !== 'undefined'  && obj instanceof HTMLElement);\n}\n\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @private\n */\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function() {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults$1.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  if (options.color === false) {\n    return;\n  }\n  // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n  const color = make1Pixel(options.color);\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, RGBA, 1, 1, 0, RGBA, UNSIGNED_BYTE$2, color);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, 0, RGBA, 1, 1, 1, 0, RGBA, UNSIGNED_BYTE$2, color);\n  } else {\n    gl.texImage2D(target, 0, RGBA, 1, 1, 0, RGBA, UNSIGNED_BYTE$2, color);\n  }\n}\n\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} source image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as appropriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults$1.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  const img = loadAndUseImage(options.src, options.crossOrigin, function(err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  const urls = options.src;\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || UNSIGNED_BYTE$2;\n  const target = options.target || TEXTURE_2D;\n  if (target !== TEXTURE_CUBE_MAP) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  let numToLoad = 6;\n  const errors = [];\n  const faces = getCubeFaceOrder(gl, options);\n  let imgs;  // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function(err, img) {\n      --numToLoad;\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex);\n\n          // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder().forEach(function(otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          restorePackState(gl, options);\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function(url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  const urls = options.src;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || UNSIGNED_BYTE$2;\n  const target = options.target || TEXTURE_2D_ARRAY;\n  if (target !== TEXTURE_3D && target !== TEXTURE_2D_ARRAY) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  let numToLoad = urls.length;\n  const errors = [];\n  let imgs;  // eslint-disable-line\n  const level = options.level || 0;\n  let width = options.width;\n  let height = options.height;\n  const depth = urls.length;\n  let firstImage = true;\n\n  function uploadImg(slice) {\n    return function(err, img) {\n      --numToLoad;\n      if (err) {\n        errors.push(err);\n      } else {\n        savePackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null);\n\n          // put it in every slice otherwise some slices will be 0,0,0,0\n          for (let s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          let src = img;\n          let ctx;\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            ctx = getShared2DContext();\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src);\n\n          // free the canvas memory\n          if (ctx && src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        restorePackState(gl, options);\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function(url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults$1.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  let width = options.width;\n  let height = options.height;\n  let depth = options.depth;\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  if (!isArrayBuffer$1(src)) {\n    const Type = getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  const bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  const numElements = src.byteLength / bytesPerElement;  // TODO: check UNPACK_ALIGNMENT?\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + glEnumToString(gl, format);\n  }\n  let dimensions;\n  if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    if (!width && !height && !depth) {\n      const size = Math.cbrt(numElements);\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n  saveSkipState(gl);\n  gl.pixelStorei(UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  savePackState(gl, options);\n  if (target === TEXTURE_CUBE_MAP) {\n    const elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    const faceSize = numElements / 6 * elementsPerElement;\n\n    getCubeFacesWithNdx(gl, options).forEach(f => {\n      const offset = faceSize * f.ndx;\n      const data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n  restorePackState(gl, options);\n  restoreSkipState(gl);\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type,\n  };\n}\n\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\nfunction setEmptyTexture(gl, tex, options) {\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || formatType.type;\n  savePackState(gl, options);\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n  restorePackState(gl, options);\n}\n\n/**\n * Creates a texture based on the options passed in.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults$1.textureOptions;\n  const tex = gl.createTexture();\n  const target = options.target || TEXTURE_2D;\n  let width  = options.width  || 1;\n  let height = options.height || 1;\n  const internalFormat = options.internalFormat || RGBA;\n  gl.bindTexture(target, tex);\n  if (target === TEXTURE_CUBE_MAP) {\n    // this should have been the default for cubemaps :(\n    gl.texParameteri(target, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(target, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n  }\n  let src = options.src;\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n    if (typeof (src) === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer$1(src) ||\n               (Array.isArray(src) && (\n                    typeof src[0] === 'number' ||\n                    Array.isArray(src[0]) ||\n                    isArrayBuffer$1(src[0]))\n               )\n              ) {\n      const dimensions = setTextureFromArray(gl, tex, src, options);\n      width  = dimensions.width;\n      height = dimensions.height;\n    } else if (Array.isArray(src) && (typeof (src[0]) === 'string' || isTexImageSource(src[0]))) {\n      if (target === TEXTURE_CUBE_MAP) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else { // if (isTexImageSource(src))\n      setTextureFromElement(gl, tex, src, options);\n      width  = src.width;\n      height = src.height;\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n  }\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @param {number} [depth] the new depth. If not passed in will use `options.depth`\n * @memberOf module:twgl/textures\n */\nfunction resizeTexture(gl, tex, options, width, height, depth) {\n  width = width || options.width;\n  height = height || options.height;\n  depth = depth || options.depth;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  let type;\n  const src = options.src;\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer$1(src) || (Array.isArray(src) && typeof (src[0]) === 'number')) {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n * @private\n */\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' ||\n         (Array.isArray(src) && typeof src[0] === 'string');\n}\n\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  let numDownloading = 0;\n  const errors = [];\n  const textures = {};\n  const images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function() {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function(name) {\n    const options = textureOptions[name];\n    let onLoadFn;\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n        if (err) {\n          errors.push(err);\n        }\n        callCallbackIfReady();\n      };\n      ++numDownloading;\n    }\n    textures[name] = createTexture(gl, options, onLoadFn);\n  });\n\n  // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n  callCallbackIfReady();\n\n  return textures;\n}\n\nvar textures = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  setTextureDefaults_: setDefaults$1,\n  createSampler: createSampler,\n  createSamplers: createSamplers,\n  setSamplerParameters: setSamplerParameters,\n  createTexture: createTexture,\n  setEmptyTexture: setEmptyTexture,\n  setTextureFromArray: setTextureFromArray,\n  loadTextureFromUrl: loadTextureFromUrl,\n  setTextureFromElement: setTextureFromElement,\n  setTextureFilteringForSize: setTextureFilteringForSize,\n  setTextureParameters: setTextureParameters,\n  setDefaultTextureColor: setDefaultTextureColor,\n  createTextures: createTextures,\n  resizeTexture: resizeTexture,\n  canGenerateMipmap: canGenerateMipmap,\n  canFilter: canFilter,\n  getNumComponentsForFormat: getNumComponentsForFormat,\n  getBytesPerElementForInternalFormat: getBytesPerElementForInternalFormat,\n  getFormatAndTypeForInternalFormat: getFormatAndTypeForInternalFormat\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\n\nconst error$1 = error;\nconst warn$1 = warn;\nfunction getElementById(id) {\n  return (typeof document !== 'undefined' && document.getElementById)\n      ? document.getElementById(id)\n      : null;\n}\n\nconst TEXTURE0                       = 0x84c0;\nconst DYNAMIC_DRAW                   = 0x88e8;\n\nconst ARRAY_BUFFER$1                   = 0x8892;\nconst ELEMENT_ARRAY_BUFFER$1           = 0x8893;\nconst UNIFORM_BUFFER                 = 0x8a11;\nconst TRANSFORM_FEEDBACK_BUFFER      = 0x8c8e;\n\nconst TRANSFORM_FEEDBACK             = 0x8e22;\n\nconst COMPILE_STATUS                 = 0x8b81;\nconst LINK_STATUS                    = 0x8b82;\nconst FRAGMENT_SHADER                = 0x8b30;\nconst VERTEX_SHADER                  = 0x8b31;\nconst SEPARATE_ATTRIBS               = 0x8c8d;\n\nconst ACTIVE_UNIFORMS                = 0x8b86;\nconst ACTIVE_ATTRIBUTES              = 0x8b89;\nconst TRANSFORM_FEEDBACK_VARYINGS    = 0x8c83;\nconst ACTIVE_UNIFORM_BLOCKS          = 0x8a36;\nconst UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER   = 0x8a44;\nconst UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46;\nconst UNIFORM_BLOCK_DATA_SIZE                     = 0x8a40;\nconst UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES        = 0x8a43;\n\nconst FLOAT$3                         = 0x1406;\nconst FLOAT_VEC2                    = 0x8B50;\nconst FLOAT_VEC3                    = 0x8B51;\nconst FLOAT_VEC4                    = 0x8B52;\nconst INT$3                           = 0x1404;\nconst INT_VEC2                      = 0x8B53;\nconst INT_VEC3                      = 0x8B54;\nconst INT_VEC4                      = 0x8B55;\nconst BOOL                          = 0x8B56;\nconst BOOL_VEC2                     = 0x8B57;\nconst BOOL_VEC3                     = 0x8B58;\nconst BOOL_VEC4                     = 0x8B59;\nconst FLOAT_MAT2                    = 0x8B5A;\nconst FLOAT_MAT3                    = 0x8B5B;\nconst FLOAT_MAT4                    = 0x8B5C;\nconst SAMPLER_2D                    = 0x8B5E;\nconst SAMPLER_CUBE                  = 0x8B60;\nconst SAMPLER_3D                    = 0x8B5F;\nconst SAMPLER_2D_SHADOW             = 0x8B62;\nconst FLOAT_MAT2x3                  = 0x8B65;\nconst FLOAT_MAT2x4                  = 0x8B66;\nconst FLOAT_MAT3x2                  = 0x8B67;\nconst FLOAT_MAT3x4                  = 0x8B68;\nconst FLOAT_MAT4x2                  = 0x8B69;\nconst FLOAT_MAT4x3                  = 0x8B6A;\nconst SAMPLER_2D_ARRAY              = 0x8DC1;\nconst SAMPLER_2D_ARRAY_SHADOW       = 0x8DC4;\nconst SAMPLER_CUBE_SHADOW           = 0x8DC5;\nconst UNSIGNED_INT$3                  = 0x1405;\nconst UNSIGNED_INT_VEC2             = 0x8DC6;\nconst UNSIGNED_INT_VEC3             = 0x8DC7;\nconst UNSIGNED_INT_VEC4             = 0x8DC8;\nconst INT_SAMPLER_2D                = 0x8DCA;\nconst INT_SAMPLER_3D                = 0x8DCB;\nconst INT_SAMPLER_CUBE              = 0x8DCC;\nconst INT_SAMPLER_2D_ARRAY          = 0x8DCF;\nconst UNSIGNED_INT_SAMPLER_2D       = 0x8DD2;\nconst UNSIGNED_INT_SAMPLER_3D       = 0x8DD3;\nconst UNSIGNED_INT_SAMPLER_CUBE     = 0x8DD4;\nconst UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\n\nconst TEXTURE_2D$1                    = 0x0DE1;\nconst TEXTURE_CUBE_MAP$1              = 0x8513;\nconst TEXTURE_3D$1                    = 0x806F;\nconst TEXTURE_2D_ARRAY$1              = 0x8C1A;\n\nconst typeMap = {};\n\n/**\n * Returns the corresponding bind point for a given sampler type\n */\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n}\n\n// This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\nfunction floatSetter(gl, location) {\n  return function(v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function(v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function(v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  return isWebGL2(gl) ? function(textureOrPair) {\n    let texture;\n    let sampler;\n    if (isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function(texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  const units = new Int32Array(size);\n  for (let ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return isWebGL2(gl) ? function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(textureOrPair, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      let texture;\n      let sampler;\n      if (isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(texture, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT$3]                         = { Type: Float32Array, size:  4, setter: floatSetter,      arraySetter: floatArraySetter, };\ntypeMap[FLOAT_VEC2]                    = { Type: Float32Array, size:  8, setter: floatVec2Setter,  };\ntypeMap[FLOAT_VEC3]                    = { Type: Float32Array, size: 12, setter: floatVec3Setter,  };\ntypeMap[FLOAT_VEC4]                    = { Type: Float32Array, size: 16, setter: floatVec4Setter,  };\ntypeMap[INT$3]                           = { Type: Int32Array,   size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[INT_VEC2]                      = { Type: Int32Array,   size:  8, setter: intVec2Setter,    };\ntypeMap[INT_VEC3]                      = { Type: Int32Array,   size: 12, setter: intVec3Setter,    };\ntypeMap[INT_VEC4]                      = { Type: Int32Array,   size: 16, setter: intVec4Setter,    };\ntypeMap[UNSIGNED_INT$3]                  = { Type: Uint32Array,  size:  4, setter: uintSetter,       arraySetter: uintArraySetter, };\ntypeMap[UNSIGNED_INT_VEC2]             = { Type: Uint32Array,  size:  8, setter: uintVec2Setter,   };\ntypeMap[UNSIGNED_INT_VEC3]             = { Type: Uint32Array,  size: 12, setter: uintVec3Setter,   };\ntypeMap[UNSIGNED_INT_VEC4]             = { Type: Uint32Array,  size: 16, setter: uintVec4Setter,   };\ntypeMap[BOOL]                          = { Type: Uint32Array,  size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[BOOL_VEC2]                     = { Type: Uint32Array,  size:  8, setter: intVec2Setter,    };\ntypeMap[BOOL_VEC3]                     = { Type: Uint32Array,  size: 12, setter: intVec3Setter,    };\ntypeMap[BOOL_VEC4]                     = { Type: Uint32Array,  size: 16, setter: intVec4Setter,    };\ntypeMap[FLOAT_MAT2]                    = { Type: Float32Array, size: 16, setter: floatMat2Setter,  };\ntypeMap[FLOAT_MAT3]                    = { Type: Float32Array, size: 36, setter: floatMat3Setter,  };\ntypeMap[FLOAT_MAT4]                    = { Type: Float32Array, size: 64, setter: floatMat4Setter,  };\ntypeMap[FLOAT_MAT2x3]                  = { Type: Float32Array, size: 24, setter: floatMat23Setter, };\ntypeMap[FLOAT_MAT2x4]                  = { Type: Float32Array, size: 32, setter: floatMat24Setter, };\ntypeMap[FLOAT_MAT3x2]                  = { Type: Float32Array, size: 24, setter: floatMat32Setter, };\ntypeMap[FLOAT_MAT3x4]                  = { Type: Float32Array, size: 48, setter: floatMat34Setter, };\ntypeMap[FLOAT_MAT4x2]                  = { Type: Float32Array, size: 32, setter: floatMat42Setter, };\ntypeMap[FLOAT_MAT4x3]                  = { Type: Float32Array, size: 48, setter: floatMat43Setter, };\ntypeMap[SAMPLER_2D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[SAMPLER_CUBE]                  = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[SAMPLER_3D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D$1,       };\ntypeMap[SAMPLER_2D_SHADOW]             = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[SAMPLER_2D_ARRAY]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\ntypeMap[SAMPLER_2D_ARRAY_SHADOW]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\ntypeMap[SAMPLER_CUBE_SHADOW]           = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[INT_SAMPLER_2D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[INT_SAMPLER_3D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D$1,       };\ntypeMap[INT_SAMPLER_CUBE]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[INT_SAMPLER_2D_ARRAY]          = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[UNSIGNED_INT_SAMPLER_3D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D$1,       };\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE]     = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\n\nfunction floatAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      switch (b.value.length) {\n        case 4:\n          gl.vertexAttrib4fv(index, b.value);\n          break;\n        case 3:\n          gl.vertexAttrib3fv(index, b.value);\n          break;\n        case 2:\n          gl.vertexAttrib2fv(index, b.value);\n          break;\n        case 1:\n          gl.vertexAttrib1fv(index, b.value);\n          break;\n        default:\n          throw new Error('the length of a float constant value must be between 1 and 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribPointer(\n          index, b.numComponents || b.size, b.type || FLOAT$3, b.normalize || false, b.stride || 0, b.offset || 0);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4iv(index, b.value);\n      } else {\n        throw new Error('The length of an integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || INT$3, b.stride || 0, b.offset || 0);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction uintAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4uiv(index, b.value);\n      } else {\n        throw new Error('The length of an unsigned integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || UNSIGNED_INT$3, b.stride || 0, b.offset || 0);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  const defaultSize = typeInfo.size;\n  const count = typeInfo.count;\n\n  return function(b) {\n    gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n    const numComponents = b.size || b.numComponents || defaultSize;\n    const size = numComponents / count;\n    const type = b.type || FLOAT$3;\n    const typeInfo = typeMap[type];\n    const stride = typeInfo.size * numComponents;\n    const normalize = b.normalize || false;\n    const offset = b.offset || 0;\n    const rowOffset = stride / count;\n    for (let i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(\n          index + i, size, type, normalize, stride, offset + rowOffset * i);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index + i, b.divisor);\n      }\n    }\n  };\n}\n\n\n\nconst attrTypeMap = {};\nattrTypeMap[FLOAT$3]             = { size:  4, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC2]        = { size:  8, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC3]        = { size: 12, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC4]        = { size: 16, setter: floatAttribSetter, };\nattrTypeMap[INT$3]               = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC2]          = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC3]          = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC4]          = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[UNSIGNED_INT$3]      = { size:  4, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC2] = { size:  8, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC3] = { size: 12, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC4] = { size: 16, setter: uintAttribSetter,  };\nattrTypeMap[BOOL]              = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC2]         = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC3]         = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC4]         = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[FLOAT_MAT2]        = { size:  4, setter: matAttribSetter,   count: 2, };\nattrTypeMap[FLOAT_MAT3]        = { size:  9, setter: matAttribSetter,   count: 3, };\nattrTypeMap[FLOAT_MAT4]        = { size: 16, setter: matAttribSetter,   count: 4, };\n\nconst errorRE = /ERROR:\\s*\\d+:(\\d+)/gi;\nfunction addLineNumbersWithError(src, log = '', lineOffset = 0) {\n  // Note: Error message formats are not defined by any spec so this may or may not work.\n  const matches = [...log.matchAll(errorRE)];\n  const lineNoToErrorMap = new Map(matches.map((m, ndx) => {\n    const lineNo = parseInt(m[1]);\n    const next = matches[ndx + 1];\n    const end = next ? next.index : log.length;\n    const msg = log.substring(m.index, end);\n    return [lineNo - 1, msg];\n  }));\n  return src.split('\\n').map((line, lineNo) => {\n    const err = lineNoToErrorMap.get(lineNo);\n    return `${lineNo + 1 + lineOffset}: ${line}${err ? `\\n\\n^^^ ${err}` : ''}`;\n  }).join('\\n');\n}\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\nconst spaceRE = /^[ \\t]*\\n/;\n\n/**\n * Loads a shader.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors.\n * @return {WebGLShader} The created shader.\n * @private\n */\nfunction loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n  const errFn = opt_errorCallback || error$1;\n  // Create the shader object\n  const shader = gl.createShader(shaderType);\n\n  // Remove the first end of line because WebGL 2.0 requires\n  // #version 300 es\n  // as the first line. No whitespace allowed before that line\n  // so\n  //\n  // <script>\n  // #version 300 es\n  // </script>\n  //\n  // Has one line before it which is invalid according to GLSL ES 3.00\n  //\n  let lineOffset = 0;\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  }\n\n  // Load the shader source\n  gl.shaderSource(shader, shaderSource);\n\n  // Compile the shader\n  gl.compileShader(shader);\n\n  // Check the compile status\n  const compiled = gl.getShaderParameter(shader, COMPILE_STATUS);\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    const lastError = gl.getShaderInfoLog(shader);\n    errFn(`${addLineNumbersWithError(shaderSource, lastError, lineOffset)}\\nError compiling ${glEnumToString(gl, shaderType)}: ${lastError}`);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>} [attribLocations] a attribute name to location map\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments passed in\n * @private\n */\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  let transformFeedbackVaryings;\n  let transformFeedbackMode;\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    // If we have an errorCallback we can just return this object\n    // Otherwise we need to construct one with default errorCallback\n    if (opt_attribs.errorCallback) {\n      return opt_attribs;\n    }\n    const opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n    transformFeedbackMode = opt.transformFeedbackMode;\n  }\n\n  const options = {\n    errorCallback: opt_errorCallback || error$1,\n    transformFeedbackVaryings: transformFeedbackVaryings,\n    transformFeedbackMode: transformFeedbackMode,\n  };\n\n  if (opt_attribs) {\n    let attribLocations = {};\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function(attrib,  ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs;\n    }\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nconst defaultShaderType = [\n  \"VERTEX_SHADER\",\n  \"FRAGMENT_SHADER\",\n];\n\nfunction getShaderTypeFromScriptType(gl, scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return VERTEX_SHADER;\n  }\n  return undefined;\n}\n\nfunction deleteShaders(gl, shaders) {\n  shaders.forEach(function(shader) {\n    gl.deleteShader(shader);\n  });\n}\n\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program and calls useProgram.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\nfunction createProgram(\n    gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const realShaders = [];\n  const newShaders = [];\n  for (let ndx = 0; ndx < shaders.length; ++ndx) {\n    let shader = shaders[ndx];\n    if (typeof (shader) === 'string') {\n      const elem = getElementById(shader);\n      const src = elem ? elem.text : shader;\n      let type = gl[defaultShaderType[ndx]];\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(gl, elem.type) || type;\n      }\n      shader = loadShader(gl, src, type, progOptions.errorCallback);\n      newShaders.push(shader);\n    }\n    if (isShader(gl, shader)) {\n      realShaders.push(shader);\n    }\n  }\n\n  if (realShaders.length !== shaders.length) {\n    progOptions.errorCallback(\"not enough shaders for program\");\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  const program = gl.createProgram();\n  realShaders.forEach(function(shader) {\n    gl.attachShader(program, shader);\n  });\n  if (progOptions.attribLocations) {\n    Object.keys(progOptions.attribLocations).forEach(function(attrib) {\n      gl.bindAttribLocation(program, progOptions.attribLocations[attrib], attrib);\n    });\n  }\n  let varyings = progOptions.transformFeedbackVaryings;\n  if (varyings) {\n    if (varyings.attribs) {\n      varyings = varyings.attribs;\n    }\n    if (!Array.isArray(varyings)) {\n      varyings = Object.keys(varyings);\n    }\n    gl.transformFeedbackVaryings(program, varyings, progOptions.transformFeedbackMode || SEPARATE_ATTRIBS);\n  }\n  gl.linkProgram(program);\n\n  // Check the link status\n  const linked = gl.getProgramParameter(program, LINK_STATUS);\n  if (!linked) {\n    // something went wrong with the link\n    const lastError = gl.getProgramInfoLog(program);\n    progOptions.errorCallback(`${\n      realShaders.map(shader => {\n        const src = addLineNumbersWithError(gl.getShaderSource(shader), '', 0);\n        const type = gl.getShaderParameter(shader, gl.SHADER_TYPE);\n        return `${glEnumToString(gl, type)}\\n${src}}`;\n      }).join('\\n')\n    }\\nError in program linking: ${lastError}`);\n\n    gl.deleteProgram(program);\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n  return program;\n}\n\n/**\n * Loads a shader from a script tag.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} scriptId The id of the script tag.\n * @param {number} [opt_shaderType] The type of shader. If not passed in it will\n *     be derived from the type of the script tag.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors.\n * @return {WebGLShader?} The created shader or null if error.\n * @private\n */\nfunction createShaderFromScript(\n    gl, scriptId, opt_shaderType, opt_errorCallback) {\n  let shaderSource = \"\";\n  const shaderScript = getElementById(scriptId);\n  if (!shaderScript) {\n    throw new Error(`unknown script element: ${scriptId}`);\n  }\n  shaderSource = shaderScript.text;\n\n  const shaderType = opt_shaderType || getShaderTypeFromScriptType(gl, shaderScript.type);\n  if (!shaderType) {\n    throw new Error('unknown shader type');\n  }\n\n  return loadShader(gl, shaderSource, shaderType, opt_errorCallback);\n}\n\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\nfunction createProgramFromScripts(\n    gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const shaders = [];\n  for (let ii = 0; ii < shaderScriptIds.length; ++ii) {\n    const shader = createShaderFromScript(\n        gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n    if (!shader) {\n      return null;\n    }\n    shaders.push(shader);\n  }\n  return createProgram(gl, shaders, progOptions);\n}\n\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\nfunction createProgramFromSources(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const shaders = [];\n  for (let ii = 0; ii < shaderSources.length; ++ii) {\n    const shader = loadShader(\n        gl, shaderSources[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n    if (!shader) {\n      return null;\n    }\n    shaders.push(shader);\n  }\n  return createProgram(gl, shaders, progOptions);\n}\n\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n * @private\n */\nfunction isBuiltIn(info) {\n  const name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\nfunction createUniformSetters(gl, program) {\n  let textureUnit = 0;\n\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n  function createUniformSetter(program, uniformInfo, location) {\n    const isArray = uniformInfo.name.endsWith(\"[0]\");\n    const type = uniformInfo.type;\n    const typeInfo = typeMap[type];\n    if (!typeInfo) {\n      throw new Error(`unknown type: 0x${type.toString(16)}`); // we should never get here.\n    }\n    let setter;\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      const unit = textureUnit;\n      textureUnit += uniformInfo.size;\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n    setter.location = location;\n    return setter;\n  }\n\n  const uniformSetters = { };\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    if (isBuiltIn(uniformInfo)) {\n        continue;\n    }\n    let name = uniformInfo.name;\n    // remove the array suffix.\n    if (name.endsWith(\"[0]\")) {\n      name = name.substr(0, name.length - 3);\n    }\n    const location = gl.getUniformLocation(program, uniformInfo.name);\n    // the uniform will have no location if it's in a uniform block\n    if (location) {\n      uniformSetters[name] = createUniformSetter(program, uniformInfo, location);\n    }\n  }\n  return uniformSetters;\n}\n\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\nfunction createTransformFeedbackInfo(gl, program) {\n  const info = {};\n  const numVaryings = gl.getProgramParameter(program, TRANSFORM_FEEDBACK_VARYINGS);\n  for (let ii = 0; ii < numVaryings; ++ii) {\n    const varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size,\n    };\n  }\n  return info;\n}\n\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n  for (const name in bufferInfo) {\n    const varying = transformFeedbackInfo[name];\n    if (varying) {\n      const buf = bufferInfo[name];\n      if (buf.offset) {\n        gl.bindBufferRange(TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  const tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(TRANSFORM_FEEDBACK, null);\n  return tf;\n}\n\n/**\n * @typedef {Object} UniformData\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanatory\n * @property {bool} usedByFragmentShader Self explanatory\n * @property {bool} used Self explanatory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec> blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n  const uniformData = [];\n  const uniformIndices = [];\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    if (isBuiltIn(uniformInfo)) {\n      break;\n    }\n    // REMOVE [0]?\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [\n    [ \"UNIFORM_TYPE\", \"type\" ],\n    [ \"UNIFORM_SIZE\", \"size\" ],  // num elements\n    [ \"UNIFORM_BLOCK_INDEX\", \"blockNdx\" ],\n    [ \"UNIFORM_OFFSET\", \"offset\", ],\n  ].forEach(function(pair) {\n    const pname = pair[0];\n    const key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function(value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n\n  const blockSpecs = {};\n\n  const numUniformBlocks = gl.getProgramParameter(program, ACTIVE_UNIFORM_BLOCKS);\n  for (let ii = 0; ii < numUniformBlocks; ++ii) {\n    const name = gl.getActiveUniformBlockName(program, ii);\n    const blockSpec = {\n      index: gl.getUniformBlockIndex(program, name),\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES),\n    };\n    blockSpec.used = blockSpec.usedByVertexShader || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData,\n  };\n}\n\nconst arraySuffixRE = /\\[\\d+\\]\\.$/;  // better way to check?\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object.<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uniformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n  const blockSpecs = uniformBlockSpec.blockSpecs;\n  const uniformData = uniformBlockSpec.uniformData;\n  const blockSpec = blockSpecs[blockName];\n  if (!blockSpec) {\n    warn$1(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {},\n    };\n  }\n  const array = new ArrayBuffer(blockSpec.size);\n  const buffer = gl.createBuffer();\n  const uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(UNIFORM_BUFFER, buffer);\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n\n  let prefix = blockName + \".\";\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n  const uniforms = {};\n  blockSpec.uniformIndices.forEach(function(uniformNdx) {\n    const data = uniformData[uniformNdx];\n    const typeInfo = typeMap[data.type];\n    const Type = typeInfo.Type;\n    const length = data.size * typeInfo.size;\n    let name = data.name;\n    if (name.substr(0, prefix.length) === prefix) {\n      name = name.substr(prefix.length);\n    }\n    uniforms[name] = new Type(array, data.offset, length / Type.BYTES_PER_ELEMENT);\n  });\n  return {\n    name: blockName,\n    array: array,\n    asFloat: new Float32Array(array),  // for debugging\n    buffer: buffer,\n    uniforms: uniforms,\n  };\n}\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n}\n\n/**\n * Binds a uniform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the values into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  const uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  const blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n  if (blockSpec) {\n    const bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferData(UNIFORM_BUFFER, uniformBlockInfo.array, DYNAMIC_DRAW);\n  }\n}\n\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  const uniforms = uniformBlockInfo.uniforms;\n  for (const name in values) {\n    const array = uniforms[name];\n    if (array) {\n      const value = values[name];\n      if (value.length) {\n        array.set(value);\n      } else {\n        array[0] = value;\n      }\n    }\n  }\n}\n\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     var texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n * @memberOf module:twgl/programs\n */\nfunction setUniforms(setters, values) {  // eslint-disable-line\n  const actualSetters = setters.uniformSetters || setters;\n  const numArgs = arguments.length;\n  for (let aNdx = 1; aNdx < numArgs; ++aNdx) {\n    const values = arguments[aNdx];\n    if (Array.isArray(values)) {\n      const numValues = values.length;\n      for (let ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, values[ii]);\n      }\n    } else {\n      for (const name in values) {\n        const setter = actualSetters[name];\n        if (setter) {\n          setter(values[name]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Alias for `setUniforms`\n * @function\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n * @memberOf module:twgl/programs\n */\nconst setUniformsAndBindTextures = setUniforms;\n\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\nfunction createAttributeSetters(gl, program) {\n  const attribSetters = {\n  };\n\n  const numAttribs = gl.getProgramParameter(program, ACTIVE_ATTRIBUTES);\n  for (let ii = 0; ii < numAttribs; ++ii) {\n    const attribInfo = gl.getActiveAttrib(program, ii);\n    if (isBuiltIn(attribInfo)) {\n        continue;\n    }\n    const index = gl.getAttribLocation(program, attribInfo.name);\n    const typeInfo = attrTypeMap[attribInfo.type];\n    const setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n */\nfunction setAttributes(setters, buffers) {\n  for (const name in buffers) {\n    const setter = setters[name];\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivalent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgramInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n    if (buffers.indices) {\n      gl.bindBuffer(ELEMENT_ARRAY_BUFFER$1, buffers.indices);\n    }\n  }\n}\n\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @property {module:twgl.UniformBlockSpec} [uniformBlockSpace] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfoFromProgram(gl, program) {\n  const uniformSetters = createUniformSetters(gl, program);\n  const attribSetters = createAttributeSetters(gl, program);\n  const programInfo = {\n    program: program,\n    uniformSetters: uniformSetters,\n    attribSetters: attribSetters,\n  };\n\n  if (isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfo(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  let good = true;\n  shaderSources = shaderSources.map(function(source) {\n    // Lets assume if there is no \\n it's an id\n    if (source.indexOf(\"\\n\") < 0) {\n      const script = getElementById(source);\n      if (!script) {\n        progOptions.errorCallback(\"no element with id: \" + source);\n        good = false;\n      } else {\n        source = script.text;\n      }\n    }\n    return source;\n  });\n  if (!good) {\n    return null;\n  }\n  const program = createProgramFromSources(gl, shaderSources, progOptions);\n  if (!program) {\n    return null;\n  }\n  return createProgramInfoFromProgram(gl, program);\n}\n\nvar programs = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createAttributeSetters: createAttributeSetters,\n  createProgram: createProgram,\n  createProgramFromScripts: createProgramFromScripts,\n  createProgramFromSources: createProgramFromSources,\n  createProgramInfo: createProgramInfo,\n  createProgramInfoFromProgram: createProgramInfoFromProgram,\n  createUniformSetters: createUniformSetters,\n  createUniformBlockSpecFromProgram: createUniformBlockSpecFromProgram,\n  createUniformBlockInfoFromProgram: createUniformBlockInfoFromProgram,\n  createUniformBlockInfo: createUniformBlockInfo,\n  createTransformFeedback: createTransformFeedback,\n  createTransformFeedbackInfo: createTransformFeedbackInfo,\n  bindTransformFeedbackInfo: bindTransformFeedbackInfo,\n  setAttributes: setAttributes,\n  setBuffersAndAttributes: setBuffersAndAttributes,\n  setUniforms: setUniforms,\n  setUniformsAndBindTextures: setUniformsAndBindTextures,\n  setUniformBlock: setUniformBlock,\n  setBlockUniforms: setBlockUniforms,\n  bindUniformBlock: bindUniformBlock\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst TRIANGLES                      = 0x0004;\nconst UNSIGNED_SHORT$3                 = 0x1403;\n\n/**\n * Drawing related functions\n *\n * For backward compatibility they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {number} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? TRIANGLES : type;\n  const indices = bufferInfo.indices;\n  const elementType = bufferInfo.elementType;\n  const numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? UNSIGNED_SHORT$3 : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? UNSIGNED_SHORT$3 : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In other words `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\nfunction drawObjectList(gl, objectsToDraw) {\n  let lastUsedProgramInfo = null;\n  let lastUsedBufferInfo = null;\n\n  objectsToDraw.forEach(function(object) {\n    if (object.active === false) {\n      return;\n    }\n\n    const programInfo = object.programInfo;\n    const bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    let bindBuffers = false;\n    const type = object.type === undefined ? TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program);\n\n      // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n      bindBuffers = true;\n    }\n\n    // Setup all the needed attributes.\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n      lastUsedBufferInfo = bufferInfo;\n      setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    }\n\n    // Set the uniforms.\n    setUniforms(programInfo, object.uniforms);\n\n    // Draw\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\nvar draw = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  drawBufferInfo: drawBufferInfo,\n  drawObjectList: drawObjectList\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst FRAMEBUFFER                    = 0x8d40;\nconst RENDERBUFFER                   = 0x8d41;\nconst TEXTURE_2D$2                     = 0x0de1;\n\nconst UNSIGNED_BYTE$3                  = 0x1401;\n\n/* PixelFormat */\nconst DEPTH_COMPONENT$1                = 0x1902;\nconst RGBA$1                           = 0x1908;\n\n/* Framebuffer Object. */\nconst RGBA4$1                          = 0x8056;\nconst RGB5_A1$1                        = 0x8057;\nconst RGB565$1                         = 0x8D62;\nconst DEPTH_COMPONENT16$1              = 0x81A5;\nconst STENCIL_INDEX                  = 0x1901;\nconst STENCIL_INDEX8                 = 0x8D48;\nconst DEPTH_STENCIL$1                  = 0x84F9;\nconst COLOR_ATTACHMENT0              = 0x8CE0;\nconst DEPTH_ATTACHMENT               = 0x8D00;\nconst STENCIL_ATTACHMENT             = 0x8D20;\nconst DEPTH_STENCIL_ATTACHMENT       = 0x821A;\nconst CLAMP_TO_EDGE$1                  = 0x812F;\nconst LINEAR$1                         = 0x2601;\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attach] The attachment point. Defaults\n *   to `gl.COLOR_ATTACHMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {number} [layer] layer for `gl.framebufferTextureLayer`. Defaults to undefined.\n *   If set then `gl.framebufferTextureLayer` is called, if not then `gl.framebufferTexture2D`\n * @property {WebGLObject} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachments across framebuffers.\n * @memberOf module:twgl\n * @mixes module:twgl.TextureOptions\n */\n\nconst defaultAttachments = [\n  { format: RGBA$1, type: UNSIGNED_BYTE$3, min: LINEAR$1, wrap: CLAMP_TO_EDGE$1, },\n  { format: DEPTH_STENCIL$1, },\n];\n\nconst attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL$1] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT$1] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16$1] = DEPTH_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format) {\n  return attachmentsByFormat[format];\n}\n\nconst renderbufferFormats = {};\nrenderbufferFormats[RGBA4$1] = true;\nrenderbufferFormats[RGB5_A1$1] = true;\nrenderbufferFormats[RGB565$1] = true;\nrenderbufferFormats[DEPTH_STENCIL$1] = true;\nrenderbufferFormats[DEPTH_COMPONENT16$1] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {WebGLObject[]} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @property {number} width The width of the framebuffer and its attachments\n * @property {number} height The width of the framebuffer and its attachments\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL1 only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  const target = FRAMEBUFFER;\n  const fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width  = width  || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  let colorAttachmentCount = 0;\n  const framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height,\n  };\n  attachments.forEach(function(attachmentOptions) {\n    let attachment = attachmentOptions.attachment;\n    const format = attachmentOptions.format;\n    let attachmentPoint = getAttachmentPointForFormat(format);\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + colorAttachmentCount++;\n    }\n    if (!attachment) {\n      if (isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(RENDERBUFFER, attachment);\n        gl.renderbufferStorage(RENDERBUFFER, format, width, height);\n      } else {\n        const textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || LINEAR$1;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || LINEAR$1;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || CLAMP_TO_EDGE$1;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || CLAMP_TO_EDGE$1;\n        }\n        attachment = createTexture(gl, textureOptions);\n      }\n    }\n    if (isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, RENDERBUFFER, attachment);\n    } else if (isTexture(gl, attachment)) {\n      if (attachmentOptions.layer !== undefined) {\n        gl.framebufferTextureLayer(\n          target,\n          attachmentPoint,\n          attachment,\n          attachmentOptions.level || 0,\n          attachmentOptions.layer);\n      } else {\n        gl.framebufferTexture2D(\n            target,\n            attachmentPoint,\n            attachmentOptions.target || TEXTURE_2D$2,\n            attachment,\n            attachmentOptions.level || 0);\n      }\n    } else {\n      throw new Error('unknown attachment type');\n    }\n    framebufferInfo.attachments.push(attachment);\n  });\n  return framebufferInfo;\n}\n\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width  = width  || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function(attachmentOptions, ndx) {\n    const attachment = framebufferInfo.attachments[ndx];\n    const format = attachmentOptions.format;\n    if (isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(RENDERBUFFER, attachment);\n      gl.renderbufferStorage(RENDERBUFFER, format, width, height);\n    } else if (isTexture(gl, attachment)) {\n      resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw new Error('unknown attachment type');\n    }\n  });\n}\n\n/**\n * Binds a framebuffer\n *\n * This function pretty much solely exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo|null} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If falsy will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || FRAMEBUFFER;\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\nvar framebuffers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  bindFramebufferInfo: bindFramebufferInfo,\n  createFramebufferInfo: createFramebufferInfo,\n  resizeFramebufferInfo: resizeFramebufferInfo\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\nconst ELEMENT_ARRAY_BUFFER$2           = 0x8893;\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n  programInfos.forEach(function(programInfo) {\n    setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao,\n  };\n}\n\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  setAttributes(setters, attribs);\n  if (indices) {\n    gl.bindBuffer(ELEMENT_ARRAY_BUFFER$2, indices);\n  }\n  // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n  gl.bindVertexArray(null);\n  return vao;\n}\n\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\nvar vertexArrays = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createVertexArrayInfo: createVertexArrayInfo,\n  createVAOAndSetAttributes: createVAOAndSetAttributes,\n  createVAOFromBufferInfo: createVAOFromBufferInfo\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nconst defaults$2 = {\n  addExtensionsToContext: true,\n};\n\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} [attribPrefix] The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n *   In other words I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} [textureColor] Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} [crossOrigin]\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} [addExtensionsToContext]\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\nfunction setDefaults$2(newDefaults) {\n  copyExistingProperties(newDefaults, defaults$2);\n  setDefaults(newDefaults);  // eslint-disable-line\n  setDefaults$1(newDefaults);  // eslint-disable-line\n}\n\nconst prefixRE = /^(.*?)_/;\nfunction addExtensionToContext(gl, extensionName) {\n  glEnumToString(gl, 0);\n  const ext = gl.getExtension(extensionName);\n  if (ext) {\n    const enums = {};\n    const fnSuffix = prefixRE.exec(extensionName)[1];\n    const enumSuffix = '_' + fnSuffix;\n    for (const key in ext) {\n      const value = ext[key];\n      const isFunc = typeof (value) === 'function';\n      const suffix = isFunc ? fnSuffix : enumSuffix;\n      let name = key;\n      // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          warn(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function(origFn) {\n            return function() {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    }\n    // pass the modified enums to glEnumToString\n    enums.constructor = {\n      name: ext.constructor.name,\n    };\n    glEnumToString(enums, 0);\n  }\n  return ext;\n}\n\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\nconst supportedExtensions = [\n  'ANGLE_instanced_arrays',\n  'EXT_blend_minmax',\n  'EXT_color_buffer_float',\n  'EXT_color_buffer_half_float',\n  'EXT_disjoint_timer_query',\n  'EXT_disjoint_timer_query_webgl2',\n  'EXT_frag_depth',\n  'EXT_sRGB',\n  'EXT_shader_texture_lod',\n  'EXT_texture_filter_anisotropic',\n  'OES_element_index_uint',\n  'OES_standard_derivatives',\n  'OES_texture_float',\n  'OES_texture_float_linear',\n  'OES_texture_half_float',\n  'OES_texture_half_float_linear',\n  'OES_vertex_array_object',\n  'WEBGL_color_buffer_float',\n  'WEBGL_compressed_texture_atc',\n  'WEBGL_compressed_texture_etc1',\n  'WEBGL_compressed_texture_pvrtc',\n  'WEBGL_compressed_texture_s3tc',\n  'WEBGL_compressed_texture_s3tc_srgb',\n  'WEBGL_depth_texture',\n  'WEBGL_draw_buffers',\n];\n\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existence of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\nfunction addExtensionsToContext(gl) {\n  for (let ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n * @private\n */\nfunction create3DContext(canvas, opt_attribs) {\n  const names = [\"webgl\", \"experimental-webgl\"];\n  let context = null;\n  for (let ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n    if (context) {\n      if (defaults$2.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n      break;\n    }\n  }\n  return context;\n}\n\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\nfunction getWebGLContext(canvas, opt_attribs) {\n  const gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\nfunction createContext(canvas, opt_attribs) {\n  const names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  let context = null;\n  for (let ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n    if (context) {\n      if (defaults$2.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n      break;\n    }\n  }\n  return context;\n}\n\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\nfunction getContext(canvas, opt_attribs) {\n  const gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  const width  = canvas.clientWidth  * multiplier | 0;\n  const height = canvas.clientHeight * multiplier | 0;\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n  return false;\n}\n\nexport { addExtensionsToContext, attributes, bindFramebufferInfo, bindTransformFeedbackInfo, bindUniformBlock, canFilter, canGenerateMipmap, createAttribsFromArrays, createAttributeSetters, createBufferFromArray, createBufferFromTypedArray, createBufferInfoFromArrays, createBuffersFromArrays, createFramebufferInfo, createProgram, createProgramFromScripts, createProgramFromSources, createProgramInfo, createProgramInfoFromProgram, createSampler, createSamplers, createTexture, createTextures, createTransformFeedback, createTransformFeedbackInfo, createUniformBlockInfo, createUniformBlockInfoFromProgram, createUniformBlockSpecFromProgram, createUniformSetters, createVAOAndSetAttributes, createVAOFromBufferInfo, createVertexArrayInfo, draw, drawBufferInfo, drawObjectList, framebuffers, getArray as getArray_, getBytesPerElementForInternalFormat, getContext, getFormatAndTypeForInternalFormat, getGLTypeForTypedArray, getGLTypeForTypedArrayType, getNumComponentsForFormat, getNumComponents as getNumComponents_, getTypedArrayTypeForGLType, getWebGLContext, glEnumToString, isArrayBuffer, isWebGL1, isWebGL2, loadTextureFromUrl, m4, primitives, programs, resizeCanvasToDisplaySize, resizeFramebufferInfo, resizeTexture, setAttribInfoBufferFromArray, setDefaults as setAttributeDefaults_, setAttributePrefix, setAttributes, setBlockUniforms, setBuffersAndAttributes, setDefaultTextureColor, setDefaults$2 as setDefaults, setEmptyTexture, setSamplerParameters, setDefaults$1 as setTextureDefaults_, setTextureFilteringForSize, setTextureFromArray, setTextureFromElement, setTextureParameters, setUniformBlock, setUniforms, setUniformsAndBindTextures, textures, typedarrays, utils, v3, vertexArrays };\n","import {\n  ProgramInfo,\n  BufferInfo,\n  setAttributes,\n  createProgramInfoFromProgram,\n  createBufferInfoFromArrays,\n  setUniforms,\n} from 'twgl.js';\n\nimport { FlipnoteParserBase } from '../parsers';\nimport { assert, assertBrowserEnv, isBrowser } from '../utils';\nimport { CanvasInterface } from './CanvasInterface';\nimport quadShader from './shaders/quad.vert';\nimport drawFrame from './shaders/drawFrame.frag';\n\n/** \n * Keeps track of WebGl resources so they can be destroyed properly later\n * @internal\n */\ninterface ResourceMap {\n  programs: WebGLProgram[];\n  shaders: WebGLShader[];\n  textures: WebGLTexture[];\n  buffers: WebGLBuffer[];\n};\n\n/**\n * Settings for {@link WebGlCanvas}\n */\nexport interface WebglCanvasOptions {\n  /** Function to be called if the context is lost */\n  onlost: () => void;\n  /** Function to be called if the context is restored */\n  onrestored: () => void;\n  /** Use DPI scaling */\n  useDpi: boolean;\n};\n\n/**\n * Flipnote renderer for the {@link https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API WebGL} API\n * \n * Only available in browser contexts\n */\nexport class WebglCanvas implements CanvasInterface {\n\n  static defaultOptions: WebglCanvasOptions = {\n    onlost: () => {},\n    onrestored: () => {},\n    useDpi: true\n  };\n\n  static isSupported() {\n    if (!isBrowser) return false;\n    let testCanvas = document.createElement('canvas');\n    let testCtx = testCanvas.getContext('2d');\n    const supported = testCtx !== null;\n    testCanvas = null;\n    testCtx = null;\n    return supported;\n  }\n\n  /**  */\n  public note: FlipnoteParserBase;\n  /** Canvas HTML element being used as a rendering surface */\n  public canvas: HTMLCanvasElement;\n  /** Rendering context - see {@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext} */\n  public gl: WebGLRenderingContext;\n  /** View width (CSS pixels) */\n  public width: number;\n  /** View height (CSS pixels) */\n  public height: number;\n  /** */\n  public srcWidth: number;\n  /** */\n  public srcHeight: number;\n  /** \n   * Backing canvas width (real pixels)\n   * Note that this factors in device pixel ratio, so it may not reflect the size of the canvas in CSS pixels\n   */\n  public dstWidth: number;\n  /** \n   * Backing canvas height (real pixels)\n   * Note that this factors in device pixel ratio, so it may not reflect the size of the canvas in CSS pixels\n   */\n  public dstHeight: number;\n  /** */\n  public prevFrameIndex: number;\n\n  private options: WebglCanvasOptions;\n  private program: ProgramInfo; // for drawing renderbuffer w/ filtering\n  private quadBuffer: BufferInfo;\n  private paletteBuffer = new Uint32Array(16);\n  private frameBuffer: Uint32Array;\n  private frameBufferBytes: Uint8Array; // will be same memory as frameBuffer, just uint8 for webgl texture\n\n  private frameTexture: WebGLTexture;\n  private refs: ResourceMap = {\n    programs: [],\n    shaders: [],\n    textures: [],\n    buffers: []\n  };\n  private isCtxLost = false;\n\n  /**\n   * Creates a new WebGlCanvas instance\n   * @param el - Canvas HTML element to use as a rendering surface\n   * @param width - Canvas width in CSS pixels\n   * @param height - Canvas height in CSS pixels\n   * \n   * The ratio between `width` and `height` should be 3:4 for best results\n   */\n  constructor(parent: Element, width=640, height=480, options: Partial<WebglCanvasOptions> = {}) {\n    assertBrowserEnv();\n    this.options = { ...WebglCanvas.defaultOptions, ...options };\n    this.width = width;\n    this.height = height;\n    this.canvas = document.createElement('canvas');\n    this.canvas.addEventListener('webglcontextlost', this.handleContextLoss, false);\n    this.canvas.addEventListener('webglcontextrestored', this.handleContextRestored, false);\n    this.canvas.className = 'FlipnoteCanvas FlipnoteCanvas--webgl';\n    this.gl = this.canvas.getContext('webgl', {\n      antialias: false,\n      alpha: true\n    });\n    if (parent) parent.appendChild(this.canvas);\n    this.init();\n  }\n\n  private init() {\n    this.setCanvasSize(this.width, this.height);\n    const gl = this.gl;\n    if (this.checkContextLoss()) return;\n    this.program = this.createProgram(quadShader, drawFrame);\n    this.quadBuffer = this.createScreenQuad(-1, -1, 2, 2, 1, 1);\n    this.setBuffersAndAttribs(this.program, this.quadBuffer);\n    this.frameTexture = this.createTexture(gl.RGBA, gl.LINEAR, gl.CLAMP_TO_EDGE);\n    // set gl constants\n    gl.useProgram(this.program.program);\n    gl.bindTexture(gl.TEXTURE_2D, this.frameTexture);\n  }\n\n  private createProgram(vertexShaderSource: string, fragmentShaderSource: string) {\n    if(this.checkContextLoss()) return;\n    const gl = this.gl;\n    const vert = this.createShader(gl.VERTEX_SHADER, vertexShaderSource);\n    const frag = this.createShader(gl.FRAGMENT_SHADER, fragmentShaderSource);\n    const program = gl.createProgram();\n    // set up shaders\n    gl.attachShader(program, vert);\n    gl.attachShader(program, frag);\n    // link program\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const log = gl.getProgramInfoLog(program);\n      gl.deleteProgram(program);\n      throw new Error(log);\n    }\n    const programInfo = createProgramInfoFromProgram(gl, program);\n    this.refs.programs.push(program);\n    return programInfo;\n  }\n\n  private createShader(type: number, source: string) {\n    if(this.checkContextLoss()) return;\n    const gl = this.gl;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    // test if shader compilation was successful\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      const log = gl.getShaderInfoLog(shader);\n      gl.deleteShader(shader);\n      throw new Error(log);\n    }\n    this.refs.shaders.push(shader);\n    return shader;\n  }\n\n  // creating a subdivided quad seems to produce slightly nicer texture filtering\n  private createScreenQuad(x0: number, y0: number, width: number, height: number, xSubdivs: number, ySubdivs: number) {\n    if(this.checkContextLoss()) return;\n    const numVerts = (xSubdivs + 1) * (ySubdivs + 1);\n    const numVertsAcross = xSubdivs + 1;\n    const positions = new Float32Array(numVerts * 2);\n    const texCoords = new Float32Array(numVerts * 2);\n    let positionPtr = 0;\n    let texCoordPtr = 0;\n    for (let y = 0; y <= ySubdivs; y++) {\n      for (let x = 0; x <= xSubdivs; x++) {\n        const u = x / xSubdivs;\n        const v = y / ySubdivs;\n        positions[positionPtr++] = x0 + width * u;\n        positions[positionPtr++] = y0 + height * v;\n        texCoords[texCoordPtr++] = u;\n        texCoords[texCoordPtr++] = v;\n      }\n    }\n    const indices = new Uint16Array(xSubdivs * ySubdivs * 2 * 3);\n    let indicesPtr = 0;\n    for (let y = 0; y < ySubdivs; y++) {\n      for (let x = 0; x < xSubdivs; x++) {\n        // triangle 1\n        indices[indicesPtr++] = (y + 0) * numVertsAcross + x;\n        indices[indicesPtr++] = (y + 1) * numVertsAcross + x;\n        indices[indicesPtr++] = (y + 0) * numVertsAcross + x + 1;\n        // triangle 2\n        indices[indicesPtr++] = (y + 0) * numVertsAcross + x + 1;\n        indices[indicesPtr++] = (y + 1) * numVertsAcross + x;\n        indices[indicesPtr++] = (y + 1) * numVertsAcross + x + 1;\n      }\n    }\n    const bufferInfo = createBufferInfoFromArrays(this.gl, {\n      position: {\n        numComponents: 2,\n        data: positions\n      },\n      texcoord: {\n        numComponents: 2,\n        data: texCoords\n      },\n      indices: indices\n    });\n    // collect references to buffer objects\n    for (let name in bufferInfo.attribs)\n      this.refs.buffers.push(bufferInfo.attribs[name].buffer);\n    return bufferInfo;\n  }\n\n  private setBuffersAndAttribs(program: ProgramInfo, buffer: BufferInfo) {\n    if(this.checkContextLoss()) return;\n    const gl = this.gl;\n    setAttributes(program.attribSetters, buffer.attribs);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indices);\n  }\n\n  private createTexture(type: number, minMag: number, wrap: number, width = 1, height = 1) {\n    if(this.checkContextLoss()) return;\n    const gl = this.gl;\n    const tex = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, tex);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minMag);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, minMag);\n    gl.texImage2D(gl.TEXTURE_2D, 0, type, width, height, 0, type, gl.UNSIGNED_BYTE, null);\n    this.refs.textures.push(tex);\n    return tex;\n  }\n\n  /**\n   * Resize the canvas surface\n   * @param width - New canvas width, in CSS pixels\n   * @param height - New canvas height, in CSS pixels\n   * \n   * The ratio between `width` and `height` should be 3:4 for best results\n   */\n  public setCanvasSize(width: number, height: number) {\n    const dpi = this.options.useDpi ? (window.devicePixelRatio || 1) : 1;\n    const internalWidth = width * dpi;\n    const internalHeight = height * dpi;\n    this.width = width;\n    this.height = height;\n    this.canvas.width = internalWidth;\n    this.canvas.height = internalHeight;\n    this.dstWidth = internalWidth;\n    this.dstHeight = internalHeight;\n    this.canvas.style.width = `${ width }px`;\n    this.canvas.style.height = `${ height }px`;\n    const gl = this.gl;\n    if(this.checkContextLoss()) return;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n\n  /**\n   * Sets the size of the input pixel arrays\n   * @param width \n   * @param height \n   */\n  public setNote(note: FlipnoteParserBase) {\n    if(this.checkContextLoss()) return;\n    const gl = this.gl;\n    const width = note.imageWidth;\n    const height = note.imageHeight;\n    this.note = note;\n    this.srcWidth = width;\n    this.srcHeight = height;\n    // resize frame texture\n    gl.bindTexture(gl.TEXTURE_2D, this.frameTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.srcWidth, this.srcHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    this.frameBuffer = new Uint32Array(width * height);\n    this.frameBufferBytes = new Uint8Array(this.frameBuffer.buffer); // same memory buffer as rgbaData\n    this.prevFrameIndex = undefined;\n    // set canvas alt text\n    this.canvas.title = note.getTitle();\n  }\n\n  /**\n   * Clear the canvas\n   * @param color optional RGBA color to use as a background color\n   */\n  public clear(color?: [number, number, number, number]) {\n    if(this.checkContextLoss()) return;\n    if (color) {\n      const [r, g, b, a] = color;\n      this.gl.clearColor(r / 255, g / 255, b / 255, a /255);\n    }\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n  }\n\n  /**\n   * Draw a frame from the currently loaded Flipnote\n   * @param frameIndex \n   */\n  public drawFrame(frameIndex: number) {\n    if(this.checkContextLoss()) return;\n    const {\n      gl,\n      srcWidth: textureWidth,\n      srcHeight: textureHeight,\n    } = this;\n    // get frame pixels as RGBA buffer\n    this.note.getFramePixelsRgba(frameIndex, this.frameBuffer, this.paletteBuffer);\n    // clear whatever's already been drawn\n    // const paperColor = note.getFramePalette(frameIndex)[0];\n    // this.clear(paperColor);\n    gl.clear(this.gl.COLOR_BUFFER_BIT);\n    // update texture\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, textureWidth, textureHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.frameBufferBytes);\n    // prep uniforms\n    setUniforms(this.program, {\n      u_flipY: true,\n      u_tex: this.frameTexture,\n      u_textureSize: [this.srcWidth, this.srcHeight],\n      u_screenSize: [gl.drawingBufferWidth, gl.drawingBufferHeight],\n    });\n    // draw!\n    gl.drawElements(gl.TRIANGLES, this.quadBuffer.numElements, this.quadBuffer.elementType, 0);\n    this.prevFrameIndex = frameIndex;\n  }\n   \n  public forceUpdate() {\n    if (this.prevFrameIndex !== undefined)\n      this.drawFrame(this.prevFrameIndex);\n  }\n\n  /**\n   * Returns true if the webGL context has returned an error\n   */\n  public isErrorState() {\n    const gl = this.gl;\n    return gl === null || gl.getError() !== gl.NO_ERROR;\n  }\n\n  /**\n   * Only a certain number of WebGL contexts can be added to a single page before the browser will start culling old contexts. \n   * This method returns true if it has been culled, false if not\n   */\n  private checkContextLoss() {\n    const isLost = this.isCtxLost || this.isErrorState();\n    if (isLost) \n      this.handleContextLoss();\n    return isLost;\n  }\n\n  private handleContextLoss = (e?: Event) => {\n    if (e) e.preventDefault();\n    this.destroy();\n    if (!this.isCtxLost)\n      this.options.onlost();\n    this.isCtxLost = true;\n  }\n\n  private handleContextRestored = (e?: Event) => {\n    this.isCtxLost = false;\n    this.init();\n    this.options.onrestored();\n  }\n\n  /**\n   * \n   * @param type image mime type (`image/jpeg`, `image/png`, etc)\n   * @param quality image quality where supported, between 0 and 1\n   */\n  public getDataUrl(type?: string, quality?: any) {\n    return this.canvas.toDataURL(type, quality);\n  }\n\n  async getBlob(type?: string, quality?: any) {\n    return new Promise<Blob>((resolve, reject) => this.canvas.toBlob(resolve, type, quality));\n  }\n\n  /**\n   * Frees any resources used by this canvas instance\n   */\n  public destroy() {\n    const refs = this.refs;\n    const gl = this.gl;\n    const canvas = this.canvas;\n    refs.shaders.forEach((shader) => {\n      gl.deleteShader(shader);\n    });\n    refs.shaders = [];\n    refs.textures.forEach((texture) => {\n      gl.deleteTexture(texture);\n    });\n    refs.textures = [];\n    refs.buffers.forEach((buffer) => {\n      gl.deleteBuffer(buffer);\n    });\n    refs.buffers = [];\n    refs.programs.forEach((program) => {\n      gl.deleteProgram(program);\n    });\n    refs.programs = [];\n    this.paletteBuffer = null;\n    this.frameBuffer = null;\n    this.frameBufferBytes = null;\n    if (canvas && canvas.parentElement) { \n      // shrink the canvas to reduce memory usage until it is garbage collected\n      canvas.width = 1;\n      canvas.height = 1;\n      // remove canvas from dom\n      canvas.parentNode.removeChild(canvas);\n    }\n  }\n}","import { FlipnoteParserBase } from '../parsers';\nimport { assert, assertBrowserEnv, isBrowser } from '../utils';\nimport { CanvasInterface } from './CanvasInterface';\n\n/**\n * Setup options for {@link Html5Canvas}\n */\nexport interface Html5CanvasOptions {\n  /** Use DPI scaling */\n  useDpi: boolean;\n  /** Use image smoothing */\n  useSmoothing: boolean;\n};\n\n/**\n * Flipnote renderer for the [HTML5 2D canvas API](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D)\n */\nexport class Html5Canvas implements CanvasInterface {\n\n  static defaultOptions: Html5CanvasOptions = {\n    useDpi: true,\n    useSmoothing: true,\n  };\n\n  static isSupported() {\n    if (!isBrowser) return false;\n    let testCanvas = document.createElement('canvas');\n    let testCtx = testCanvas.getContext('2d');\n    const supported = testCtx !== null;\n    testCanvas = null;\n    testCtx = null;\n    return supported;\n  }\n\n  /** */\n  public note: FlipnoteParserBase;\n  /** Canvas HTML element being used as a rendering surface */\n  public canvas: HTMLCanvasElement;\n  /** Rendering context */\n  public ctx: CanvasRenderingContext2D;\n  /** View width (CSS pixels) */\n  public width: number;\n  /** View height (CSS pixels) */\n  public height: number;\n  /** \n   * Backing canvas width (real pixels)\n   * Note that this factors in device pixel ratio, so it may not reflect the size of the canvas in CSS pixels\n  */\n  public dstWidth: number;\n  /** \n   * Backing canvas height (real pixels)\n   * Note that this factors in device pixel ratio, so it may not reflect the size of the canvas in CSS pixels\n  */\n  public dstHeight: number;\n  /**  */\n  public srcWidth: number;\n  /**  */\n  public srcHeight: number;\n  /** */\n  public prevFrameIndex: number;\n\n  private options: Html5CanvasOptions;\n  private srcCanvas: HTMLCanvasElement;\n  private srcCtx: CanvasRenderingContext2D;\n  private frameImage: ImageData;\n  private paletteBuffer = new Uint32Array(16);\n  private frameBuffer: Uint32Array;\n\n  constructor(parent: Element, width: number, height: number, options: Partial<Html5CanvasOptions> = {}) {\n    assertBrowserEnv();\n    this.options = { ...Html5Canvas.defaultOptions, ...options };\n    this.width = width;\n    this.height = height;\n    this.canvas = document.createElement('canvas');\n    this.canvas.className = 'FlipnoteCanvas FlipnoteCanvas--html5';\n    this.ctx = this.canvas.getContext('2d');\n    this.srcCanvas = document.createElement('canvas');\n    this.srcCtx = this.srcCanvas.getContext('2d');\n    assert(this.ctx !== null && this.srcCtx !== null, 'Could not create HTML5 canvas');\n    if (parent) parent.appendChild(this.canvas);\n    this.setCanvasSize(width, height);\n  }\n\n  /**\n   * Resize the canvas surface\n   * @param width - New canvas width, in CSS pixels\n   * @param height - New canvas height, in CSS pixels\n   * \n   * The ratio between `width` and `height` should be 3:4 for best results\n   */\n  public setCanvasSize(width: number, height: number) {\n    const canvas = this.canvas;\n    const useDpi = this.options.useDpi;\n    const dpi = useDpi ? (window.devicePixelRatio || 1) : 1;\n    const internalWidth = width * dpi;\n    const internalHeight = height * dpi;\n    this.width = width;\n    this.height = height;\n    this.dstWidth = internalWidth;\n    this.dstHeight = internalHeight;\n    canvas.style.width = `${ width }px`;\n    canvas.style.height = `${ height }px`;\n    canvas.width = internalWidth;\n    canvas.height = internalHeight;\n  }\n  \n  /**\n   */\n  public setNote(note: FlipnoteParserBase) {\n    const width = note.imageWidth;\n    const height = note.imageHeight;\n    this.note = note;\n    this.srcWidth = width;\n    this.srcHeight = height;\n    this.srcCanvas.width = width;\n    this.srcCanvas.height = height;\n    // create image data to fit note size\n    this.frameImage = this.srcCtx.createImageData(width, height);\n    // uint32 view of the img buffer memory\n    this.frameBuffer = new Uint32Array(this.frameImage.data.buffer);\n    this.prevFrameIndex = undefined;\n    // set canvas alt text\n    this.canvas.title = note.getTitle();\n  }\n  \n  /**\n   * Clear the canvas\n   * @param color optional RGBA color to use as a background color\n   */\n  public clear(color?: [number, number, number, number]) {\n    // clear framebuffer\n    this.frameBuffer.fill(0);\n    // clear canvas\n    this.ctx.clearRect(0, 0, this.dstWidth, this.dstHeight);\n    // fill canvas with paper color\n    if (color) {\n      const [r, g, b, a] = color;\n      this.ctx.fillStyle = `rgba(${ r }, ${ g }, ${ b }, ${ a })`;\n      this.ctx.fillRect(0, 0, this.dstWidth, this.dstHeight);\n    }\n  }\n\n  public drawFrame(frameIndex: number) {\n    // clear whatever's already been drawn\n    this.clear();\n    // optionally enable image smoothing\n    if (!this.options.useSmoothing)\n      this.ctx.imageSmoothingEnabled = false;\n    // get frame pixels as RGBA buffer\n    this.note.getFramePixelsRgba(frameIndex, this.frameBuffer, this.paletteBuffer);\n    // put framebuffer pixels into the src canvas\n    this.srcCtx.putImageData(this.frameImage, 0, 0);\n    // composite src canvas to dst (so image scaling can be handled)\n    this.ctx.drawImage(\n      this.srcCanvas, \n      0, 0, \n      this.srcWidth, \n      this.srcHeight,\n      0, 0,\n      this.dstWidth,\n      this.dstHeight\n    );\n    this.prevFrameIndex = frameIndex;\n  }\n\n  public forceUpdate() {\n    if (this.prevFrameIndex !== undefined)\n      this.drawFrame(this.prevFrameIndex);\n  }\n\n  public getDataUrl(type?: string, quality?: any) {\n    return this.canvas.toDataURL(type, quality);\n  }\n\n  async getBlob(type?: string, quality?: any) {\n    return new Promise<Blob>((resolve, reject) => this.canvas.toBlob(resolve, type, quality));\n  }\n\n  public destroy() {\n    this.frameImage = null;\n    this.paletteBuffer = null;\n    this.frameBuffer = null;\n    this.canvas.parentNode.removeChild(this.canvas);\n    this.canvas.width = 1;\n    this.canvas.height = 1;\n    this.canvas = null;\n    this.srcCanvas.width = 1;\n    this.srcCanvas.height = 1;\n    this.srcCanvas = null;\n  }\n\n}","import { CanvasInterface } from './CanvasInterface';\nimport { WebglCanvas, WebglCanvasOptions } from './WebGlCanvas';\nimport { Html5Canvas, Html5CanvasOptions } from './Html5Canvas';\nimport { FlipnoteParserBase } from '../parsers';\n\nexport type UniversalCanvasOptions = WebglCanvasOptions & Html5CanvasOptions;\n\nexport class UniversalCanvas implements CanvasInterface {\n\n  /** */\n  public renderer: CanvasInterface;\n  /** */\n  public note: FlipnoteParserBase;\n  /** View width (CSS pixels) */\n  public width: number;\n  /** View height (CSS pixels) */\n  public height: number;\n  /** \n   * Backing canvas width (real pixels)\n   * Note that this factors in device pixel ratio, so it may not reflect the size of the canvas in CSS pixels\n  */\n  public dstWidth: number;\n  /** \n   * Backing canvas height (real pixels)\n   * Note that this factors in device pixel ratio, so it may not reflect the size of the canvas in CSS pixels\n  */\n  public dstHeight: number;\n  /**  */\n  public srcWidth: number;\n  /**  */\n  public srcHeight: number;\n  /** */\n  public prevFrameIndex: number;\n\n  private parent: Element;\n  private options: Partial<UniversalCanvasOptions> = {};\n  private isReady = false;\n  private isHtml5 = false;\n  \n  constructor (parent: Element, width=640, height=480, options: Partial<UniversalCanvasOptions>={}) {\n    this.parent = parent;\n    this.options = options;\n    try {\n      this.renderer = new WebglCanvas(parent, width, height, {\n        ...options,\n        // attempt to switch renderer\n        onlost: () => {\n          console.warn('WebGL failed, attemping HTML5 fallback');\n          if (this.isReady && !this.isHtml5) // if the error happened after canvas creation\n            this.switchToHtml5();\n          else\n            throw '';\n        }\n      });\n    }\n    catch {\n      this.switchToHtml5();\n    }\n    this.isReady = true;\n  }\n\n  public switchToHtml5() {\n    const renderer = new Html5Canvas(this.parent, this.width, this.height, this.options);\n    if (this.note) {\n      renderer.setNote(this.note);\n      renderer.prevFrameIndex = this.renderer?.prevFrameIndex;\n      renderer.forceUpdate();\n    }\n    this.isHtml5 = true;\n    this.renderer = renderer;\n  }\n\n  public setCanvasSize(width: number, height: number) {\n    const renderer = this.renderer;\n    renderer.setCanvasSize(width, height);\n    this.width = width;\n    this.width = height;\n    this.dstWidth = renderer.dstWidth;\n    this.dstHeight = renderer.dstHeight;\n  }\n\n  public setNote(note: FlipnoteParserBase) {\n    this.note = note;\n    this.renderer.setNote(note);\n    this.prevFrameIndex = undefined;\n    this.srcWidth = this.renderer.srcWidth;\n    this.srcHeight = this.renderer.srcHeight;\n  }\n\n  public clear(color?: [number, number, number, number]) {\n    this.renderer.clear(color);\n  }\n\n  public drawFrame(frameIndex: number) {\n    this.renderer.drawFrame(frameIndex);\n    this.prevFrameIndex = frameIndex;\n  }\n\n  public forceUpdate() {\n    this.renderer.forceUpdate();\n  }\n\n  public getDataUrl(type?: string, quality?: any) {\n    return this.renderer.getDataUrl();\n  }\n\n  async getBlob(type?: string, quality?: any) {\n    return this.renderer.getBlob();\n  }\n\n  public destroy() {\n    this.renderer.destroy();\n    this.note = null;\n  }\n\n}","import { isBrowser, assertBrowserEnv } from '../utils';\n\n/** @internal */\nconst _AudioContext = (() => {\n  if (isBrowser)\n    return (window.AudioContext || (window as any).webkitAudioContext);\n  return null;\n})();\n\n/** PCM audio buffer types. Supports s16_le, or float32_le with a range of -1.0 to 1.0 */\nexport type PcmAudioBuffer = Int16Array | Float32Array;\n\n/**\n * Audio player built around the {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API | Web Audio API}\n * \n * Capable of playing PCM streams, with volume adjustment and an optional equalizer. Only available in browser contexts\n */\nexport class WebAudioPlayer {\n\n  /** Audio context, see {@link https://developer.mozilla.org/en-US/docs/Web/API/AudioContext | AudioContext} */\n  public ctx: AudioContext;\n  /** Audio sample rate */\n  public sampleRate: number;\n  /** Whether the audio is being run through an equalizer or not */\n  public useEq = false;\n  /** Whether to connect the output to an audio analyser (see {@link analyser}) */\n  public useAnalyser = false;\n  /** Default equalizer settings. Credit to {@link https://www.sudomemo.net/ | Sudomemo} for these */\n  public eqSettings: [number, number][] = [\n    [31.25, 4.1],\n    [62.5, 1.2],\n    [125, 0],\n    [250, -4.1],\n    [500, -2.3],\n    [1000, 0.5],\n    [2000, 6.5],\n    [8000, 5.1],\n    [16000, 5.1]\n  ];\n  /** If enabled, provides audio analysis for visualisation etc - https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Visualizations_with_Web_Audio_API */\n  public analyser: AnalyserNode;\n\n  private _volume = 1;\n  private _loop = false;\n  private nodeRefs: AudioNode[] = [];\n  private buffer: AudioBuffer;\n  private gainNode: GainNode;\n  private source: AudioBufferSourceNode;\n\n  constructor() {\n    assertBrowserEnv();\n  }\n\n  /** The audio output volume. Range is 0 to 1 */\n  set volume(value: number) {\n    this.setVolume(value);\n  }\n\n  get volume() {\n    return this._volume;\n  }\n\n  /** Whether the audio should loop after it has ended */\n  set loop(value: boolean) {\n    this._loop = value;\n    if (this.source)\n      this.source.loop = value;\n  }\n\n  get loop() {\n    return this._loop;\n  }\n\n  private getCtx() {\n    if (!this.ctx)\n      this.ctx = new _AudioContext();\n    return this.ctx;\n  }\n\n  /**\n   * Set the audio buffer to play\n   * @param inputBuffer \n   * @param sampleRate - For best results, this should be a multiple of 16364\n   */\n  setBuffer(inputBuffer: PcmAudioBuffer, sampleRate: number) {\n    const ctx = this.getCtx();\n    const numSamples = inputBuffer.length;\n    const audioBuffer = ctx.createBuffer(1, numSamples, sampleRate);\n    const channelData = audioBuffer.getChannelData(0);\n    if (inputBuffer instanceof Float32Array)\n      channelData.set(inputBuffer, 0);\n    else if (inputBuffer instanceof Int16Array) {\n      for (let i = 0; i < numSamples; i++) {\n        channelData[i] = inputBuffer[i] / 32768;\n      }\n    }\n    this.buffer = audioBuffer;\n    this.sampleRate = sampleRate;\n  }\n\n  private connectEqNodesTo(inNode: AudioNode) {\n    const ctx = this.getCtx();\n    const eqSettings = this.eqSettings;\n    let lastNode = inNode;\n    eqSettings.forEach(([ frequency, gain ], index) => {\n      const node = ctx.createBiquadFilter();\n      this.nodeRefs.push(node);\n      node.frequency.value = frequency;\n      node.gain.value = gain;\n      if (index === 0)\n        node.type = 'lowshelf';\n      else if (index === eqSettings.length - 1)\n        node.type = 'highshelf';\n      else\n        node.type = 'peaking';\n      lastNode.connect(node);\n      lastNode = node;\n    });\n    return lastNode;\n  }\n\n  private initNodes() {\n    const ctx = this.getCtx();\n    this.nodeRefs = [];\n    const source = ctx.createBufferSource();\n    this.nodeRefs.push(source);\n    source.buffer = this.buffer;\n\n    const gainNode = ctx.createGain();\n    this.nodeRefs.push(gainNode);\n\n    if (this.useEq) {\n      const eq = this.connectEqNodesTo(source);\n      eq.connect(gainNode);\n    }\n    else {\n      source.connect(gainNode);\n    }\n\n    if (this.useAnalyser) {\n      const analyserNode = ctx.createAnalyser();\n      this.nodeRefs.push(analyserNode);\n      this.analyser = analyserNode;\n      gainNode.connect(analyserNode);\n      analyserNode.connect(ctx.destination);\n    }\n    else {\n      this.analyser = undefined;\n      gainNode.connect(ctx.destination);\n    }\n\n    this.source = source;\n    this.gainNode = gainNode;\n    this.setVolume(this._volume);\n  }\n  \n  public setAnalyserEnabled(on: boolean) {\n    this.useAnalyser = on;\n    this.initNodes();\n  }\n\n  /**\n   * Sets the audio volume level\n   * @param value - range is 0 to 1\n   */\n  public setVolume(value: number) {\n    this._volume = value;\n    if (this.gainNode) {\n      // human perception of loudness is logarithmic, rather than linear\n      // https://www.dr-lex.be/info-stuff/volumecontrols.html\n      this.gainNode.gain.value = Math.pow(value, 2);\n    }\n  }\n\n  /**\n   * Begin playback from a specific point\n   * \n   * Note that the WebAudioPlayer doesn't keep track of audio playback itself. We rely on the {@link Player} API for that.\n   * @param currentTime initial playback position, in seconds\n   */\n  public playFrom(currentTime: number) {\n    this.initNodes();\n    this.source.loop = this._loop;\n    this.source.start(0, currentTime);\n  }\n\n  /**\n   * Stops the audio playback\n   */\n  public stop() {\n    if (this.source)\n      this.source.stop(0);\n  }\n\n  /**\n   * Frees any resources used by this canvas instance\n   */\n  public async destroy() {\n    this.stop();\n    const ctx = this.getCtx();\n    this.nodeRefs.forEach(node => node.disconnect());\n    this.nodeRefs = [];\n    this.analyser = undefined;\n    if (ctx.state !== 'closed' && typeof ctx.close === 'function')\n      await ctx.close();\n    this.buffer = null;\n  }\n}","import { Flipnote, FlipnoteFormat, FlipnoteMeta } from '../parsers';\nimport { FlipnoteSource, parseSource } from '../parseSource';\nimport { PlayerEvent, PlayerEventMap, supportedEvents } from './PlayerEvent';\nimport { createTimeRanges, padNumber, formatTime } from './playerUtils';\nimport { UniversalCanvas } from '../renderers';\nimport { WebAudioPlayer } from '../webaudio';\nimport { assert, assertRange, assertBrowserEnv } from '../utils';\n\ntype PlayerLayerVisibility = Record<number, boolean>;\n\n/**\n * Flipnote Player API (exported as `flipnote.Player`) - provides a {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement | MediaElement}-like interface for loading Flipnotes and playing them. \n * This is intended for cases where you want to implement your own player UI, if you just want a pre-built player with some nice UI controls, check out the {@page Web Components} page instead!\n * \n * ### Create a new player\n * \n * You'll need a canvas element in your page's HTML:\n * \n * ```html\n *  <canvas id=\"player-canvas\"></canvas>\n * ```\n * \n * Then you can create a new `Player` instance by passing a CSS selector that matches the canvas, plus the disired width and height.\n * \n * ```js\n *  const player = new flipnote.Player('#player-canvas', 320, 240);\n * ```\n * \n * ### Load a Flipnote\n * \n * Load a Flipnote from a valid {@link FlipnoteSource}:\n * \n * ```js\n * player.load('./path/to/flipnote.ppm');\n * ```\n * \n * ### Listen to events\n * \n * Use the {@link on} method to register event listeners:\n * \n * ```js\n *  player.on('play', function() {\n *    // do something when the Flipnote starts playing...\n *  });\n * ```\n */\nexport class Player {\n\n  /** Frame renderer */\n  public renderer: UniversalCanvas;\n  /** Audio player */\n  public audio: WebAudioPlayer;\n  /** Canvas HTML element */\n  public canvasEl: HTMLCanvasElement;\n  /** Currently loaded Flipnote */\n  public note: Flipnote;\n  /** Format of the currently loaded Flipnote */\n  public noteFormat: FlipnoteFormat;\n  /** Metadata for the currently loaded Flipnote */\n  public meta: FlipnoteMeta;\n  /** Animation duration, in seconds */\n  public duration: number = 0;\n  /** Animation layer visibility */\n  public layerVisibility: PlayerLayerVisibility;\n  /** Automatically begin playback after a Flipnote is loaded */\n  public autoplay: boolean = false;\n  /** Array of events supported by this player */\n  public supportedEvents = supportedEvents;\n\n  /** @internal */\n  public _src: FlipnoteSource = null;\n  /** @internal */\n  public _loop: boolean = false;\n  /** @internal */\n  public _volume: number = 1;\n  /** @internal */\n  public _muted: boolean = false;\n  /** @internal */\n  public _frame: number = null;\n  /** @internal */\n  public isNoteLoaded: boolean = false;\n  /** @internal */\n  public events: PlayerEventMap = new Map();\n  /** @internal */\n  public playbackStartTime: number = 0;\n  /** @internal */\n  public playbackTime: number = 0;\n  /** @internal */\n  public playbackLoopId: number = null;\n  /** @internal */\n  public showThumbnail: boolean = true;\n  /** @internal */\n  public hasPlaybackStarted: boolean = false;\n  /** @internal */\n  public isPlaying: boolean = false;\n  /** @internal */\n  public wasPlaying: boolean = false;\n  /** @internal */\n  public isSeeking: boolean = false;\n\n  /**\n   * Create a new Player instance\n   * \n   * @param parent - Element to mount the rendering canvas to\n   * @param width - Canvas width (pixels)\n   * @param height - Canvas height (pixels)\n   * \n   * The ratio between `width` and `height` should be 3:4 for best results\n   */\n  constructor(parent: string | Element, width: number, height: number) {\n    assertBrowserEnv();\n    // if parent is a string, use it to select an Element, else assume it's an Element\n    const mountPoint = ('string' == typeof parent) ? <Element>document.querySelector(parent) : parent;\n    this.renderer = new UniversalCanvas(mountPoint, width, height, {\n      onlost: () => this.emit(PlayerEvent.Error),\n      onrestored: () => this.load()\n    });\n    this.audio = new WebAudioPlayer();\n    // this.canvasEl = this.renderer.el;\n  }\n\n  /** The currently loaded Flipnote source, if there is one. Can be overridden to load another Flipnote */\n  get src() {\n    return this._src;\n  }\n  set src(source: FlipnoteSource) {\n    this.load(source);\n  }\n\n  /** Indicates whether playback is currently paused */\n  get paused() {\n    return !this.isPlaying;\n  }\n  set paused(isPaused: boolean) {\n    if (isPaused)\n      this.pause();\n    else\n      this.play();\n  }\n\n  /** Current animation frame index */\n  get currentFrame() {\n    return this._frame;\n  }\n  set currentFrame(frameIndex: number) {\n    this.setCurrentFrame(frameIndex);\n  }\n\n  /** Current animation playback position, in seconds */\n  get currentTime() {\n    return this.isNoteLoaded ? this.playbackTime : null;\n  }\n  set currentTime(value) {\n    this.setCurrentTime(value);\n  }\n\n  /** Current animation playback progress, as a percentage out of 100 */\n  get progress() {\n    return this.isNoteLoaded ? (this.playbackTime / this.duration) * 100 : null;\n  }\n  set progress(value) {\n    this.setProgress(value);\n  }\n\n  /** Audio volume, range `0` to `1` */\n  get volume() {\n    return this.getVolume();\n  }\n\n  set volume(value) {\n    this.setVolume(value);\n  }\n\n  /** Audio mute state */\n  get muted() {\n    return this.getMuted();\n  }\n\n  set muted(value: boolean) {\n    this.setMuted(value);\n  }\n\n  /** Indicates whether playback should loop once the end is reached */\n  get loop() {\n    return this.getLoop();\n  }\n\n  set loop(value: boolean) {\n    this.setLoop(value);\n  }\n\n  /** Animation frame rate, measured in frames per second */\n  get framerate() {\n    return this.note.framerate;\n  }\n\n  /** Animation frame count */\n  get frameCount() {\n    return this.note.frameCount;\n  }\n\n  /** Animation frame speed */\n  get frameSpeed() {\n    return this.note.frameSpeed;\n  }\n\n  /**\n   * Implementation of the `HTMLMediaElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/buffered | buffered } property\n   * @category HTMLVideoElement compatibility\n   */\n  get buffered() {\n    return createTimeRanges([[0, this.duration]]);\n  }\n\n  /**\n   * Implementation of the `HTMLMediaElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seekable | seekable} property\n   * @category HTMLVideoElement compatibility\n   */\n  get seekable() {\n    return createTimeRanges([[0, this.duration]]);\n  }\n\n  /**\n   * Implementation of the `HTMLMediaElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/currentSrc | currentSrc} property\n   * @category HTMLVideoElement compatibility\n   */\n  get currentSrc() {\n    return this._src;\n  }\n\n  /**\n   * Implementation of the `HTMLVideoElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/videoWidth | videoWidth} property\n   * @category HTMLVideoElement compatibility\n   */\n  get videoWidth() {\n    return this.isNoteLoaded ? this.note.imageWidth : 0;\n  }\n\n  /**\n   * Implementation of the `HTMLVideoElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/videoHeight | videoHeight} property\n   * @category HTMLVideoElement compatibility\n   */\n  get videoHeight() {\n    return this.isNoteLoaded ? this.note.imageHeight : 0;\n  }\n\n  /** \n   * Open a Flipnote from a source\n   * @category Lifecycle\n   */\n  public async load(source: any = null) {\n    // close currently open note first\n    if (this.isNoteLoaded) \n      this.closeNote();\n    // if no source specified, just reset everything\n    if (!source)\n      return this.openNote(this.note);\n    // otherwise do a normal load\n    this.emit(PlayerEvent.LoadStart);\n    return parseSource(source)\n      .then((note: Flipnote) => {\n        this.openNote(note);\n        this._src = source;\n      })\n      .catch((err: any) => {\n        this.emit(PlayerEvent.Error, err);\n        throw new Error(`Error loading Flipnote: ${ err.message }`);\n      });\n  }\n\n  /** \n   * Close the currently loaded Flipnote\n   * @category Lifecycle\n   */\n  public closeNote() {\n    this.pause();\n    this.note = null;\n    this.isNoteLoaded = false;\n    this.meta = null;\n    this._src = null;\n    this._frame = 0;\n    // this.playbackFrame = null;\n    this.playbackTime = 0;\n    this.duration = 0;\n    this.loop = false;\n    this.isPlaying = false;\n    this.wasPlaying = false;\n    this.hasPlaybackStarted = false;\n    this.showThumbnail = true;\n    this.renderer.clear();\n  }\n\n  /** \n   * Open a Flipnote into the player\n   * @category Lifecycle\n   */\n  public openNote(note: Flipnote) {\n    if (this.isNoteLoaded)\n      this.closeNote();\n    this.note = note;\n    this.meta = note.meta;\n    this.emit(PlayerEvent.LoadedMeta);\n    this.noteFormat = note.format;\n    this.duration = note.duration;\n    this.playbackTime = 0;\n    this._frame = 0;\n    this.isNoteLoaded = true;\n    this.isPlaying = false;\n    this.wasPlaying = false;\n    this.hasPlaybackStarted = false;\n    this.layerVisibility = note.layerVisibility;\n    this.showThumbnail = true;\n    this.audio.setBuffer(note.getAudioMasterPcm(), note.sampleRate);\n    this.emit(PlayerEvent.CanPlay);\n    this.emit(PlayerEvent.CanPlayThrough);\n    this.setLoop(note.meta.loop);\n    this.renderer.setNote(note);\n    this.drawFrame(note.thumbFrameIndex);\n    this.emit(PlayerEvent.LoadedData);\n    this.emit(PlayerEvent.Load);\n    this.emit(PlayerEvent.Ready);\n    if (this.autoplay)\n      this.play();\n  }\n\n  /**\n   * Playback animation loop\n   * @internal\n   * @category Playback Control \n   */\n  public playbackLoop = (timestamp: DOMHighResTimeStamp) => {\n    if (!this.isPlaying)\n      return;\n    const now = timestamp / 1000;\n    const currPlaybackTime = now - this.playbackStartTime;\n    if (currPlaybackTime >= this.duration) {\n      if (this.loop) {\n        this.playbackStartTime = now;\n        this.emit(PlayerEvent.Loop);\n      }\n      else {\n        this.pause();\n        this.emit(PlayerEvent.Ended);\n      }\n    }\n    this.setCurrentTime(currPlaybackTime % this.duration);\n    this.playbackLoopId = requestAnimationFrame(this.playbackLoop);\n  }\n\n  /**\n   * Set the current playback time\n   * @category Playback Control \n   */\n  public setCurrentTime(value: number) {\n    this.assertNoteLoaded();\n    const i = Math.floor(value / (1 / this.framerate));\n    this.setCurrentFrame(i);\n    this.playbackTime = value;\n    this.emit(PlayerEvent.Progress, this.progress);\n  }\n\n  /**\n   * Get the current playback time\n   * @category Playback Control \n   */\n  public getCurrentTime() {\n    return this.currentTime;\n  }\n\n  /**\n   * Get the current time as a counter string, like `\"0:00 / 1:00\"`\n   * @category Playback Control\n   */\n  public getTimeCounter() {\n    const currentTime = formatTime(Math.max(this.currentTime, 0));\n    const duration = formatTime(this.duration);\n    return `${ currentTime } / ${ duration }`;\n  }\n\n  /**\n   * Get the current frame index as a counter string, like `\"001 / 999\"`\n   * @category Playback Control\n   */\n  public getFrameCounter() {\n    const frame = padNumber(this.currentFrame + 1, 3);\n    const total = padNumber(this.frameCount, 3);\n    return `${ frame } / ${ total }`;\n  }\n\n  /**\n   * Set the current playback progress as a percentage (`0` to `100`)\n   * @category Playback Control\n   */\n  public setProgress(value: number) {\n    this.assertNoteLoaded();\n    assertRange(value, 0, 100, 'progress');\n    this.currentTime = this.duration * (value / 100);\n  }\n\n  /**\n   * Get the current playback progress as a percentage (0 to 100)\n   * @category Playback Control \n   */\n  public getProgress() {\n    return this.progress;\n  }\n\n  /** \n   * Begin animation playback starting at the current position\n   * @category Playback Control \n   */\n  public async play() {\n    this.assertNoteLoaded();\n    if (this.isPlaying)\n      return;\n    // if ((!this.hasPlaybackStarted) || ((!this.loop) && (this.currentFrame == this.frameCount - 1)))\n    //   this.playbackTime = 0;\n    this.isPlaying = true;\n    this.hasPlaybackStarted = true;\n    const now = performance.now();\n    this.playbackStartTime = (now / 1000) - this.playbackTime;\n    this.playAudio();\n    this.playbackLoop(now);\n    this.emit(PlayerEvent.Play);\n  }\n\n  /** \n   * Pause animation playback at the current position\n   * @category Playback Control \n   */\n  public pause() {\n    if (!this.isPlaying)\n      return;\n    this.isPlaying = false;\n    if (this.playbackLoopId !== null) \n      cancelAnimationFrame(this.playbackLoopId);\n    this.stopAudio();\n    this.emit(PlayerEvent.Pause);\n  }\n\n  /** \n   * Resumes animation playback if paused, otherwise pauses\n   * @category Playback Control \n   */\n  public togglePlay() {\n    if (!this.isPlaying)\n      this.play();\n    else\n      this.pause();\n  }\n\n  /** \n   * Determines if playback is currently paused\n   * @category Playback Control \n   */\n  public getPaused() {\n    return !this.isPlaying;\n  }\n\n  /** \n   * Get the duration of the Flipnote in seconds\n   * @category Playback Control \n   */\n  public getDuration() {\n    return this.duration;\n  }\n\n  /** \n   * Determines if playback is looped\n   * @category Playback Control \n   */\n  public getLoop() {\n    return this._loop;\n  }\n\n  /** \n   * Set the playback loop\n   * @category Playback Control \n   */\n  public setLoop(loop: boolean) {\n    this._loop = loop;\n    this.audio.loop = loop;\n  }\n\n  /** \n   * Switch the playback loop between on and off\n   * @category Playback Control \n   */\n  public toggleLoop() {\n    this.setLoop(!this._loop);\n  }\n\n  /** \n   * Jump to a given animation frame\n   * @category Frame Control \n   */\n  public setCurrentFrame(newFrameValue: number) {\n    this.assertNoteLoaded();\n    const newFrameIndex = Math.max(0, Math.min(Math.floor(newFrameValue), this.frameCount - 1));\n    if (newFrameIndex === this.currentFrame && !this.showThumbnail)\n      return;\n    this._frame = newFrameIndex;\n    this.drawFrame(newFrameIndex);\n    this.showThumbnail = false;\n    if (!this.isPlaying) {\n      this.playbackTime = newFrameIndex * (1 / this.framerate);\n      this.emit(PlayerEvent.SeekEnd);\n    } \n    this.emit(PlayerEvent.FrameUpdate, this.currentFrame);\n    this.emit(PlayerEvent.Progress, this.progress);\n    this.emit(PlayerEvent.TimeUpdate, this.currentFrame);\n  }\n\n  /** \n   * Jump to the next animation frame\n   * If the animation loops, and is currently on its last frame, it will wrap to the first frame\n   * @category Frame Control \n   */\n  public nextFrame() {\n    if ((this.loop) && (this.currentFrame === this.frameCount -1))\n      this.currentFrame = 0;\n    else\n      this.currentFrame += 1;\n    this.emit(PlayerEvent.FrameNext);\n  }\n\n  /** \n   * Jump to the next animation frame\n   * If the animation loops, and is currently on its first frame, it will wrap to the last frame\n   * @category Frame Control \n   */\n  public prevFrame() {\n    if ((this.loop) && (this.currentFrame === 0))\n      this.currentFrame = this.frameCount - 1;\n    else\n      this.currentFrame -= 1;\n    this.emit(PlayerEvent.FramePrev);\n  }\n\n  /** \n   * Jump to the last animation frame\n   * @category Frame Control \n   */\n  public lastFrame() {\n    this.currentFrame = this.frameCount - 1;\n    this.emit(PlayerEvent.FrameLast);\n  }\n\n  /** \n   * Jump to the first animation frame\n   * @category Frame Control \n   */\n  public firstFrame() {\n    this.currentFrame = 0;\n    this.emit(PlayerEvent.FrameFirst);\n  }\n\n  /** \n   * Jump to the thumbnail frame\n   * @category Frame Control \n   */\n  public thumbnailFrame() {\n    this.currentFrame = this.note.thumbFrameIndex;\n  }\n\n  /** \n   * Begins a seek operation\n   * @category Playback Control \n   */\n  public startSeek() {\n    if (!this.isSeeking) {\n      this.emit(PlayerEvent.SeekStart);\n      this.wasPlaying = this.isPlaying;\n      this.pause();\n      this.isSeeking = true;\n    }\n  }\n\n  /** \n   * Seek the playback progress to a different position\n   * @param position - animation playback position, range `0` to `1`\n   * @category Playback Control \n   */\n  public seek(position: number) {\n    if (this.isSeeking)\n      this.progress = position * 100;\n  }\n\n  /** \n   * Ends a seek operation\n   * @category Playback Control \n   */\n  public endSeek() {\n    if (this.isSeeking && this.wasPlaying === true)\n      this.play();\n    this.wasPlaying = false;\n    this.isSeeking = false;\n  }\n\n  /**\n   * Draws the specified animation frame to the canvas. Note that this doesn't update the playback time or anything, it simply decodes a given frame and displays it.\n   * @param frameIndex \n   * @category Display Control \n   */\n  public drawFrame(frameIndex: number) {\n    this.renderer.drawFrame(frameIndex);\n  }\n\n  /**\n   * Forces the current animation frame to be redrawn\n   * @category Display Control \n   */\n  public forceUpdate() {\n    this.renderer.forceUpdate();\n  }\n\n  /**\n   * Resize the playback canvas to a new size\n   * @param width - new canvas width (pixels)\n   * @param height - new canvas height (pixels)\n   * \n   * The ratio between `width` and `height` should be 3:4 for best results\n   * \n   * @category Display Control \n   */\n  public resize(width: number, height: number) {\n    if (height !== width * .75)\n      console.warn(`Canvas width to height ratio should be 3:4 for best results (got ${width}x${height})`);\n    this.renderer.setCanvasSize(width, height);\n    this.forceUpdate();\n  }\n\n  /**\n   * Sets whether an animation layer should be visible throughout the entire animation\n   * @param layer - layer index, starting at 1\n   * @param value - `true` for visible, `false` for invisible\n   * \n   * @category Display Control \n   */\n  public setLayerVisibility(layer: number, value: boolean) {\n    this.note.layerVisibility[layer] = value;\n    this.layerVisibility[layer] = value;\n    this.forceUpdate();\n  }\n\n  /**\n   * Returns the visibility state for a given layer\n   * @param layer - layer index, starting at 1\n   * \n   * @category Display Control\n   */\n  public getLayerVisibility(layer: number) {\n    return this.layerVisibility[layer];\n  }\n\n  /**\n   * Toggles whether an animation layer should be visible throughout the entire animation\n   * \n   * @category Display Control \n   */\n  public toggleLayerVisibility(layerIndex: number) {\n    this.setLayerVisibility(layerIndex, !this.layerVisibility[layerIndex]);\n  }\n\n  public playAudio() {\n    this.audio.playFrom(this.currentTime);\n  }\n\n  public stopAudio() {\n    this.audio.stop();\n  }\n\n  /** \n   * Toggle audio Sudomemo equalizer filter\n   * @category Audio Control\n   */\n  public toggleAudioEq() {\n    this.setAudioEq(!this.audio.useEq);\n  }\n\n  /** \n   * Turn audio Sudomemo equalizer filter on or off\n   * @category Audio Control\n   */\n  public setAudioEq(state: boolean) {\n    if (this.isPlaying) {\n      this.wasPlaying = true;\n      this.stopAudio();\n    }\n    this.audio.useEq = state;\n    if (this.wasPlaying) {\n      this.wasPlaying = false;\n      this.playAudio();\n    }\n  }\n\n  /**\n   * Turn the audio off\n   * @category Audio Control\n   */\n  public mute() {\n    this.setMuted(true);\n  }\n\n  /**\n   * Turn the audio on\n   * @category Audio Control\n   */\n  public unmute() {\n    this.setMuted(false);\n  }\n\n  /**\n   * Turn the audio on or off\n   * @category Audio Control\n   */\n  public setMuted(isMute: boolean) {\n    if (isMute)\n      this.audio.volume = 0;\n    else\n      this.audio.volume = this._volume;\n    this._muted = isMute;\n    this.emit(PlayerEvent.VolumeChange, this.audio.volume);\n  }\n\n  /**\n   * Get the audio mute state\n   * @category Audio Control\n   */\n  public getMuted() {\n    return this.volume === 0 ? true : this._muted;\n  }\n\n  /** \n   * Switch the audio between muted and unmuted\n   * @category Audio Control\n   */\n  public toggleMuted() {\n    this.setMuted(!this._muted);\n  }\n\n  /**\n   * Set the audio volume\n   * @category Audio Control\n   */\n  public setVolume(volume: number) {\n    assertRange(volume, 0, 1, 'volume');\n    this._volume = volume;\n    this.audio.volume = volume;\n    this.emit(PlayerEvent.VolumeChange, this.audio.volume);\n  }\n\n  /**\n   * Get the current audio volume\n   * @category Audio Control\n   */\n  public getVolume() {\n    return this._muted ? 0 : this._volume;\n  }\n\n  /**\n   * Implementation of the `HTMLVideoElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/seekToNextFrame | seekToNextFrame} method\n   * @category HTMLVideoElement compatibility\n   */\n  public seekToNextFrame() {\n    this.nextFrame();\n  }\n\n  /**\n   * Implementation of the `HTMLMediaElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/fastSeek | fastSeek} method\n   * @category HTMLVideoElement compatibility\n   */\n  public fastSeek(time: number) {\n    this.currentTime = time;\n  }\n\n  /**\n   * Implementation of the `HTMLVideoElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality | getVideoPlaybackQuality } method\n   * @category HTMLVideoElement compatibility\n   */\n  public canPlayType(mediaType: string) {\n    switch (mediaType) {\n      case 'application/x-ppm':\n      case 'application/x-kwz':\n      case 'video/x-ppm':\n      case 'video/x-kwz':\n      // lauren is planning on registering these officially\n      case 'video/vnd.nintendo.ugomemo.ppm':\n      case 'video/vnd.nintendo.ugomemo.kwz':\n        return 'probably';\n      case 'application/octet-stream':\n        return 'maybe';\n      // and koizumi is planning his revenge\n      case 'video/vnd.nintendo.ugomemo.fykt':\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Implementation of the `HTMLVideoElement` [https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality](getVideoPlaybackQuality) method\n   * @category HTMLVideoElement compatibility\n   */\n  public getVideoPlaybackQuality() {\n    const quality: VideoPlaybackQuality = {\n      creationTime: 0,\n      droppedVideoFrames: 0,\n      totalVideoFrames: this.frameCount\n    };\n    return quality;\n  }\n\n  /**\n   * Implementation of the `HTMLVideoElement` [https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/requestPictureInPicture](requestPictureInPicture) method. Not currently working, only a stub.\n   * @category HTMLVideoElement compatibility\n   */\n  public requestPictureInPicture() {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Implementation of the `HTMLVideoElement` [https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/captureStream](captureStream) method. Not currently working, only a stub.\n   * @category HTMLVideoElement compatibility\n   */\n  public captureStream() {\n    throw new Error('Not implemented');\n  }\n\n\n  /**\n   * Fired when animation playback begins or is resumed\n   * @category playback\n   * @event play\n   */\n  public onplay: () => void;\n\n  /**\n   * Fired when animation playback is paused\n   * @category playback\n   * @event pause \n   */\n  public onpause: () => void;\n\n  /**\n   * Fired when the Flipnote has loaded enough to begin animation play\n   * @category HTMLVideoElement compatibility\n   * @event canplay\n   */\n  public oncanplay: () => void;\n\n  /**\n   *Fired when the Flipnote has loaded enough to play successfully\n   * @category HTMLVideoElement compatibility\n   * @event canplaythrough\n   */\n  public oncanplaythrough: () => void;\n\n  /**\n   * Fired when a seek operation begins\n   * @category playback\n   * @event seeking\n   */\n  public onseeking: () => void;\n\n  /**\n   * Fired when a seek operation completes\n   * @category playback\n   * @event seeked\n   */\n  public onseeked: () => void;\n\n  /**\n   * Fired when the animation duration has changed\n   * @category HTMLVideoElement compatibility\n   * @event durationchange\n   */\n  public ondurationchange: () => void;\n\n  /**\n   * Fired when playbackc has looped after reaching the end\n   * @category playback\n   * @event loop\n   */\n  public onloop: () => void;\n\n  /**\n   * Fired when playback has ended\n   * @category playback\n   * @event ended\n   */\n  public onended: () => void;\n\n  /**\n   * Fired when the player audio volume or muted state has changed\n   * @category audio\n   * @event volumechange\n   */\n  public onvolumechane: (volume: number) => void;\n\n  /**\n   * Fired when playback progress has changed\n   * @category playback\n   * @event progress\n   */\n  public onprogress: (progress: number) => void;\n\n  /**\n   * Fired when the playback time has changed\n   * @category playback\n   * @event timeupdate\n   */\n  public ontimeupdate: (time: number) => void;\n\n  /**\n   * Fired when the current frame index has changed\n   * @category frame\n   * @event frameupdate\n   */\n  public onframeupdate: (frameIndex: number) => void;\n\n  /**\n   * Fired when {@link nextFrame} has been called\n   * @category frame\n   * @event framenext\n   */\n  public onframenext: () => void;\n\n  /**\n   * Fired when {@link prevFrame} has been called\n   * @category frame\n   * @event frameprev\n   */\n  public onframeprev: () => void;\n\n  /**\n   * Fired when {@link firstFrame} has been called\n   * @category frame\n   * @event framefirst\n   */\n  public onframefirst: () => void;\n\n  /**\n   * Fired when {@link lastFrame} has been called\n   * @category frame\n   * @event framelast\n   */\n  public onframelast: () => void;\n\n  /**\n   * Fired when a Flipnote is ready for playback\n   * @category lifecycle\n   * @event ready\n   */\n  public onready: () => void;\n\n  /**\n   * Fired when a Flipnote has finished loading\n   * @category lifecycle\n   * @event load\n   */\n  public onload: () => void;\n\n  /**\n   * Fired when a Flipnote has begun loading\n   * @category lifecycle\n   * @event loadstart\n   */\n  public onloadstart: () => void;\n\n  /**\n   * Fired when the Flipnote data has been loaded; implementation of the `HTMLMediaElement` [https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadeddata_event](loadeddata) event.\n   * @category HTMLVideoElement compatibility\n   * @event loadeddata\n   */\n  public onloadeddata: () => void;\n\n  /**\n   * Fired when the Flipnote metadata has been loaded; implementation of the `HTMLMediaElement` [https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadedmetadata_event](loadedmetadata) event.\n   * @category HTMLVideoElement compatibility\n   * @event loadedmetadata\n   */\n  public onloadedmetadata: () => void;\n\n  /**\n   * Fired when the media has become empty; implementation of the `HTMLMediaElement` [https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/emptied_event](emptied) event.\n   * @category HTMLVideoElement compatibility\n   * @event emptied\n   */\n  public onemptied: () => void;\n\n  /**\n   * Fired after the Flipnote has been closed with {@link close}\n   * @category lifecycle\n   * @event close\n   */\n  public onclose: () => void;\n\n  /**\n   * Fired after a loading, parsing or playback error occurs\n   * @category lifecycle\n   * @event error\n   */\n  public onerror: (err?: Error) => void;\n\n  /**\n   * Fired just before the player has been destroyed, after calling {@link destroy}\n   * @category lifecycle\n   * @event destroy\n   */\n  public ondestroy: () => void;\n\n  /** \n   * Add an event callback\n   * @category Event API\n   */\n  public on(eventType: PlayerEvent | PlayerEvent[], listener: Function) {\n    const events = this.events;\n    const eventList = Array.isArray(eventType) ? eventType : [eventType];\n    eventList.forEach(eventType => {\n      if (!events.has(eventType))\n        events.set(eventType, [listener]);\n      else\n        events.get(eventType).push(listener);\n    });\n  }\n\n  /** \n   * Remove an event callback\n   * @category Event API\n   */\n  public off(eventType: PlayerEvent | PlayerEvent[], callback: Function) {\n    const events = this.events;\n    const eventList = Array.isArray(eventType) ? eventType : [eventType];\n    eventList.forEach(eventType => {\n      if (!events.has(eventType))\n        return;\n      const callbackList = events.get(eventType);\n      events.set(eventType, callbackList.splice(callbackList.indexOf(callback), 1));\n    });\n  }\n\n  /** \n   * Emit an event - mostly used internally\n   * @category Event API\n   */\n  public emit(eventType: PlayerEvent, ...args: any) {\n    const events = this.events;\n    if (eventType !== PlayerEvent.__Any && events.has(eventType)) {\n      const callbackList = events.get(eventType);\n      callbackList.forEach(callback => callback.apply(null, args));\n      // call onwhatever() function for this event, if one has been added\n      const listenerName = `on${ eventType }`;\n      const thisAsAny = this as any;\n      if (typeof thisAsAny[listenerName] === 'function')\n        thisAsAny[listenerName].apply(null, args);\n    }\n    // \"any\" event listeners fire for all events, and receive eventType as their first param\n    if (events.has(PlayerEvent.__Any)) {\n      const callbackList = events.get(PlayerEvent.__Any);\n      callbackList.forEach(callback => callback.apply(null, [eventType, ...args]));\n    }\n  }\n\n  /** \n   * Remove all registered event callbacks\n   * @category Event API\n   */\n  public clearEvents() {\n    this.events.clear();\n  }\n\n  /** \n   * Destroy a Player instace\n   * @category Lifecycle\n   */\n  public async destroy() {\n    this.clearEvents();\n    this.emit(PlayerEvent.Destroy);\n    this.closeNote();\n    await this.renderer.destroy();\n    await this.audio.destroy();\n  }\n\n  /** \n   * Returns true if the player supports a given event or method name\n   */\n  public supports(name: string) {\n    const isEvent = this.supportedEvents.includes(name as PlayerEvent);\n    const isMethod = typeof (this as any)[name] === 'function';\n    return isEvent || isMethod;\n  }\n\n  /** @internal */\n  public assertNoteLoaded() {\n    assert(this.isNoteLoaded, 'No Flipnote is currently loaded in this player');\n  }\n\n}","import { Player } from '../player';\n\n/** @internal */\ntype Constructor<T = {}> = new (...args: any[]) => T;\n\n/** \n * This is a bit of a hack to get a player component class to wrap a Player instance, \n * while also inheriting all of the Player API's methods and properties.\n * \n * The resulting PlayerMixinClass will get a Player instance on this.player, \n * and all of the Player API methods and properties applied as wrappers.\n * \n * e.g. \n * - PlayerMixinClass.play() will have the same behaviour as Player.play(), but will call this.player.play() internally.\n * - PlayerMixinClass.paused will have getters and setters to match it to this.player.paused.\n * @internal\n */\nexport function PlayerMixin<TargetBase extends Constructor>(Target: TargetBase) {\n  class PlayerMixinClass extends Target {\n    // the player instance that Mixin will be wrapping\n    public player: Player;\n\n    // Mixin needs to re-define all the normal player properties, but most should be made readonly anyway...\n\n    get renderer() {\n      return this.player.renderer;\n    }\n\n    get audio() {\n      return this.player.audio;\n    }\n\n    get canvasEl() {\n      return this.player.canvasEl;\n    }\n\n    get note() {\n      return this.player.note;\n    }\n\n    get noteFormat() {\n      return this.player.noteFormat;\n    }\n\n    get meta() {\n      return this.player.meta;\n    }\n\n    get duration() {\n      return this.player.duration;\n    }\n\n    get layerVisibility() {\n      return this.player.layerVisibility;\n    }\n\n    get autoplay() {\n      return this.player.autoplay;\n    }\n  \n    set autoplay(value: boolean) {\n      this.player.autoplay = value;\n    }\n  };\n\n  // make sure mixin class gets the player types\n  interface PlayerMixinClass extends Player {}\n\n  // add all Player API methods and getter/setter props to target\n  for (let key of Reflect.ownKeys(Player.prototype)) {\n    let desc = Object.getOwnPropertyDescriptor(Player.prototype, key);\n\n    // don't override stuff that already exists, and ignore JS prototype junk\n    if (key in Target.prototype || key === 'constructor' || key === 'name' || key === 'prototype') {\n      continue;\n    }\n    // override methods to call e.g. `this.player.methodName()` when `methodName()` is called\n    else if (desc.value && typeof desc.value === 'function') {\n      Object.defineProperty(PlayerMixinClass.prototype, key, {\n        ...desc,\n        value: function(...args: any[]) {\n          return this.player[key](...args);\n        }\n      });\n    }\n    // override getters and setters so that e.g. `property` will always reflect `this.player.property`\n    else if (desc.get || desc.set) {\n      Object.defineProperty(PlayerMixinClass.prototype, key, {\n        ...desc,\n        set: function(value: any) {\n          this.player[key] = value;\n        },\n        get: function() {\n          return this.player[key];\n        }\n      });\n    }\n  }\n\n  return PlayerMixinClass;\n}","import { assertNodeEnv, assertBrowserEnv } from '../utils';\n\nexport abstract class EncoderBase {\n\n  public mimeType: string;\n  public dataUrl: string = null;\n\n  /**\n   * Returns the file data as an {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer | ArrayBuffer}\n   */\n  public abstract getArrayBuffer(): ArrayBuffer;\n  \n  /**\n   * Returns the file data as a NodeJS {@link https://nodejs.org/api/buffer.html | Buffer}\n   * \n   * Note: This method does not work outside of NodeJS environments\n   */\n  public getBuffer(): Buffer {\n    assertNodeEnv();\n    return Buffer.from(this.getArrayBuffer());\n  }\n\n  /**\n   * Returns the file data as a {@link https://developer.mozilla.org/en-US/docs/Web/API/Blob | Blob}\n   */\n  public getBlob(): Blob {\n    assertBrowserEnv();;\n    return new Blob([this.getArrayBuffer()], {\n      type: this.mimeType\n    });\n  }\n\n  /**\n   * Returns the file data as an {@link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL | Object URL}\n   * \n   * Note: This method does not work outside of browser environments\n   */\n  public getUrl(): string {\n    assertBrowserEnv();\n    if (this.dataUrl)\n      return this.dataUrl;\n    return window.URL.createObjectURL(this.getBlob());\n  }\n\n  /**\n   * Revokes this file's {@link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL | Object URL} if one has been created, use this when the url created with {@link getUrl} is no longer needed, to preserve memory.\n   * \n   * Note: This method does not work outside of browser environments\n   */\n  public revokeUrl(): void {\n    assertBrowserEnv();\n    if (this.dataUrl)\n      window.URL.revokeObjectURL(this.dataUrl);\n  }\n\n\n}","import { ByteArray } from '../utils/byteArray';\n\n/*\n  LZWEncoder.js\n\n  Authors\n  Kevin Weiner (original Java version - kweiner@fmsware.com)\n  Thibault Imbert (AS3 version - bytearray.org)\n  Johan Nordberg (JS version - code@johan-nordberg.com)\n  James Daniel (ES6/TS version)\n\n  Acknowledgements\n  GIFCOMPR.C - GIF Image compression routines\n  Lempel-Ziv compression based on 'compress'. GIF modifications by\n  David Rowley (mgardi@watdcsu.waterloo.edu)\n  GIF Image compression - modified 'compress'\n  Based on: compress.c - File compression ala IEEE Computer, June 1984.\n  By Authors: Spencer W. Thomas (decvax!harpo!utah-cs!utah-gr!thomas)\n  Jim McKie (decvax!mcvax!jim)\n  Steve Davies (decvax!vax135!petsd!peora!srd)\n  Ken Turkowski (decvax!decwrl!turtlevax!ken)\n  James A. Woods (decvax!ihnp4!ames!jaw)\n  Joe Orost (decvax!vax135!petsd!joe)\n*/\n\n/** @internal */\nconst EOF = -1;\n/** @internal */\nconst BITS = 12;\n/** @internal */\nconst HSIZE = 5003; // 80% occupancy\n/** @internal */\nconst masks = [\n  0x0000, 0x0001, 0x0003, 0x0007, 0x000F, 0x001F,\n  0x003F, 0x007F, 0x00FF, 0x01FF, 0x03FF, 0x07FF,\n  0x0FFF, 0x1FFF, 0x3FFF, 0x7FFF, 0xFFFF\n];\n\n/** @internal */\nexport class LzwCompressor {\n  public width: number;\n  public height: number;\n  public pixels: Uint8Array;\n  public colorDepth: number;\n\n  private initCodeSize: number;\n  private accum = new Uint8Array(256);\n  private htab = new Int32Array(HSIZE);\n  private codetab = new Int32Array(HSIZE);\n  private cur_accum = 0;\n  private cur_bits = 0;\n  private n_bits: number;\n  private a_count: number;\n  private remaining: number;\n  private curPixel = 0;\n  private free_ent = 0; // first unused entry\n  private maxcode: number;\n  // block compression parameters -- after all codes are used up,\n  // and compression rate changes, start over.\n  private clear_flg: boolean = false;\n  // Algorithm: use open addressing double hashing (no chaining) on the\n  // prefix code / next character combination. We do a variant of Knuth's\n  // algorithm D (vol. 3, sec. 6.4) along with G. Knott's relatively-prime\n  // secondary probe. Here, the modular division first probe is gives way\n  // to a faster exclusive-or manipulation. Also do block compression with\n  // an adaptive reset, whereby the code table is cleared when the compression\n  // ratio decreases, but after the table fills. The variable-length output\n  // codes are re-sized at this point, and a special CLEAR code is generated\n  // for the decompressor. Late addition: construct the table according to\n  // file size for noticeable speed improvement on small files. Please direct\n  // questions about this implementation to ames!jaw.\n  private g_init_bits: number = undefined;\n  private ClearCode: number = undefined;\n  private EOFCode: number = undefined;\n\n  constructor(width: number, height: number, colorDepth: number) {\n    this.width = width;\n    this.height = height;\n    this.colorDepth = colorDepth;\n    this.reset();\n  }\n\n  reset() {\n    this.initCodeSize = Math.max(2, this.colorDepth);\n    this.accum.fill(0);\n    this.htab.fill(0);\n    this.codetab.fill(0);\n    this.cur_accum = 0;\n    this.cur_bits = 0;\n    this.curPixel = 0;\n    this.free_ent = 0; // first unused entry\n    this.maxcode;\n    // block compression parameters -- after all codes are used up,\n    // and compression rate changes, start over.\n    this.clear_flg = false;\n    // Algorithm: use open addressing double hashing (no chaining) on the\n    // prefix code / next character combination. We do a variant of Knuth's\n    // algorithm D (vol. 3, sec. 6.4) along with G. Knott's relatively-prime\n    // secondary probe. Here, the modular division first probe is gives way\n    // to a faster exclusive-or manipulation. Also do block compression with\n    // an adaptive reset, whereby the code table is cleared when the compression\n    // ratio decreases, but after the table fills. The variable-length output\n    // codes are re-sized at this point, and a special CLEAR code is generated\n    // for the decompressor. Late addition: construct the table according to\n    // file size for noticeable speed improvement on small files. Please direct\n    // questions about this implementation to ames!jaw.\n    this.g_init_bits = undefined;\n    this.ClearCode = undefined;\n    this.EOFCode = undefined;\n  }\n\n  // Add a character to the end of the current packet, and if it is 254\n  // characters, flush the packet to disk.\n  char_out(c: number, outs: ByteArray) {\n    this.accum[this.a_count++] = c;\n    if (this.a_count >= 254) this.flush_char(outs);\n  }\n\n  // Clear out the hash table\n  // table clear for block compress\n  cl_block(outs: ByteArray) {\n    this.cl_hash(HSIZE);\n    this.free_ent = this.ClearCode + 2;\n    this.clear_flg = true;\n    this.output(this.ClearCode, outs);\n  }\n\n  // Reset code table\n  cl_hash(hsize: number) {\n    for (var i = 0; i < hsize; ++i) this.htab[i] = -1;\n  }\n\n  compress(init_bits: number, outs: ByteArray) {\n    var fcode, c, i, ent, disp, hsize_reg, hshift;\n\n    // Set up the globals: this.g_init_bits - initial number of bits\n    this.g_init_bits = init_bits;\n\n    // Set up the necessary values\n    this.clear_flg = false;\n    this.n_bits = this.g_init_bits;\n    this.maxcode = this.get_maxcode(this.n_bits);\n\n    this.ClearCode = 1 << (init_bits - 1);\n    this.EOFCode = this.ClearCode + 1;\n    this.free_ent = this.ClearCode + 2;\n\n    this.a_count = 0; // clear packet\n\n    ent = this.nextPixel();\n\n    hshift = 0;\n    for (fcode = HSIZE; fcode < 65536; fcode *= 2) ++hshift;\n    hshift = 8 - hshift; // set hash code range bound\n    hsize_reg = HSIZE;\n    this.cl_hash(hsize_reg); // clear hash table\n\n    this.output(this.ClearCode, outs);\n\n    outer_loop: while ((c = this.nextPixel()) != EOF) {\n      fcode = (c << BITS) + ent;\n      i = (c << hshift) ^ ent; // xor hashing\n      if (this.htab[i] === fcode) {\n        ent = this.codetab[i];\n        continue;\n      } \n      else if (this.htab[i] >= 0) { // non-empty slot\n        disp = hsize_reg - i; // secondary hash (after G. Knott)\n        if (i === 0) {\n          disp = 1;\n        }\n        do {\n          if ((i -= disp) < 0) {\n            i += hsize_reg;\n          }\n          if (this.htab[i] === fcode) {\n            ent = this.codetab[i];\n            continue outer_loop;\n          }\n        } while (this.htab[i] >= 0);\n      }\n      this.output(ent, outs);\n      ent = c;\n      if (this.free_ent < 1 << BITS) {\n        this.codetab[i] = this.free_ent++; // code -> hasthis.htable\n        this.htab[i] = fcode;\n      } else {\n        this.cl_block(outs);\n      }\n    }\n\n    // Put out the final code.\n    this.output(ent, outs);\n    this.output(this.EOFCode, outs);\n  }\n\n  encode(pixels: Uint8Array, outs: ByteArray) {\n    this.pixels = pixels;\n    outs.writeByte(this.initCodeSize); // write 'initial code size' byte\n    this.remaining = this.width * this.height; // reset navigation variables\n    this.curPixel = 0;\n    this.compress(this.initCodeSize + 1, outs); // compress and write the pixel data\n    outs.writeByte(0); // write block terminator\n  }\n\n  // Flush the packet to disk, and reset the this.accumulator\n  flush_char(outs: ByteArray) {\n    if (this.a_count > 0) {\n      outs.writeByte(this.a_count);\n      outs.writeBytes(this.accum, 0, this.a_count);\n      this.a_count = 0;\n    }\n  }\n\n  get_maxcode(n_bits: number) {\n    return (1 << n_bits) - 1;\n  }\n\n  // Return the next pixel from the image\n  nextPixel() {\n    if (this.remaining === 0) return EOF;\n    --this.remaining;\n    var pix = this.pixels[this.curPixel++];\n    return pix & 0xff;\n  }\n\n  output(code: number, outs: ByteArray) {\n    this.cur_accum &= masks[this.cur_bits];\n\n    if (this.cur_bits > 0) this.cur_accum |= (code << this.cur_bits);\n    else this.cur_accum = code;\n\n    this.cur_bits += this.n_bits;\n\n    while (this.cur_bits >= 8) {\n      this.char_out((this.cur_accum & 0xff), outs);\n      this.cur_accum >>= 8;\n      this.cur_bits -= 8;\n    }\n\n    // If the next entry is going to be too big for the code size,\n    // then increase it, if possible.\n    if (this.free_ent > this.maxcode || this.clear_flg) {\n      if (this.clear_flg) {\n        this.maxcode = this.get_maxcode(this.n_bits = this.g_init_bits);\n        this.clear_flg = false;\n      } else {\n        ++this.n_bits;\n        if (this.n_bits == BITS) this.maxcode = 1 << BITS;\n        else this.maxcode = this.get_maxcode(this.n_bits);\n      }\n    }\n\n    if (code == this.EOFCode) {\n      // At EOF, write the rest of the buffer.\n      while (this.cur_bits > 0) {\n        this.char_out((this.cur_accum & 0xff), outs);\n        this.cur_accum >>= 8;\n        this.cur_bits -= 8;\n      }\n      this.flush_char(outs);\n    }\n  }\n}\n","import { Flipnote } from '../parsers';\nimport { DataStream, ByteArray } from '../utils/index';\nimport { assertBrowserEnv } from '../utils';\nimport { EncoderBase } from './EncoderBase';\nimport { LzwCompressor } from './LwzCompressor';\n\n/**\n * GIF RGBA palette color definition\n */\nexport type GifPaletteColor = [\n   /** Red (0 to 255) */\n   number,\n   /** Green (0 to 255) */\n   number,\n   /** Blue (0 to 255) */\n   number,\n   /** Alpha (0 to 255) */\n   number\n];\n\n/**\n * Optional GIF encoder settings\n */\nexport interface GifImageSettings {\n  /** Use transparency */\n  transparentBg: boolean;\n  /** Delay between animated GIF frames, measured in milliseconds */\n  delay: number;\n  /** Color depth as bits per pixel. Defaults to 8 */\n  colorDepth: number;\n  /** -1 = no repeat, 0 = repeat forever. Anything else is repeat count */\n  repeat: number;\n};\n\n/** \n * GIF image encoder\n * \n * Supports static single-frame GIF export as well as animated GIF\n * @category File Encoder\n */\nexport class GifImage extends EncoderBase {\n\n  /**\n   * Default GIF encoder settings\n   */\n  static defaultSettings: GifImageSettings = {\n    transparentBg: false,\n    delay: 100,\n    repeat: -1,\n    colorDepth: 8\n  };\n\n  public mimeType = 'gif/image';\n  /** Image width */\n  public width: number;\n  /** Image height */\n  public height: number;\n  /** GIF global RGBA color palette. Max 256 colors, alpha channel is ignored */\n  public palette: GifPaletteColor[];\n  /** GIF image settings, such as whether it should loop, the delay between frames, etc */\n  public settings: GifImageSettings;\n  /** Number of current GIF frames */\n  public frameCount: number = 0;\n\n  private data: ByteArray;\n  private compressor: LzwCompressor;\n\n  /**\n   * Create a new GIF image object\n   * @param width image width\n   * @param height image height\n   * @param settings whether the gif should loop, the delay between frames, etc. See {@link GifEncoderSettings}\n   */\n  constructor(width: number, height: number, settings: Partial<GifImageSettings> = {}) {\n    super();\n    this.width = width;\n    this.height = height;\n    this.data = new ByteArray();\n    this.settings = { ...GifImage.defaultSettings, ...settings };\n    this.compressor = new LzwCompressor(width, height, settings.colorDepth);\n  }\n\n  /**\n   * Create an animated GIF image from a Flipnote\n   * \n   * This will encode the entire animation, so depending on the number of frames it could take a while to return.\n   * @param flipnote {@link Flipnote} object ({@link PpmParser} or {@link KwzParser} instance)\n   * @param settings whether the gif should loop, the delay between frames, etc. See {@link GifEncoderSettings}\n   */\n  static fromFlipnote(flipnote: Flipnote, settings: Partial<GifImageSettings> = {}) {\n    const gif = new GifImage(flipnote.imageWidth, flipnote.imageHeight, {\n      delay: 100 / flipnote.framerate,\n      repeat: flipnote.meta?.loop ? -1 : 0,\n      ...settings\n    });\n\n    gif.palette = flipnote.globalPalette;\n\n    for (let frameIndex = 0; frameIndex < flipnote.frameCount; frameIndex++)\n      gif.writeFrame(flipnote.getFramePixels(frameIndex));\n\n    return gif;\n  }\n\n  /**\n   * Create an GIF image from a single Flipnote frame\n   * @param flipnote\n   * @param frameIndex animation frame index to encode\n   * @param settings whether the gif should loop, the delay between frames, etc. See {@link GifEncoderSettings}\n   */\n  static fromFlipnoteFrame(flipnote: Flipnote, frameIndex: number, settings: Partial<GifImageSettings> = {}) {\n    const gif = new GifImage(flipnote.imageWidth, flipnote.imageHeight, {\n      // TODO: look at ideal delay and repeat settings for single frame GIF\n      delay: 100 / flipnote.framerate,\n      repeat: -1,\n      ...settings,\n    });\n    gif.palette = flipnote.globalPalette;\n    gif.writeFrame(flipnote.getFramePixels(frameIndex));\n    return gif;\n  }\n\n  /**\n   * Add a frame to the GIF image\n   * @param pixels Raw pixels to encode, must be an uncompressed 8bit array of palette indices with a size matching image width * image height\n   */\n  public writeFrame(pixels: Uint8Array) {\n    if (this.frameCount === 0)\n      this.writeFirstFrame(pixels);\n    else\n      this.writeAdditionalFrame(pixels);\n    this.frameCount += 1;\n  }\n\n  private writeFirstFrame(pixels: Uint8Array) {\n    const paletteSize = this.palette.length;\n    // calc colorDepth\n    for (var p = 1; 1 << p < paletteSize; p += 1)\n      continue;\n\n    this.settings.colorDepth = p;\n    this.writeHeader();\n    this.writeColorTable();\n    this.writeNetscapeExt();\n    this.writeFrameHeader();\n    this.writePixels(pixels);\n  }\n\n  private writeAdditionalFrame(pixels: Uint8Array) {\n    this.writeFrameHeader();\n    this.writePixels(pixels);\n  }\n\n  private writeHeader() {\n    const header = new DataStream(new ArrayBuffer(13));\n    header.writeChars('GIF89a');\n    // Logical Screen Descriptor\n    header.writeUint16(this.width);\n    header.writeUint16(this.height);\n    header.writeUint8(\n      0x80 | // 1 : global color table flag = 1 (gct used)\n      (this.settings.colorDepth - 1) // 6-8 : gct size\n    );\n    header.writeBytes([\n      0x0,\n      0x0\n    ]);\n    this.data.writeBytes(new Uint8Array(header.buffer));\n  }\n\n  private writeColorTable() {\n    const palette = new Uint8Array(3 * Math.pow(2, this.settings.colorDepth));\n    let ptr = 0;\n    for(let index = 0; index < this.palette.length; index += 1) {\n      const [r, g, b, a] = this.palette[index];\n      palette[ptr++] = r;\n      palette[ptr++] = g;\n      palette[ptr++] = b;\n    }\n    this.data.writeBytes(palette);\n  }\n\n  private writeNetscapeExt() {\n    const netscapeExt = new DataStream(new ArrayBuffer(19));\n    netscapeExt.writeBytes([\n      0x21, // extension introducer\n      0xFF, // app extension label\n      11, // block size\n    ]);\n    netscapeExt.writeChars('NETSCAPE2.0');\n    netscapeExt.writeUint8(3); // subblock size\n    netscapeExt.writeUint8(1); // loop subblock id\n    netscapeExt.writeUint16(this.settings.repeat); // loop flag\n    this.data.writeBytes(new Uint8Array(netscapeExt.buffer));\n  }\n\n  private writeFrameHeader() {\n    const fHeader = new DataStream(new ArrayBuffer(18));\n    // graphics control ext block\n    const transparentFlag = this.settings.transparentBg ? 0x1 : 0x0;\n    fHeader.writeBytes([\n      0x21, // extension introducer\n      0xF9, // graphic control label\n      0x4, // block size\n      0x0 | transparentFlag // bitflags\n    ]);\n    fHeader.writeUint16(this.settings.delay); // loop flag\n    fHeader.writeBytes([\n      0x0,\n      0x0\n    ]);\n    // image desc block\n    fHeader.writeUint8(0x2C);\n    fHeader.writeUint16(0); // image left\n    fHeader.writeUint16(0); // image top\n    fHeader.writeUint16(this.width);\n    fHeader.writeUint16(this.height);\n    fHeader.writeUint8(0);\n    this.data.writeBytes(new Uint8Array(fHeader.buffer));\n  }\n\n  private writePixels(pixels: Uint8Array) {\n    this.compressor.colorDepth = this.settings.colorDepth;\n    this.compressor.reset();\n    this.compressor.encode(pixels, this.data);\n  }\n\n  /**\n   * Returns the GIF image data as an {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer | ArrayBuffer}\n   */\n  public getArrayBuffer() {\n    return this.data.getBuffer();\n  }\n\n /**\n   * Returns the GIF image data as an {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/Image | Image} object\n   * \n   * Note: This method does not work outside of browser environments\n   */\n  public getImage(): HTMLImageElement {\n    assertBrowserEnv();\n    const img = new Image(this.width, this.height);\n    img.src = this.getUrl();\n    return img;\n  }\n}","import { Flipnote, FlipnoteAudioTrack } from '../parsers';\nimport { DataStream } from '../utils';\nimport { EncoderBase } from './EncoderBase';\n\nexport type WavSampleBuffer = Int16Array | Float32Array;\n\n/** \n * Wav audio object. Used to create a {@link https://en.wikipedia.org/wiki/WAV | WAV} file from a PCM audio stream or a {@link Flipnote} object. \n * \n * Currently only supports PCM s16_le audio encoding.\n * \n * @category File Encoder\n */\nexport class WavAudio extends EncoderBase {\n\n  public mimeType: 'audio/wav';\n\n  /** Audio samplerate */\n  public sampleRate: number;\n  /** Number of audio channels */\n  public channels: number;\n  /** Number of bits per sample */\n  public bitsPerSample: number;\n\n  private header: DataStream;\n  private pcmData: Int16Array;\n\n  /**\n   * Create a new WAV audio object\n   * @param sampleRate audio samplerate\n   * @param channels number of audio channels\n   * @param bitsPerSample number of bits per sample\n   */\n  constructor(sampleRate: number, channels=1, bitsPerSample=16) {\n    super();\n    this.sampleRate = sampleRate;\n    this.channels = channels;\n    this.bitsPerSample = bitsPerSample;\n    // Write WAV file header\n    // Reference: http://www.topherlee.com/software/pcm-tut-wavformat.html\n    const headerBuffer = new ArrayBuffer(44);\n    const header = new DataStream(headerBuffer);\n    // 'RIFF' indent\n    header.writeChars('RIFF');\n    // filesize (set later)\n    header.writeUint32(0);\n    // 'WAVE' indent\n    header.writeChars('WAVE');\n    // 'fmt ' section header\n    header.writeChars('fmt ');\n    // fmt section length\n    header.writeUint32(16);\n    // specify audio format is pcm (type 1)\n    header.writeUint16(1);\n    // number of audio channels\n    header.writeUint16(this.channels);\n    // audio sample rate\n    header.writeUint32(this.sampleRate);\n    // byterate = (sampleRate * bitsPerSample * channelCount) / 8\n    header.writeUint32((this.sampleRate * this.bitsPerSample * this.channels) / 8);\n    // blockalign = (bitsPerSample * channels) / 8\n    header.writeUint16((this.bitsPerSample * this.channels) / 8);\n    // bits per sample\n    header.writeUint16(this.bitsPerSample);\n    // 'data' section header\n    header.writeChars('data');\n    // data section length (set later)\n    header.writeUint32(0);\n    this.header = header;\n    this.pcmData = null;\n  }\n\n  /**\n   * Create a WAV audio file from a Flipnote's master audio track\n   * @param flipnote\n   * @param trackId\n   */\n  static fromFlipnote(note: Flipnote) {\n    const sampleRate = note.sampleRate;\n    const wav = new WavAudio(sampleRate, 1, 16);\n    const pcm = note.getAudioMasterPcm(sampleRate);\n    wav.writeSamples(pcm);\n    return wav;\n  }\n\n  /**\n   * Create a WAV audio file from a given Flipnote audio track\n   * @param flipnote\n   * @param trackId\n   */\n  static fromFlipnoteTrack(flipnote: Flipnote, trackId: FlipnoteAudioTrack) {\n    const sampleRate = flipnote.sampleRate;\n    const wav = new WavAudio(sampleRate, 1, 16);\n    const pcm = flipnote.getAudioTrackPcm(trackId, sampleRate);\n    wav.writeSamples(pcm);\n    return wav;\n  }\n\n  /**\n   * Add PCM audio frames to the WAV\n   * @param pcmData signed int16 PCM audio samples\n   */\n  public writeSamples(pcmData: Int16Array) {\n    let header = this.header;\n    // fill in filesize\n    header.seek(4);\n    header.writeUint32(header.byteLength + pcmData.byteLength);\n    // fill in data section length\n    header.seek(40);\n    header.writeUint32(pcmData.byteLength);\n    this.pcmData = pcmData;\n  }\n  \n  /**\n   * Returns the WAV audio data as an {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer | ArrayBuffer}\n   */\n  public getArrayBuffer() {\n    const headerBytes = this.header.bytes;\n    const pcmBytes = new Uint8Array(this.pcmData.buffer);\n    const resultBytes = new Uint8Array(this.header.byteLength + this.pcmData.byteLength);\n    resultBytes.set(headerBytes);\n    resultBytes.set(pcmBytes, headerBytes.byteLength);\n    return resultBytes.buffer;\n  }\n}","// Entrypoint for web and node\n\nexport {\n  Flipnote,\n  FlipnoteFormat,\n  FlipnoteVersion,\n  FlipnoteRegion,\n  FlipnoteMeta,\n  FlipnotePaletteColor,\n  FlipnotePaletteDefinition,\n  FlipnoteLayerVisibility,\n  FlipnoteAudioTrack,\n  FlipnoteAudioTrackInfo,\n  FlipnoteSoundEffectTrack,\n  FlipnoteSoundEffectFlags,\n  FlipnoteParserSettings,\n  KwzParserSettings,\n  PpmParserSettings,\n  KwzParser,\n  PpmParser\n} from './parsers';\n\nexport * as utils from './utils/fsid';\n\nexport {\n  parseSource\n} from './parseSource';\n\nexport {\n  Player,\n  PlayerEvent,\n} from './player';\n\nexport {\n  PlayerMixin\n} from './components/PlayerMixin';\n\nexport {\n  GifImage,\n  WavAudio,\n} from './encoders';\n\nexport {\n  CanvasInterface,\n  WebglCanvas,\n  Html5Canvas,\n  UniversalCanvas\n} from './renderers';\n\nexport {\n  WebAudioPlayer\n} from './webaudio';\n\n/** \n * flipnote.js library version (exported as `flipnote.version`). You can find the latest version on the project's [NPM](https://www.npmjs.com/package/flipnote.js) page.\n */\nexport const version = FLIPNOTEJS_VERSION; // replaced by @rollup/plugin-replace; see rollup.config.js\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector, cache) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        if (cache) {\n            const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n            descriptor.get = function () {\n                if (this[key] === undefined) {\n                    (this[key] =\n                        this.renderRoot.querySelector(selector));\n                }\n                return this[key];\n            };\n        }\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype;\nconst legacyMatches = ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(slotName = '', flatten = false, selector = '') {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const slotSelector = `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n                const slot = this.renderRoot.querySelector(slotSelector);\n                let nodes = slot && slot.assignedNodes({ flatten });\n                if (nodes && selector) {\n                    nodes = nodes.filter((node) => node.nodeType === Node.ELEMENT_NODE &&\n                        node.matches ?\n                        node.matches(selector) :\n                        legacyMatches.call(node, selector));\n                }\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets, unsafeCSS } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return unsafeCSS(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/// <reference types=\"resize-observer-browser\" /> \n\nimport { \n  LitElement,\n  html,\n  css,\n  query,\n  customElement,\n  PropertyValues,\n  property,\n  internalProperty,\n} from 'lit-element';\n\nimport { Player, PlayerEvent } from '../player';\nimport { PlayerMixin } from './PlayerMixin';\nimport { nextPaint } from '../utils';\n\nimport { SliderComponent } from './SliderComponent';\nimport { IconComponent } from './IconComponent';\n\n/**\n * @category Web Component\n * @internal\n */\n@customElement('flipnote-player')\nexport class PlayerComponent extends PlayerMixin(LitElement) {\n\n  static get styles() {\n    return css`\n\n      :host { \n        display: inline-block; \n      }\n\n      .Player {\n        display: inline-block;\n        position: relative;\n        font-family: var(--flipnote-player-font-family, sans-serif);\n        /* width: 100%; */\n        /* user-select: none; */\n      }\n\n      .CanvasArea {\n        position: relative;\n      }\n\n      .PlayerCanvas {\n        position: relative;\n        display: block;\n      }\n\n      .Overlay {\n        position: absolute;\n        top: 0;\n        left: 0;\n        background: #ebf0f3;\n        color: #4b4c53;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n\n      .Overlay--error {\n        background: #ff8b8b;\n        color: #ca2a32;\n      }\n\n      @keyframes spin {\n        from {\n          transform: rotateZ(0);\n        }\n        to {\n          transform: rotateZ(360deg);\n        }\n      }\n\n      .LoaderIcon {\n        animation: spin infinite 1.2s linear;\n      }\n\n      .Controls {\n        background: var(--flipnote-player-controls-background, none);\n      }\n\n      .MuteIcon {\n        width: 28px;\n        height: 28px;\n      }\n\n      .Controls__row,\n      .Controls__groupLeft,\n      .Controls__groupRight {\n        display: flex;\n        align-items: center;\n      }\n\n      .Controls__groupLeft {\n        margin-right: auto;\n      }\n\n      .Controls__groupRight {\n        margin-left: auto;\n      }\n\n      .Controls__playButton {\n        height: 32px;\n        width: 32px;\n        padding: 2px;\n      }\n\n      .MuteIcon {\n        width: 28px;\n        height: 28px;\n      }\n\n      .LoaderIcon {\n        width: 40px;\n        height: 40px;\n      }\n\n      .Controls.Controls--compact {\n        margin: 6px 0;\n      }\n\n      .Controls__frameCounter {\n        min-width: 90px;\n        font-variant-numeric: tabular-nums;\n      }\n\n      .Controls__progressBar {\n        flex: 1;\n      }\n\n      .Controls--compact .Controls__playButton {\n        margin-right: 8px;\n      }\n\n      .Controls--compact .Controls__progressBar {\n        flex: 1;\n      }\n\n      .Controls--default .Controls__playButton {\n        margin-right: 8px;\n      }\n\n      .Controls--default .Controls__volumeBar {\n        width: 70px;\n        margin-left: 8px;\n      }\n\n      .Button {\n        border: 0;\n        padding: 0;\n        outline: 0;\n        -webkit-appearance: none;\n        display: block;\n        font-family: inherit;\n        font-size: inherit;\n        text-align: center;\n        cursor: pointer;\n        background: var(--flipnote-player-button-background, #FFD3A6);\n        color: var(--flipnote-player-button-color, #F36A2D);\n        border-radius: 4px;\n      }\n\n      .Button flipnote-player-icon {\n        display: block;\n      }\n    `;\n  }\n\n  @property({ type: String })\n  public controls: string;\n\n  @property({ type: String })\n  get width() {\n    return this._width;\n  }\n\n  set width(value: number | string) {\n    const oldValue = this._width;\n    this._width = value;\n    // wrangle plain width value to CSS pixel units if possible\n    this._cssWidth = (!isNaN(+value)) ? `${value}px` : value;\n    // wait for the next browser paint (when the CSS value is applied) to handle updating the canvas\n    nextPaint(() => this.updateCanvasSize());\n    this.requestUpdate('width', oldValue);\n  }\n\n  @property({ type: String })\n  get src() {\n    return this._playerSrc;\n  }\n\n  set src(src: any) {\n    const oldValue = this._playerSrc;\n    if (this._isPlayerAvailable)\n      this.player.src = src;\n    this._playerSrc = src;\n    this.requestUpdate('src', oldValue);\n  }\n\n  @property({ type: Boolean })\n  get autoplay() {\n    return this.player.autoplay;\n  }\n\n  set autoplay(value: boolean) {\n    const oldValue = this.player.autoplay;\n    this.player.autoplay = value;\n    this.requestUpdate('autoplay', oldValue);\n  }\n\n  @internalProperty()\n  private _width: string | number = 'auto';\n\n  @internalProperty()\n  private _cssWidth: string | number = 'auto';\n\n  @internalProperty()\n  private _progress = 0;\n\n  @internalProperty()\n  private _counter = '';\n\n  @internalProperty()\n  private _isLoading = false;\n\n  @internalProperty()\n  private _isError = false;\n\n  @internalProperty()\n  private _isPlaying = false;\n\n  @internalProperty()\n  private _isMuted = false;\n\n  @internalProperty()\n  private _volumeLevel = 0;\n\n  @query('#canvasWrapper')\n  private playerCanvasWrapper: Element;\n\n  private _isPlayerAvailable = false;\n  private _playerSrc: any;\n  private _resizeObserver: ResizeObserver;\n  \n  constructor() {\n    super();\n    this._resizeObserver = new ResizeObserver(this.handleResize);\n  }\n\n  /** @internal */\n  render() {\n    return html`\n      <style>\n        :host {\n          width: ${ this._cssWidth }\n        }\n      </style>\n      <div class=\"Player\" @keydown=${ this.handleKeyInput }>\n        <div class=\"CanvasArea\" @click=${ this.handlePlayToggle }>\n          <div class=\"PlayerCanvas\" id=\"canvasWrapper\"></div>\n          ${ this._isLoading ?\n            html`<div class=\"Overlay\">\n              <flipnote-player-icon icon=\"loader\" class=\"LoaderIcon\"></flipnote-player-icon>\n            </div>` :\n            ''\n          }\n          ${ this._isError ?\n            html`<div class=\"Overlay Overlay--error\">\n              Error\n            </div>` :\n            ''\n          }\n        </div>\n        ${ this.renderControls() }\n      </div>\n    `;\n  }\n\n  /** @internal */\n  renderControls() {\n    if (this.controls === 'compact') {\n      return html`\n        <div class=\"Controls Controls--compact Controls__row\">\n          <button @click=${ this.handlePlayToggle } class=\"Button Controls__playButton\">\n            <flipnote-player-icon icon=${ this._isPlaying ? 'pause' : 'play' }></flipnote-player-icon>\n          </button>\n          <flipnote-player-slider \n            class=\"Controls__progressBar\"\n            value=${ this._progress }\n            @change=${ this.handleProgressSliderChange }\n            @inputstart=${ this.handleProgressSliderInputStart }\n            @inputend=${ this.handleProgressSliderInputEnd }\n          />\n          </flipnote-player-slider>\n        </div>\n      `;\n    }\n    else {\n      return html`\n        <div class=\"Controls Controls--default\">\n          <flipnote-player-slider \n            class=\"Controls__progressBar\"\n            value=${ this._progress }\n            @change=${ this.handleProgressSliderChange }\n            @inputstart=${ this.handleProgressSliderInputStart }\n            @inputend=${ this.handleProgressSliderInputEnd }\n          >\n          </flipnote-player-slider>\n          <div class=\"Controls__row\">\n            <div class=\"Controls__groupLeft\">\n              <button @click=${ this.handlePlayToggle } class=\"Button Controls__playButton\">\n                <flipnote-player-icon icon=${ this._isPlaying ? 'pause' : 'play' }></flipnote-player-icon>\n              </button>\n              <span class=\"Controls__frameCounter\">\n                ${ this._counter }\n              </span>\n            </div>\n            <div class=\"Controls__groupRight\">\n              <flipnote-player-icon \n                class=\"MuteIcon\"\n                @click=${ this.handleMuteToggle }\n                icon=${ this._isMuted ? 'volumeOff' : 'volumeOn' }\n              >\n              </flipnote-player-icon>\n              <flipnote-player-slider\n                class=\"Controls__volumeBar\"\n                value=${ this._volumeLevel }\n                @change=${ this.handleVolumeBarChange }\n              >\n              </flipnote-player-slider>\n            </div>\n          </div>\n        </div>\n      `;\n    }\n  }\n\n  /** @internal */\n  firstUpdated(changedProperties: PropertyValues) {\n    const player = new Player(this.playerCanvasWrapper, 256, 192);\n    this._resizeObserver.observe(this);\n    this.player = player;\n    player.on(PlayerEvent.LoadStart, () => {\n      this._isLoading = true;\n    });\n    player.on(PlayerEvent.Load, () => {\n      this.updateCanvasSize();\n    });\n    player.on(PlayerEvent.Error, () => {\n      this._isLoading = false;\n      this._isError = true;\n    });\n    player.on([PlayerEvent.Load, PlayerEvent.Close, PlayerEvent.Progress], () => {\n      this._isLoading = false;\n      this._isError = false;\n      this._progress = player.getProgress() / 100;\n      this._counter = player.getFrameCounter();\n    });\n    player.on(PlayerEvent.Play, () => {\n      this._isPlaying = true;\n    });\n    player.on(PlayerEvent.Pause, () => {\n      this._isPlaying = false;\n    });\n    player.on([PlayerEvent.Load, PlayerEvent.VolumeChange], () => {\n      this._volumeLevel = player.volume;\n      this._isMuted = player.muted;\n    });\n    // catch any player event and dispatch it as a DOM event\n    player.on(PlayerEvent.__Any, (eventName: string, args: any[]) => {\n      this.dispatchEvent(new Event(eventName));\n    });\n    if (this._playerSrc)\n      player.load(this._playerSrc);\n    this._isPlayerAvailable = true;\n  }\n\n  /** @internal */\n  disconnectedCallback() {\n    // disable resize observer\n    this._resizeObserver.disconnect();\n    // clean up webgl and buffer stuff if this element is removed from DOM\n    this.destroy();\n  }\n\n  private updateCanvasSize() {\n    const isPlayerAvailable = this._isPlayerAvailable;\n    // default width is DSi note size\n    let canvasWidth = 256;\n    // use the Flipnote's native width\n    if (this._width === 'auto' && isPlayerAvailable && this.player.isNoteLoaded) {\n      canvasWidth = this.player.note.imageWidth;\n    }\n    // expand to fill the full container width\n    else if (this._width !== 'auto') {\n      canvasWidth = this.getBoundingClientRect().width;\n    }\n    // TODO: initialise canvas right away then mount into DOM later?\n    // 4:3 aspect ratio is forced\n    if (isPlayerAvailable)\n      this.player.resize(canvasWidth, canvasWidth * .75);\n  }\n\n  private handleResize = (entries: ResizeObserverEntry[]) => {\n    this.updateCanvasSize();\n  }\n\n  private handleKeyInput = (e: KeyboardEvent) => {\n    e.preventDefault();\n    switch(e.key.toLowerCase()) {\n      case ' ':\n        this.togglePlay();\n        break;\n      case 'a':\n      case 'arrowleft':\n        if (e.shiftKey) \n          this.firstFrame();\n        else \n          this.prevFrame();\n        break;\n      case 'd':\n      case 'arrowright':\n        if (e.shiftKey)\n          this.lastFrame();\n        else\n          this.nextFrame();\n        break;\n    }\n  }\n\n  private handlePlayToggle = (e: InputEvent) => {\n    this.focus();\n    this.togglePlay();\n  }\n\n  private handleMuteToggle = (e: InputEvent) => {\n    this.focus();\n    this.toggleMuted();\n  }\n\n  private handleProgressSliderChange = (e: CustomEvent) => {\n    this.focus();\n    this.seek(e.detail.value);\n  }\n\n  private handleProgressSliderInputStart = () => {\n    this.focus();\n    this.startSeek();\n  }\n\n  private handleProgressSliderInputEnd = () => {\n    this.focus();\n    this.endSeek();\n  }\n\n  private handleVolumeBarChange = (e: CustomEvent) => {\n    this.focus();\n    this.setVolume(e.detail.value);\n  }\n\n}","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive, PropertyPart } from '../lit-html.js';\n// IE11 doesn't support classList on SVG elements, so we emulate it with a Set\nclass ClassList {\n    constructor(element) {\n        this.classes = new Set();\n        this.changed = false;\n        this.element = element;\n        const classList = (element.getAttribute('class') || '').split(/\\s+/);\n        for (const cls of classList) {\n            this.classes.add(cls);\n        }\n    }\n    add(cls) {\n        this.classes.add(cls);\n        this.changed = true;\n    }\n    remove(cls) {\n        this.classes.delete(cls);\n        this.changed = true;\n    }\n    commit() {\n        if (this.changed) {\n            let classString = '';\n            this.classes.forEach((cls) => classString += cls + ' ');\n            this.element.setAttribute('class', classString);\n        }\n    }\n}\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst previousClassesCache = new WeakMap();\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `class` if the property value is truthy; if the property value is\n * falsey, the property name is removed from the element's `class`. For example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nexport const classMap = directive((classInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'class' || part.committer.parts.length > 1) {\n        throw new Error('The `classMap` directive must be used in the `class` attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { element } = committer;\n    let previousClasses = previousClassesCache.get(part);\n    if (previousClasses === undefined) {\n        // Write static classes once\n        // Use setAttribute() because className isn't a string on SVG elements\n        element.setAttribute('class', committer.strings.join(' '));\n        previousClassesCache.set(part, previousClasses = new Set());\n    }\n    const classList = (element.classList || new ClassList(element));\n    // Remove old classes that no longer apply\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    previousClasses.forEach((name) => {\n        if (!(name in classInfo)) {\n            classList.remove(name);\n            previousClasses.delete(name);\n        }\n    });\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n        const value = classInfo[name];\n        if (value != previousClasses.has(name)) {\n            // We explicitly want a loose truthy check of `value` because it seems\n            // more convenient that '' and 0 are skipped.\n            if (value) {\n                classList.add(name);\n                previousClasses.add(name);\n            }\n            else {\n                classList.remove(name);\n                previousClasses.delete(name);\n            }\n        }\n    }\n    if (typeof classList.commit === 'function') {\n        classList.commit();\n    }\n});\n//# sourceMappingURL=class-map.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive, PropertyPart } from '../lit-html.js';\n/**\n * Stores the StyleInfo object applied to a given AttributePart.\n * Used to unset existing values when a new StyleInfo object is applied.\n */\nconst previousStylePropertyCache = new WeakMap();\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the `styleInfo`\n * object and adds the property values as CSS properties. Property names with\n * dashes (`-`) are assumed to be valid CSS property names and set on the\n * element's style object using `setProperty()`. Names without dashes are\n * assumed to be camelCased JavaScript property names and set on the element's\n * style object using property assignment, allowing the style object to\n * translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo {StyleInfo}\n */\nexport const styleMap = directive((styleInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'style' || part.committer.parts.length > 1) {\n        throw new Error('The `styleMap` directive must be used in the style attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { style } = committer.element;\n    let previousStyleProperties = previousStylePropertyCache.get(part);\n    if (previousStyleProperties === undefined) {\n        // Write static styles once\n        style.cssText = committer.strings.join(' ');\n        previousStylePropertyCache.set(part, previousStyleProperties = new Set());\n    }\n    // Remove old properties that no longer exist in styleInfo\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    previousStyleProperties.forEach((name) => {\n        if (!(name in styleInfo)) {\n            previousStyleProperties.delete(name);\n            if (name.indexOf('-') === -1) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                style[name] = null;\n            }\n            else {\n                style.removeProperty(name);\n            }\n        }\n    });\n    // Add or update properties\n    for (const name in styleInfo) {\n        previousStyleProperties.add(name);\n        if (name.indexOf('-') === -1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            style[name] = styleInfo[name];\n        }\n        else {\n            style.setProperty(name, styleInfo[name]);\n        }\n    }\n});\n//# sourceMappingURL=style-map.js.map","import { \n  LitElement,\n  html,\n  css,\n  query,\n  property,\n  internalProperty,\n  customElement,\n} from 'lit-element';\n\nimport { classMap } from 'lit-html/directives/class-map.js';\nimport { styleMap } from 'lit-html/directives/style-map.js';\n\n/** @internal */\ntype SliderOrientation = 'horizontal' | 'vertical';\n\n/**\n * @category Web Component\n * @internal\n */\n@customElement('flipnote-player-slider')\nexport class SliderComponent extends LitElement {\n\n  static get styles() {\n    return css`\n      .Slider {\n        padding: 4px 0;\n        cursor: pointer;\n      }\n\n      .Slider--vertical {\n        height: 100px;\n        width: 14px;\n      }\n\n      .Slider__track {\n        position: relative;\n        border-radius: 3px;\n        background: var(--flipnote-player-slider-track, #FFD3A6);\n      }\n\n      .Slider--horizontal .Slider__track {\n        height: 4px;\n        margin: 6px 0;\n      }\n\n      .Slider--vertical .Slider__track {\n        width: 4px;\n        height: 100%;\n        margin: 0 6px;\n      }\n\n      .Slider__level {\n        position: absolute;\n        width: 100%;\n        height: 6px;\n        margin: -1px;\n        border-radius: 8px;\n        background: var(--flipnote-player-slider-level, #F36A2D);\n      }\n\n      .Slider--horizontal .Slider__level {\n        width: 100%;\n        height: 6px;\n      }\n\n      .Slider--vertical .Slider__level {\n        width: 6px;\n        height: 100%;\n        bottom: 0;\n      }\n\n      .Slider__handle {\n        display: none;\n        position: absolute;\n        height: 10px;\n        width: 10px;\n        border-radius: 5px;\n        box-sizing: border-box;\n        border: 3px solid var(--flipnote-player-slider-handle, #F36A2D);\n        background: var(--flipnote-player-slider-handle-fill, white);\n      }\n\n      .Slider:hover .Slider__handle,\n      .Slider--isActive .Slider__handle {\n        display: block;\n      }\n\n      .Slider--horizontal .Slider__handle { \n        top: 0;\n        margin-top: -3px;\n        margin-left: -6px;\n      }\n\n      .Slider--vertical .Slider__handle { \n        left: 0;\n        margin-bottom: -6px;\n        margin-left: -3px;\n      }\n    `;\n  }\n\n  @property({ type: Number })\n  value: number = 0;\n\n  @property({ type: String })\n  orientation: SliderOrientation = 'horizontal'; // switch to horizontal\n\n  @internalProperty()\n  private isActive: boolean = false;\n\n  @query('.Slider__track')\n  private sliderElement: Element;\n\n  render() {\n    const percent = `${ this.value * 100 }%`;\n    const mainAxis = this.orientation === 'horizontal' ? 'width' : 'height';\n    const side = this.orientation === 'horizontal' ? 'left' : 'bottom';\n    const rootClasses = {\n      'Slider': true,\n      'Slider--horizontal': this.orientation === 'horizontal',\n      'Slider--vertical': this.orientation === 'vertical',\n      'Slider--isActive': this.isActive,\n    };\n    return html`\n      <div class=${ classMap(rootClasses) } @mousedown=${ this.onSliderInputStart }>\n        <div class=\"Slider__track\">\n          <div class=\"Slider__level\" style=${ styleMap({ [mainAxis]: percent }) }></div>\n          <div class=\"Slider__handle\" style=${ styleMap({ [side]: percent }) }></div>\n        </div>\n      </div>\n    `;\n  }\n\n  onSliderInputStart = (event: MouseEvent) => {\n    event.preventDefault();\n    this.isActive = true;\n    document.addEventListener('mousemove', this.onSliderInput);\n    document.addEventListener('mouseup', this.onSliderInputEnd);\n    this.dispatch('inputstart');\n    this.onSliderInput(event);\n  }\n\n  onSliderInputEnd = (event: MouseEvent) => {\n    event.preventDefault();\n    document.removeEventListener('mousemove', this.onSliderInput);\n    document.removeEventListener('mouseup', this.onSliderInputEnd);\n    this.dispatch('inputend');\n    this.onSliderInput(event);\n    this.isActive = false;\n  }\n\n  onSliderInput = (event: MouseEvent) => {\n    event.preventDefault();\n    const rect = this.sliderElement.getBoundingClientRect();\n    let value;\n    if (this.orientation === 'horizontal') {\n      const railCap = rect.height / 2;\n      const railLength = rect.width - railCap * 2;\n      const inputPosition = event.clientX - rect.left - railCap;\n      const v = inputPosition / railLength;\n      value = Math.max(0, Math.min(v, 1));\n    }\n    else if (this.orientation === 'vertical') {\n      const railCap = rect.width / 2;\n      const railLength = rect.height - railCap * 2;\n      const inputPosition = event.clientY - rect.top - railCap;\n      const v = 1 - inputPosition / railLength; // y is inverted; top is the max point\n      value = Math.max(0, Math.min(v, 1));\n    }\n    if (this.value !== value)\n      this.dispatch('change', { value });\n  }\n\n  private dispatch(eventName: string, detail?: any) {\n    const event = new CustomEvent(eventName, { detail });\n    this.dispatchEvent(event);\n  }\n\n}","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { reparentNodes } from '../lib/dom.js';\nimport { isPrimitive } from '../lib/parts.js';\nimport { directive, NodePart } from '../lit-html.js';\n// For each part, remember the value that was last rendered to the part by the\n// unsafeSVG directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeSVG. If not, we'll always re-render the\n// value passed to unsafeSVG.\nconst previousValues = new WeakMap();\nconst isIe = window.navigator.userAgent.indexOf('Trident/') > 0;\n/**\n * Renders the result as SVG, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeSVG = directive((value) => (part) => {\n    if (!(part instanceof NodePart)) {\n        throw new Error('unsafeSVG can only be used in text bindings');\n    }\n    const previousValue = previousValues.get(part);\n    if (previousValue !== undefined && isPrimitive(value) &&\n        value === previousValue.value && part.value === previousValue.fragment) {\n        return;\n    }\n    const template = document.createElement('template');\n    const content = template.content;\n    let svgElement;\n    if (isIe) {\n        // IE can't set innerHTML of an svg element. However, it also doesn't\n        // support Trusted Types, so it's ok for us to use a string when setting\n        // innerHTML.\n        template.innerHTML = `<svg>${value}</svg>`;\n        svgElement = content.firstChild;\n    }\n    else {\n        svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        content.appendChild(svgElement);\n        svgElement.innerHTML = value;\n    }\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    const fragment = document.importNode(content, true);\n    part.setValue(fragment);\n    previousValues.set(part, { value, fragment });\n});\n//# sourceMappingURL=unsafe-svg.js.map","import { LitElement, html, css, customElement, property } from 'lit-element';\nimport { unsafeSVG } from 'lit-html/directives/unsafe-svg.js';\n\nimport IconPlay from './icons/play.svg';\nimport IconPause from './icons/pause.svg';\nimport IconLoader from './icons/loader.svg';\nimport IconVolumeOn from './icons/volumeOn.svg';\nimport IconVolumeOff from './icons/volumeOff.svg';\n\n/** @internal */\nfunction patchSvg(svgString: string) {\n  return svgString.replace(/<svg ([^>]*)>/, (match, svgAttrs) => `<svg ${ svgAttrs } class=\"Icon\" style=\"fill:currentColor\">`);\n}\n\n/** @internal */\nconst iconMap: Record<string, string> = {\n  play: patchSvg(IconPlay),\n  pause: patchSvg(IconPause),\n  loader: patchSvg(IconLoader),\n  volumeOn: patchSvg(IconVolumeOn),\n  volumeOff: patchSvg(IconVolumeOff),\n}\n\n/** \n * Flipnote player icon component\n * \n * @category Web Component\n * @internal\n */\n@customElement('flipnote-player-icon')\nexport class IconComponent extends LitElement {\n\n  static get styles() {\n    return css`\n      .Icon {\n        width: 100%;\n        height: 100%;\n        color: var(--flipnote-player-icon-color, #F36A2D);\n      }\n    `;\n  }\n\n  /**\n   * Available icons:\n   * - `play`\n   * - `pause`\n   * - `loader`\n   * - `volumeOn`\n   * - `volumeOff`\n   */\n  @property({ type: String })\n  icon: string = 'loader';\n\n  /** @internal */\n  public render() {\n    return html`${ unsafeSVG(iconMap[this.icon]) }`;\n  }\n}","import { LitElement, html, css, customElement, property, internalProperty } from 'lit-element';\nimport { Flipnote, FlipnoteFormat } from '../Flipnote';\nimport { parseSource } from '../parseSource';\nimport { GifImage } from '../encoders';\n\n/** \n * Flipnote player icon component\n * \n * @category Web Component\n * @internal\n */\n@customElement('flipnote-image')\nexport class ImageComponent extends LitElement {\n\n  static get styles() {\n    return css`\n      .Image {\n        width: inherit;\n        height: inherit;\n        image-rendering: -moz-crisp-edges;\n        image-rendering: -webkit-crisp-edges;\n        image-rendering: pixelated;\n        image-rendering: crisp-edges;\n        -ms-interpolation-mode: nearest-neighbor;\n      }\n    `;\n  }\n\n  public gif: GifImage;\n  public note: Flipnote;\n  private _src: string = '';\n  private _frame: string = '0';\n\n  @property()\n  public set src(src: any) {\n    this.load(src);\n  }\n\n  public get src() {\n    return this._src;\n  }\n\n  @property()\n  public set frame(frame: string) {\n    this._frame = frame;\n    if (this.note)\n      this.loadNote(this.note);\n  }\n\n  public get frame() {\n    return this._frame;\n  }\n\n  @property({ type: Boolean })\n  public cropped: boolean = false;\n\n  @internalProperty()\n  private gifUrl: string = '';\n\n  @internalProperty()\n  private imgTitle: string = '';\n\n  /** @internal */\n  public render() {\n    return html`<img class=\"Image\" src=${ this.gifUrl } alt=${ this.imgTitle } title=${ this.imgTitle } />`;\n  }\n\n  private revokeUrl() {\n    // if there was already an image, clean up its data URL\n    if (this.gif && this.gif.dataUrl) {\n      this.gif.revokeUrl();\n      this.gifUrl = '';\n    }\n  }\n\n  public loadNote(note: Flipnote) {\n    this.note = note;\n    this.revokeUrl();\n    const frame = this._frame;\n    // full animated gif\n    if (frame === 'all') {\n      this.gif = GifImage.fromFlipnote(note);\n      this.gifUrl = this.gif.getUrl();\n    }\n    // thumbnail frame\n    else if (frame === 'thumb') {\n      this.gif = GifImage.fromFlipnoteFrame(note, note.thumbFrameIndex);\n      this.gifUrl = this.gif.getUrl();\n    }\n    // if frame is numeric string\n    else if (!isNaN(+frame)) {\n      const frameIndex = parseInt(frame);\n      this.gif = GifImage.fromFlipnoteFrame(note, frameIndex);\n      this.gifUrl = this.gif.getUrl();\n    }\n    if (this.gifUrl) {\n      this.dispatchLoad();\n      this.imgTitle = note.getTitle();\n    }\n    else {\n      this.dispatchError('Invalid frame attribute');\n    }\n  }\n\n  public load(src: any) {\n    this._src = src;\n    this.note = undefined;\n    const borderCrop = this.getAttribute('cropped') === 'true';\n    parseSource(src, { borderCrop })\n      .then(note => this.loadNote(note))\n      .catch(err => this.dispatchError(err));\n  }\n\n  disconnectedCallback() {\n    this.revokeUrl();\n  }\n\n  private dispatchLoad() {\n    this.dispatchEvent(new Event('load'));\n  }\n\n  private dispatchError(err?: string) {\n    this.dispatchEvent(new ErrorEvent('error', { error: err }));\n    throw new Error(err);\n  }\n}","// Entrypoint for webcomponent build\n\nexport * from './flipnote'; // make sure regular flipnote.js api is available on window.flipnote\n\nimport { PlayerComponent as _PlayerComponent } from './components';\nimport { ImageComponent as _ImageComponent } from './components';\n/** @internal */\nexport const PlayerComponent = _PlayerComponent;\n/** @internal */\nexport const ImageComponent = _ImageComponent;\n\n"],"names":["FlipnoteRegion","FlipnoteFormat","FlipnoteAudioTrack","FlipnoteSoundEffectTrack","PlayerEvent","render","litRender","PlayerComponent","_PlayerComponent","ImageComponent","_ImageComponent"],"mappings":"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C,KAAK,CAAC,EAAE;EAC5B,IAAI,OAAO,KAAK,CAAC;EACjB,GAAG;AACH;EACA,EAAE,IAAI,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;EACjC,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC;EACtB,GAAG;AACH;EACA,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;EAC5B,IAAI,KAAK,GAAG;EACZ,MAAM,IAAI,EAAE,KAAK;EACjB,KAAK,CAAC;EACN,GAAG;AACH;EACA,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;EACxB,EAAE,IAAI,CAAC,IAAI,EAAE;EACb,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE;EACzB,MAAM,IAAI,GAAG,WAAW,CAAC;EACzB,KAAK,MAAM;EACX,MAAM,IAAI,GAAG,YAAY,CAAC;EAC1B,KAAK;EACL,GAAG;EACH,EAAE,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;EAC9B,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EA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"}