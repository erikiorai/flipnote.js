{"version":3,"file":"flipnote.es.map","sources":["../src/utils/ByteArray.ts","../src/utils/DataStream.ts","../src/utils/audio.ts","../src/utils/assert.ts","../src/utils/env.ts","../src/utils/rsa.ts","../src/utils/promises.ts","../src/utils/datetime.ts","../src/utils/fsid.ts","../src/utils/saveData.ts","../src/parsers/FlipnoteParserBase.ts","../src/parsers/PpmParser.ts","../src/parsers/KwzParser.ts","../src/loaders/webUrlLoader.ts","../src/loaders/nodeUrlLoader.ts","../src/loaders/fileLoader.ts","../src/loaders/blobLoader.ts","../src/loaders/nodeBufferLoader.ts","../src/loaders/arrayBufferLoader.ts","../src/loaders/index.ts","../src/parseSource.ts","../src/player/PlayerEvent.ts","../src/player/playerUtils.ts","../src/renderers/CanvasInterface.ts","../node_modules/twgl.js/dist/4.x/twgl-full.module.js","../src/renderers/WebGlCanvas.ts","../src/renderers/Html5Canvas.ts","../src/renderers/UniversalCanvas.ts","../src/webaudio/WebAudioPlayer.ts","../src/player/Player.ts","../src/components/PlayerMixin.ts","../src/encoders/EncoderBase.ts","../src/encoders/LwzCompressor.ts","../src/encoders/GifImage.ts","../src/encoders/WavAudio.ts","../src/flipnote.ts"],"sourcesContent":["/** @internal */\nexport class ByteArray {\n  // sizes\n  pageSize = 2048 * 2;\n  allocSize = 0; // allocated size counting all pages\n  realSize = 0; // number of bytes actually used\n  // pages\n  pages: Uint8Array[] = [];\n  numPages = 0;\n  // pointers\n  pageIdx = 0; // page to write to\n  pagePtr = 0; // position in page to write to\n  realPtr = 0; // position in file\n\n  constructor() {\n    this.newPage();\n  }\n\n  set pointer(ptr: number) {\n    this.setPointer(ptr);\n  }\n\n  get pointer() {\n    return this.realPtr;\n  }\n\n  newPage() {\n    this.pages[this.numPages] = new Uint8Array(this.pageSize);\n    this.numPages = this.pages.length;\n    this.allocSize = this.numPages * this.pageSize;\n  }\n\n  setPointer(ptr: number) {\n    // allocate enough pages to include pointer\n    while (ptr >= this.allocSize) {\n      this.newPage();\n    }\n    // increase real file size if the end is reached\n    if (ptr > this.realSize)\n      this.realSize = ptr;\n    // update ptrs\n    this.pageIdx = Math.floor(ptr / this.pageSize);\n    this.pagePtr = ptr % this.pageSize;\n    this.realPtr = ptr;\n  }\n\n  writeByte(value: number) {\n    this.pages[this.pageIdx][this.pagePtr] = value;\n    this.setPointer(this.realPtr + 1);\n  }\n\n  writeBytes(bytes: Uint8Array | number[], srcPtr?: number, length?: number) {\n    for (let l = length || bytes.length, i = srcPtr || 0; i < l; i++)\n      this.writeByte(bytes[i]);\n  }\n\n  writeChars(str: string) {\n    for (let i = 0; i < str.length; i++) {\n      this.writeByte(str.charCodeAt(i));\n    }\n  }\n\n  writeU8(value: number) {\n    this.writeByte(value & 0xFF);\n  }\n\n  writeU16(value: number) {\n    this.writeByte((value >>> 0) & 0xFF);\n    this.writeByte((value >>> 8) & 0xFF);\n  }\n\n  writeU32(value: number) {\n    this.writeByte((value >>> 0) & 0xFF);\n    this.writeByte((value >>> 8) & 0xFF);\n    this.writeByte((value >>> 16) & 0xFF);\n    this.writeByte((value >>> 24) & 0xFF);\n  }\n\n  getBytes() {\n    const bytes = new Uint8Array(this.realSize);\n    const numPages = this.numPages;\n    for (let i = 0; i < numPages; i++) {\n      const page = this.pages[i];\n      if (i === numPages - 1) // last page\n        bytes.set(page.slice(0, this.realSize % this.pageSize), i * this.pageSize);\n      else\n        bytes.set(page, i * this.pageSize);\n    }\n    return bytes;\n  }\n\n  getBuffer() {\n    const bytes = this.getBytes();\n    return bytes.buffer;\n  }\n}","/** @internal */\nexport const enum SeekOrigin {\n  Begin,\n  Current,\n  End\n};\n\n/** \n * Wrapper around the DataView API to keep track of the offset into the data\n * also provides some utils for reading ascii strings etc\n * @internal\n */\nexport class DataStream {\n\n  buffer: ArrayBuffer;\n  pointer: number;\n  data: DataView;\n\n  constructor(arrayBuffer: ArrayBuffer) {\n    this.buffer = arrayBuffer;\n    this.data = new DataView(arrayBuffer);\n    this.pointer = 0;\n  }\n\n  get bytes() {\n    return new Uint8Array(this.buffer);\n  }\n\n  get byteLength() {\n    return this.data.byteLength;\n  }\n\n  seek(offset: number, whence?: SeekOrigin) {\n    switch (whence) {\n      case SeekOrigin.End:\n        this.pointer = this.data.byteLength + offset;\n        break;\n      case SeekOrigin.Current:\n        this.pointer += offset;\n        break;\n      case SeekOrigin.Begin:\n      default:\n        this.pointer = offset;\n        break;\n    }\n  }\n\n  readUint8() {\n    const val = this.data.getUint8(this.pointer);\n    this.pointer += 1;\n    return val;\n  }\n\n  writeUint8(value: number) {\n    this.data.setUint8(this.pointer, value);\n    this.pointer += 1;\n  }\n\n  readInt8() {\n    const val = this.data.getInt8(this.pointer);\n    this.pointer += 1;\n    return val;\n  }\n\n  writeInt8(value: number) {\n    this.data.setInt8(this.pointer, value);\n    this.pointer += 1;\n  }\n\n  readUint16(littleEndian=true) {\n    const val = this.data.getUint16(this.pointer, littleEndian);\n    this.pointer += 2;\n    return val;\n  }\n\n  writeUint16(value: number, littleEndian=true) {\n    this.data.setUint16(this.pointer, value, littleEndian);\n    this.pointer += 2;\n  }\n\n  readInt16(littleEndian=true) {\n    const val = this.data.getInt16(this.pointer, littleEndian);\n    this.pointer += 2;\n    return val;\n  }\n\n  writeInt16(value: number, littleEndian=true) {\n    this.data.setInt16(this.pointer, value, littleEndian);\n    this.pointer += 2;\n  }\n\n  readUint32(littleEndian=true) {\n    const val = this.data.getUint32(this.pointer, littleEndian);\n    this.pointer += 4;\n    return val;\n  }\n  \n  writeUint32(value: number, littleEndian=true) {\n    this.data.setUint32(this.pointer, value, littleEndian);\n    this.pointer += 4;\n  }\n\n  readInt32(littleEndian=true) {\n    const val = this.data.getInt32(this.pointer, littleEndian);\n    this.pointer += 4;\n    return val;\n  }\n\n  writeInt32(value: number, littleEndian=true) {\n    this.data.setInt32(this.pointer, value, littleEndian);\n    this.pointer += 4;\n  }\n\n  readBytes(count: number) {\n    const bytes = new Uint8Array(this.data.buffer, this.pointer, count);\n    this.pointer += bytes.byteLength;\n    return bytes;\n  }\n\n  writeBytes(bytes: number[] | Uint8Array) {\n    bytes.forEach((byte: number) => this.writeUint8(byte));\n  }\n\n  readHex(count: number, reverse=false) {\n    const bytes = this.readBytes(count);\n    let hex = [];\n    for (let i = 0; i < bytes.length; i++) {\n      hex.push(bytes[i].toString(16).padStart(2, '0'));\n    }\n    if (reverse) hex.reverse();\n    return hex.join('').toUpperCase();\n  }\n\n  readChars(count: number) {\n    const chars = this.readBytes(count);\n    let str = '';\n    for (let i = 0; i < chars.length; i++) {\n      const char = chars[i];\n      if (char === 0)\n        break;\n      str += String.fromCharCode(char);\n    }\n    return str;\n  }\n\n  writeChars(string: string) {\n    for (let i = 0; i < string.length; i++) {\n      const char = string.charCodeAt(i);\n      this.writeUint8(char);\n    }\n  }\n\n  readWideChars(count: number) {\n    const chars = new Uint16Array(this.data.buffer, this.pointer, count);\n    let str = '';\n    for (let i = 0; i < chars.length; i++) {\n      const char = chars[i];\n      if (char == 0)\n        break;\n      str += String.fromCharCode(char);\n    }\n    this.pointer += chars.byteLength;\n    return str;\n  }\n}","/** @internal */\nexport const ADPCM_INDEX_TABLE_2BIT = new Int8Array([\n  -1, 2, -1, 2\n]);\n\n/** @internal */\nexport const ADPCM_INDEX_TABLE_4BIT = new Int8Array([\n  -1, -1, -1, -1, 2, 4, 6, 8,\n  -1, -1, -1, -1, 2, 4, 6, 8\n]);\n\n/** @internal */\nexport const ADPCM_STEP_TABLE = new Int16Array([\n  7, 8, 9, 10, 11, 12, 13, 14, 16, 17,\n  19, 21, 23, 25, 28, 31, 34, 37, 41, 45,\n  50, 55, 60, 66, 73, 80, 88, 97, 107, 118,\n  130, 143, 157, 173, 190, 209, 230, 253, 279, 307,\n  337, 371, 408, 449, 494, 544, 598, 658, 724, 796,\n  876, 963, 1060, 1166, 1282, 1411, 1552, 1707, 1878, 2066,\n  2272, 2499, 2749, 3024, 3327, 3660, 4026, 4428, 4871, 5358,\n  5894, 6484, 7132, 7845, 8630, 9493, 10442, 11487, 12635, 13899,\n  15289, 16818, 18500, 20350, 22385, 24623, 27086, 29794, 32767, 0\n]);\n\n/** \n * Clamp a number n between l and h\n * @internal \n */\nexport function clamp(n: number, l: number, h: number) {\n  if (n < l)\n    return l;\n  if (n > h)\n    return h;\n  return n;\n}\n\n/** \n * Interpolate between a and b - returns a if fac = 0, b if fac = 1, and somewhere between if 0 < fac < 1\n * @internal\n */\nexport const lerp = (a: number, b: number, fac: number) => a + fac * (b - a);\n\n/** @internal */\nexport function pcmGetSample(src: Int16Array, srcSize: number, srcPtr: number) {\n  if (srcPtr < 0 || srcPtr >= srcSize)\n    return 0;\n  return src[srcPtr];\n}\n\n/** \n * Zero-order hold (nearest neighbour) audio interpolation\n * Credit to SimonTime for the original C version\n * @internal\n */\nexport function pcmResampleNearestNeighbour(src: Int16Array, srcFreq: number, dstFreq: number) {\n  const srcLength = src.length;\n  const srcDuration = srcLength / srcFreq;\n  const dstLength = srcDuration * dstFreq;\n  const dst = new Int16Array(dstLength);\n  const adjFreq = srcFreq / dstFreq;\n  for (let dstPtr = 0; dstPtr < dstLength; dstPtr++) {\n    dst[dstPtr] = pcmGetSample(src, srcLength, Math.floor(dstPtr * adjFreq));\n  }\n  return dst;\n}\n\n/** \n * Simple linear audio interpolation\n * @internal\n */\nexport function pcmResampleLinear(src: Int16Array, srcFreq: number, dstFreq: number) {\n  const srcLength = src.length;\n  const srcDuration = srcLength / srcFreq;\n  const dstLength = srcDuration * dstFreq;\n  const dst = new Int16Array(dstLength);\n  const adjFreq = srcFreq / dstFreq;\n  for (let dstPtr = 0, adj = 0, srcPtr = 0, weight = 0; dstPtr < dstLength; dstPtr++) {\n    adj = dstPtr * adjFreq;\n    srcPtr = Math.floor(adj);\n    weight = adj % 1;\n    dst[dstPtr] = lerp(\n      pcmGetSample(src, srcLength, srcPtr), \n      pcmGetSample(src, srcLength, srcPtr + 1), \n      weight  \n    );\n  }\n  return dst;\n}\n\n/** \n * Get a ratio of how many audio samples hit the pcm_s16_le clipping bounds\n * This can be used to detect corrupted audio\n * @internal\n */\nexport function pcmGetClippingRatio(src: Int16Array) {\n  const numSamples = src.length;\n  let numClippedSamples = 0;\n  for (let i = 0; i < numSamples; i++) {\n    const sample = src[i];\n    if (sample <= -32768 || sample >= 32767)\n      numClippedSamples += 1;\n  }\n  return numClippedSamples / numSamples;\n}\n\n/**\n * Get the root mean square of a PCM track\n * @internal\n */\nexport function pcmGetRms(src: Int16Array) {\n  const numSamples = src.length;\n  let rms = 0;\n  for (let i = 0; i < numSamples; i++) {\n    rms += Math.pow(src[i], 2);\n  }\n  return Math.sqrt(rms / numSamples);\n}","/**\n * Assert condition is true\n * @internal\n */\nexport function assert(condition: boolean, errMsg: string = 'Assert failed'): asserts condition {\n  if (!condition) {\n    console.trace(errMsg);\n    throw new Error(errMsg);\n  }\n}\n\n/**\n * Assert that a value exists\n * @internal\n */\nexport function assertExists<T>(value: T | null | undefined, name=''): T {\n  if (value === undefined || value === null)\n    throw new Error(`Missing object ${ name }`);\n  return value;\n}\n\n/**\n * Assert that a numberical value is between upper and lower bounds\n * @internal\n */\nexport function assertRange(value: number, min: number, max: number, name=''): asserts value {\n  assert(value >= min && value <= max, `${ name || 'value'} ${ value } should be between ${ min } and ${ max }`);\n}","import { assert } from './assert';\n\n/**\n * Webpack tries to replace inline calles to require() with polyfills, \n * but we don't want that, since we only use require to add extra features in NodeJs environments\n * \n * Modified from:\n * https://github.com/getsentry/sentry-javascript/blob/bd35d7364191ebed994fb132ff31031117c1823f/packages/utils/src/misc.ts#L9-L11\n * https://github.com/getsentry/sentry-javascript/blob/89bca28994a0eaab9bc784841872b12a1f4a875c/packages/hub/src/hub.ts#L340\n * @internal\n */\nexport function dynamicRequire(nodeModule: NodeModule, p: string) {\n  try {\n    return nodeModule.require(p);\n  }\n  catch {\n    throw new Error(`Could not require(${p})`);\n  }\n}\n\n/**\n * Safely get global scope object\n * @internal\n */\nexport function getGlobalObject(): Window | typeof globalThis | {} {\n  return isNode\n    ? global\n    : typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n    ? self\n    : {};\n}\n\n/**\n * Utils to find out information about the current code execution environment\n */\n\n/**\n * Is the code running in a browser environment?\n * @internal\n */\nexport const isBrowser = typeof window !== 'undefined' \n  && typeof window.document !== 'undefined';\n\n/**\n * Assert that the current environment should support browser APIs\n * @internal\n */\nexport function assertBrowserEnv() {\n  return assert(isBrowser, 'This feature is only available in browser environments');\n}\n\n/**\n * Is the code running in a Node environment?\n * @internal\n */\nexport const isNode = typeof process !== 'undefined'\n  && process.versions != null\n  && process.versions.node != null;\n\n/**\n * Assert that the current environment should support NodeJS APIs\n * @internal\n */\nexport function assertNodeEnv() {\n  return assert(isNode, 'This feature is only available in NodeJS environments');\n}\n\n// TODO: Deno support?\n\n/**\n * Is the code running in a Web Worker enviornment?\n * @internal\n */\nexport const isWebWorker = typeof self === 'object'\n  && self.constructor\n  && self.constructor.name === 'DedicatedWorkerGlobalScope';\n\n/**\n * Assert that the current environment should support NodeJS APIs\n * @internal\n */\nexport function assertWebWorkerEnv() {\n  return assert(isWebWorker, 'This feature is only available in WebWorker environments');\n}","import { isBrowser, isWebWorker, isNode, dynamicRequire, getGlobalObject } from './env';\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n * @internal\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n};\n\n/**\n * same SubtleCrypto API is available in browser and node, but in node it isn't global\n * @internal\n */\nconst SUBTLE_CRYPTO = ((): SubtleCrypto => {\n  if (isBrowser || isWebWorker) {\n    const global = getGlobalObject() as MsCryptoWindow;\n    return (global.crypto || global.msCrypto).subtle;\n  }\n  else if (isNode)\n    return dynamicRequire(module, 'crypto').webcrypto.subtle;\n})();\n\n/**\n * crypto algo used\n * @internal\n */\nconst ALGORITHM = 'RSASSA-PKCS1-v1_5';\n\n/**\n * @internal\n */\ntype HashType = 'SHA-1' | 'SHA-256'; // also available are 'SHA-384' and 'SHA-512', but flipnote doesnt use them...\n\n/**\n * @internal\n */\nexport async function rsaLoadPublicKey(pemKey: string, hashType: HashType) {\n  // remove PEM header and footer\n  const lines = pemKey\n    .split('\\n')\n    .filter(line => !line.startsWith('-----') && !line.endsWith('-----'))\n    .join('');\n  // base64 decode\n  const keyPlaintext = atob(lines);\n  // convert to byte array\n  const keyBytes = new Uint8Array(keyPlaintext.length)\n    .map((_, i) => keyPlaintext.charCodeAt(i));\n  // create crypto api key\n  return await SUBTLE_CRYPTO.importKey('spki', keyBytes.buffer, {\n    name: ALGORITHM,\n    hash: hashType,\n  }, false, ['verify']);\n}\n \n/**\n * @internal\n */\nexport async function rsaVerify(key: CryptoKey, signature: Uint8Array, data: Uint8Array) {\n  return await SUBTLE_CRYPTO.verify(ALGORITHM, key, signature, data);\n}","/**\n * @internal\n */\nexport type AsyncTuple<ErrorType extends any = Error, DataType extends any = unknown> =\n  | [ ErrorType, null ]\n  | [ null, DataType ];\n\n/**\n * Gracefully handles a given Promise factory.\n * @internal\n * @example\n * const [ error, data ] = await until(() => asyncAction())\n */\nexport const until = async <ErrorType extends any = Error, DataType extends any = unknown>(promise: () => Promise<DataType>): Promise<AsyncTuple<ErrorType, DataType>> => {\n  try {\n    const data = await promise().catch((error) => {\n      throw error;\n    });\n    return [ null, data ];\n  } \n  catch (error) {\n    return [ error, null ];\n  }\n}","/**\n * Number of seconds between the UNIX timestamp epoch (jan 1 1970) and the Nintendo timestamp epoch (jan 1 2000)\n * @internal\n */\nconst UNIX_EPOCH_2000 = 946684800;\n\n/**\n * Convert a Nintendo DS or 3DS timestamp int to a JS Date object\n * @internal\n */\nexport function dateFromNintendoTimestamp(timestamp: number) {\n  return new Date((timestamp + UNIX_EPOCH_2000) * 1000);\n}\n\n/**\n * Get the duration (in seconds) of a number of framres running at a specified framerate\n * @internal\n */\nexport function timeGetNoteDuration(frameCount: number, framerate: number) {\n  // multiply and divide by 100 to get around floating precision issues\n  return ((frameCount * 100) * (1 / framerate)) / 100;\n}","/**\n * Flipnote region\n */\nexport enum FlipnoteRegion {\n  /** Europe and Oceania */\n  EUR = 'EUR',\n  /** Americas */\n  USA = 'USA',\n  /** Japan */\n  JPN = 'JPN',\n  /** Unidentified (possibly never used) */\n  UNKNOWN = 'UNKNOWN'\n};\n\n/**\n * Match an FSID from Flipnote Studio\n * e.g. 1440D700CEF78DA8\n * @internal\n */\nconst REGEX_PPM_FSID = /^[0159]{1}[0-9A-F]{6}0[0-9A-F]{8}$/;\n\n/**\n * Match an FSID from Flipnote Studio 3D\n * e.g. 003f-0b7e-82a6-fe0bda\n * @internal\n */\nconst REGEX_KWZ_FSID = /^[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{6}$/; \n\n/**\n * Match an FSID from a DSi Library note (PPM to KWZ conversion)\n * e.g. 10b8-b909-5180-9b2013\n * @internal\n */\nconst REGEX_KWZ_DSI_LIBRARY_FSID = /^(00|10|12|14)[0-9a-f]{2}-[0-9a-f]{4}-[0-9a-f]{3}0-[0-9a-f]{4}[0159]{1}[0-9a-f]{1}$/; \n\n/**\n * @internal\n * There are several known exceptions to the FSID format, all from Nintendo or Hatena developer and event accounts (mario, zelda 25th, etc).\n * This list was compiled from data provided by the Flipnote Archive, so it can be considered comprehensive enough to match any Flipnote you may encounter.\n */\nconst PPM_FSID_SPECIAL_CASE = [\n  '01FACA7A4367FC5F', '03D6E959E2F9A42D', \n  '03F80445160587FA', '04068426E1008915',\n  '092A3EC8199FD5D5', '0B8D56BA1BD441B8',\n  '0E61C75C9B5AD90B', '14E494E35A443235'\n];\n\n/**\n * @internal\n */\nconst KWZ_DSI_LIBRARY_FSID_SPECIAL_CASE_SUFFIX = PPM_FSID_SPECIAL_CASE.map(id => convertPpmFsidToKwzFsidSuffix(id));\n\n/**\n * Indicates whether the input is a valid Flipnote Studio user ID\n */\nexport function isPpmFsid(fsid: string) {\n  return REGEX_PPM_FSID.test(fsid) || PPM_FSID_SPECIAL_CASE.includes(fsid);\n}\n\n/**\n * Indicates whether the input is a valid Flipnote Studio 3D user ID\n */\nexport function isKwzFsid(fsid: string) {\n  return REGEX_KWZ_FSID.test(fsid);\n}\n\n/**\n * Indicates whether the input is a valid DSi Library user ID\n */\nexport function isKwzDsiLibraryFsid(fsid: string) {\n  if (REGEX_KWZ_DSI_LIBRARY_FSID.test(fsid))\n    return true;\n  for (let suffix of KWZ_DSI_LIBRARY_FSID_SPECIAL_CASE_SUFFIX) {\n    if (fsid.endsWith(suffix))\n      return true;\n  }\n  return false;\n}\n\n/**\n * Indicates whether the input is a valid Flipnote Studio or Flipnote Studio 3D user ID\n */\nexport function isFsid(fsid: string) {\n  return isPpmFsid(fsid) || isKwzFsid(fsid);\n}\n\n/**\n * Get the region for any valid Flipnote Studio user ID\n */\nexport function getPpmFsidRegion(fsid: string) : FlipnoteRegion {\n  switch (fsid.charAt(0)) {\n    case '0':\n    case '1':\n      return FlipnoteRegion.JPN;\n    case '5':\n      return FlipnoteRegion.USA;\n    case '9':\n      return FlipnoteRegion.EUR;\n    default:\n      return FlipnoteRegion.UNKNOWN;\n  }\n}\n\n/**\n * Get the region for any valid Flipnote Studio 3D user ID.\n * NOTE: This may be incorrect for IDs that are not from the DSi Library.\n */\nexport function getKwzFsidRegion(fsid: string): FlipnoteRegion {\n  if (isKwzDsiLibraryFsid(fsid)) {\n    switch (fsid.charAt(19)) {\n      case '0':\n      case '1':\n        return FlipnoteRegion.JPN;\n      case '5':\n        return FlipnoteRegion.USA;\n      case '9':\n        return FlipnoteRegion.EUR;\n      default:\n        return FlipnoteRegion.UNKNOWN;\n    }\n  }\n  switch (fsid.slice(0, 2)) {\n    // note: might be incorrect\n    case '00':\n      return FlipnoteRegion.JPN;\n    case '02':\n      return FlipnoteRegion.USA;\n    case '04':\n      return FlipnoteRegion.EUR;\n    default:\n      return FlipnoteRegion.UNKNOWN;\n  }\n}\n\n/**\n * Convert a KWZ Flipnote Studio ID (from a Nintendo DSi Library Flipnote) to the format used by PPM Flipnote Studio IDs.\n * Will return `null` if the conversion could not be made.\n */\nexport function convertKwzFsidToPpmFsid(fsid: string): string {\n  if (REGEX_KWZ_DSI_LIBRARY_FSID.test(fsid))\n    return (fsid.slice(19, 21) + fsid.slice(17, 19) + fsid.slice(15, 17) + fsid.slice(12, 14) + fsid.slice(10, 12) + fsid.slice(7, 9) + fsid.slice(5, 7) + fsid.slice(2, 4)).toUpperCase();\n  return null;\n}\n\n/**\n * Convert a PPM Flipnote Studio ID to the format used by KWZ Flipnote Studio IDs (as seen in Nintendo DSi Library Flipnotes).\n * Will return `null` if the conversion could not be made.\n * \n * NOTE: KWZ Flipnote Studio IDs contain an extra two characters at the beginning. It is not possible to resolve these from a PPM Flipnote Studio ID.\n */\nexport function convertPpmFsidToKwzFsidSuffix(fsid: string): string {\n  if (REGEX_PPM_FSID.test(fsid))\n    return (fsid.slice(14, 16) + fsid.slice(12, 14) + '-' + fsid.slice(10, 12) + fsid.slice(8, 10) + '-' + fsid.slice(6, 8) + fsid.slice(4, 6) + '-' + fsid.slice(2, 4) + fsid.slice(0, 2)).toLowerCase();\n  return null;\n}\n\n/**\n * Convert a PPM Flipnote Studio ID to an array of all possible matching KWZ Flipnote Studio IDs (as seen in Nintendo DSi Library Flipnotes).\n * Will return `null` if the conversion could not be made.\n */\nexport function convertPpmFsidToPossibleKwzFsids(fsid: string): string[] {\n  const kwzIdSuffix = convertPpmFsidToKwzFsidSuffix(fsid);\n  if (kwzIdSuffix) {\n    return [\n      '00' + kwzIdSuffix,\n      '10' + kwzIdSuffix,\n      '12' + kwzIdSuffix,\n      '14' + kwzIdSuffix,\n    ];\n  }\n  return null;\n}\n\n/**\n * Tests if a KWZ Flipnote Studio ID (from a Nintendo DSi Library Flipnote) matches a given PPM-formatted Flipnote Studio ID.\n */\nexport function testKwzFsidMatchesPpmFsid(kwzFsid: string, ppmFsid: string): boolean {\n  const ppmFromKwz = convertKwzFsidToPpmFsid(kwzFsid);\n  return ppmFromKwz == ppmFsid;\n}\n\n/**\n * Get the region for any valid Flipnote Studio or Flipnote Studio 3D user ID\n */\nexport function getFsidRegion(fsid: string): FlipnoteRegion {\n  if (isPpmFsid(fsid))\n    return getPpmFsidRegion(fsid);\n  else if (isKwzFsid(fsid))\n    return getKwzFsidRegion(fsid);\n  return FlipnoteRegion.UNKNOWN;\n}","import { isBrowser } from './env';\n\n/** @internal */\nexport const saveData = (function () {\n  if (!isBrowser) {\n    return function(){}\n  }\n  const a = document.createElement('a');\n  return function (blob: Blob, filename:string) {\n    const url = window.URL.createObjectURL(blob);\n    a.href = url;\n    a.download = filename;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n})();\n","import { \n  assertRange,\n  DataStream,\n  FlipnoteRegion\n} from '../utils';\n\nexport { FlipnoteRegion } from '../utils';\n\n/** Identifies which animation format a Flipnote uses */\nexport enum FlipnoteFormat {\n  /** Animation format used by Flipnote Studio (Nintendo DSiWare) */\n  PPM = 'PPM',\n  /** Animation format used by Flipnote Studio 3D (Nintendo 3DS) */\n  KWZ = 'KWZ'\n};\n\n/** RGBA color */\nexport type FlipnotePaletteColor = [\n  /** Red (0 to 255) */\n  number,\n  /** Green (0 to 255) */\n  number,\n  /** Blue (0 to 255) */\n  number,\n  /** Alpha (0 to 255) */\n  number\n];\n\n/** Flipnote layer visibility */\nexport type FlipnoteLayerVisibility = Record<number, boolean>;\n\n/** Defines the colors used for a given Flipnote format */\nexport type FlipnotePaletteDefinition = Record<string, FlipnotePaletteColor>;\n\n/** Identifies a Flipnote audio track type */\nexport enum FlipnoteAudioTrack {\n  /** Background music track */\n  BGM,\n  /** Sound effect 1 track */\n  SE1,\n  /** Sound effect 2 track */\n  SE2,\n  /** Sound effect 3 track */\n  SE3,\n  /** Sound effect 4 track (only used by KWZ files) */\n  SE4\n};\n\n/** Contains data about a given audio track; it's file offset and length */\nexport interface FlipnoteAudioTrackInfo { ptr: number; length: number; };\n\n/** {@link FlipnoteAudioTrack}, but just sound effect tracks */\nexport enum FlipnoteSoundEffectTrack {\n  SE1 = FlipnoteAudioTrack.SE1,\n  SE2 = FlipnoteAudioTrack.SE2,\n  SE3 = FlipnoteAudioTrack.SE3,\n  SE4 = FlipnoteAudioTrack.SE4,\n};\n\n/** Flipnote sound flags, indicating which sound effect tracks are used on a given frame */\nexport type FlipnoteSoundEffectFlags = Record<FlipnoteSoundEffectTrack, boolean>;\n\n/**\n * Flipnote version info - provides details about a particular Flipnote version and its author\n */\nexport interface FlipnoteVersion {\n  /** Flipnote unique filename */\n  filename: string;\n  /** Author's username */\n  username: string;\n  /** Author's unique Flipnote Studio ID, formatted in the same way that it would appear on the app's settings screen */\n  fsid: string;\n  /** Author's region */\n  region: FlipnoteRegion;\n  /** KWZ only - sometimes DSi library notes incorrectly use the PPM filename format instead */\n  isDsiFilename?: boolean;\n};\n\n/**\n * Flipnote details\n */\nexport interface FlipnoteMeta {\n  /** File lock state. Locked Flipnotes cannot be edited by anyone other than the current author */\n  lock: boolean;\n  /** Playback loop state. If `true`, playback will loop once the end is reached */\n  loop: boolean;\n  /** Spinoffs are remixes of another user's Flipnote */\n  isSpinoff: boolean;\n  /** Total number of animation frames */\n  frameCount: number;\n  /** In-app frame playback speed */\n  frameSpeed: number;\n  /** Index of the animation frame used as the Flipnote's thumbnail image */\n  thumbIndex: number;\n  /** Date representing when the file was last edited */\n  timestamp: Date;\n  /** Flipnote duration measured in seconds, assuming normal playback speed */\n  duration: number;\n  /** Metadata about the author of the original Flipnote file */\n  root: FlipnoteVersion;\n  /** Metadata about the previous author of the Flipnote file */\n  parent: FlipnoteVersion;\n  /** Metadata about the current author of the Flipnote file */\n  current: FlipnoteVersion;\n};\n\n/** \n * Base Flipnote parser class\n * \n * This doesn't implement any parsing functionality itself, \n * it just provides a consistent API for every format parser to implement.\n * @category File Parser\n*/\nexport abstract class FlipnoteParserBase extends DataStream {\n\n  /** Static file format info */\n\n  /** File format type */\n  static format: FlipnoteFormat;\n  /** Animation frame width */\n  static width: number;\n  /** Animation frame height */\n  static height: number;\n  /** Animation frame aspect ratio (height / width) */\n  static aspect: number;\n  /** Number of animation frame layers */\n  static numLayers: number;\n  /** Number of colors per layer (aside from transparent) */\n  static numLayerColors: number;\n  /** Which audio tracks are available in this format */\n  static audioTracks: FlipnoteAudioTrack[];\n  /** Which sound effect tracks are available in this format */\n  static soundEffectTracks: FlipnoteSoundEffectTrack[];\n  /** Audio track base sample rate */\n  static rawSampleRate: number;\n  /** Audio output sample rate */\n  static sampleRate: number;\n  /** Global animation frame color palette */\n  static globalPalette: FlipnotePaletteColor[];\n  /** key used for Flipnote verification, in PEM format */\n  static publicKey: string;\n\n  /** Instance file format info */\n\n  /** Custom object tag */\n  [Symbol.toStringTag] = 'Flipnote';\n  /** File format type, reflects {@link FlipnoteParserBase.format} */\n  format: FlipnoteFormat;\n  /** Default formats used for {@link getTitle()} */\n  titleFormats = {\n    COMMENT: 'Comment by $USERNAME',\n    FLIPNOTE: 'Flipnote by $USERNAME',\n    ICON: 'Folder icon'\n  };\n  /** Animation frame width, reflects {@link FlipnoteParserBase.width} */\n  imageWidth: number;\n  /** Animation frame height, reflects {@link FlipnoteParserBase.height} */\n  imageHeight: number;\n  /** Animation frame aspect ratio (height / width), reflects {@link FlipnoteParserBase.aspect} */\n  aspect: number;\n  /** X offset for the top-left corner of the animation frame */\n  imageOffsetX: number;\n  /** Y offset for the top-left corner of the animation frame */\n  imageOffsetY: number;\n  /** Number of animation frame layers, reflects {@link FlipnoteParserBase.numLayers} */\n  numLayers: number;\n  /** Number of colors per layer (aside from transparent), reflects {@link FlipnoteParserBase.numLayerColors} */\n  numLayerColors: number;\n  /** @internal */\n  srcWidth: number;\n  /** Which audio tracks are available in this format, reflects {@link FlipnoteParserBase.audioTracks} */\n  audioTracks: FlipnoteAudioTrack[];\n  /** Which sound effect tracks are available in this format, reflects {@link FlipnoteParserBase.soundEffectTracks} */\n  soundEffectTracks: FlipnoteSoundEffectTrack[];\n  /** Audio track base sample rate, reflects {@link FlipnoteParserBase.rawSampleRate} */\n  rawSampleRate: number;\n  /** Audio output sample rate, reflects {@link FlipnoteParserBase.sampleRate} */\n  sampleRate: number;\n  /** Global animation frame color palette, reflects {@link FlipnoteParserBase.globalPalette} */\n  globalPalette: FlipnotePaletteColor[];\n  /** Flipnote palette */\n  palette: FlipnotePaletteDefinition;\n  /** File metadata, see {@link FlipnoteMeta} for structure */\n  meta: FlipnoteMeta;\n  /** File audio track info, see {@link FlipnoteAudioTrackInfo} */\n  soundMeta: Map<FlipnoteAudioTrack, FlipnoteAudioTrackInfo> = new Map();\n  /** Animation frame global layer visibility */\n  layerVisibility: FlipnoteLayerVisibility = {1: true, 2: true, 3: true};\n  /** key used for Flipnote verification, in PEM format */\n  publicKey: string;\n\n  /** Instance-unique info */\n\n  /** Spinoffs are remixes of another user's Flipnote */\n  isSpinoff: boolean;\n  /** (KWZ only) Indicates whether or not this file is a Flipnote Studio 3D folder icon */\n  isFolderIcon: boolean = false;\n  /** (KWZ only) Indicates whether or not this file is a handwritten comment from Flipnote Gallery World */\n  isComment: boolean = false;\n  /** (KWZ only) Indicates whether or not this Flipnote is a PPM to KWZ conversion from Flipnote Studio 3D's DSi Library service */\n  isDsiLibraryNote: boolean = false;\n  /** Animation frame count */\n  frameCount: number;\n  /** In-app animation playback speed */\n  frameSpeed: number;\n  /** Animation duration, in seconds */\n  duration: number;\n  /** In-app animation playback speed when the BGM track was recorded */\n  bgmSpeed: number;\n  /** Animation framerate, measured as frames per second */\n  framerate: number;\n  /** Animation framerate when the BGM track was recorded, measured as frames per second */\n  bgmrate: number;\n  /** Index of the animation frame used as the Flipnote's thumbnail image */\n  thumbFrameIndex: number;\n  /** Get the amount of clipping in the master audio track, useful for determining if a Flipnote's audio is corrupted. Closer to 1.0 = more clipping. Only available after {@link getAudioMasterPcm} has been called */\n  audioClipRatio: number;\n\n  /**\n   * Get file default title - e.g. \"Flipnote by Y\", \"Comment by X\", etc. \n   * A format object can be passed for localization, where `$USERNAME` gets replaced by author name:\n   * ```js\n   * {\n   *  COMMENT: 'Comment by $USERNAME',\n   *  FLIPNOTE: 'Flipnote by $USERNAME',\n   *  ICON: 'Folder icon'\n   * }\n   * ```\n   * @category Utility\n   */\n  getTitle(formats = this.titleFormats) {\n    if (this.isFolderIcon)\n      return formats.ICON;\n    const title = this.isComment ? formats.COMMENT : formats.FLIPNOTE;\n    return title.replace('$USERNAME', this.meta.current.username);\n  }\n\n  /**\n   * Returns the Flipnote title when casting a parser instance to a string\n   * \n   * ```js\n   * const str = 'Title: ' + note;\n   * // str === 'Title: Flipnote by username'\n   * ```\n   * @category Utility\n   */\n  toString() {\n    return this.getTitle();\n  }\n\n  /**\n   * Allows for frame index iteration when using the parser instance as a for..of iterator\n   * \n   * ```js\n   * for (const frameIndex of note) {\n   *   // do something with frameIndex...\n   * }\n   * ```\n   * @category Utility\n   */\n  *[Symbol.iterator]() {\n    for (let i = 0; i < this.frameCount; i++)\n      yield i;\n  }\n\n  /** \n   * Decode a frame, returning the raw pixel buffers for each layer\n   * @category Image\n  */\n  abstract decodeFrame(frameIndex: number): Uint8Array[];\n\n  /** \n   * Get the pixels for a given frame layer, as palette indices\n   * NOTE: layerIndex are not guaranteed to be sorted by 3D depth in KWZs, use {@link getFrameLayerOrder} to get the correct sort order first\n   * NOTE: if the visibility flag for this layer is turned off, the result will be empty\n   * @category Image\n  */\n  getLayerPixels(\n    frameIndex: number,\n    layerIndex: number,\n    imageBuffer = new Uint8Array(this.imageWidth * this.imageHeight)\n  ) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    assertRange(layerIndex, 0, this.numLayers - 1, 'Layer index');\n    // palette\n    const palette = this.getFramePaletteIndices(frameIndex);\n    const palettePtr = layerIndex * this.numLayerColors;\n    // raw pixels\n    const layers = this.decodeFrame(frameIndex);\n    const layerBuffer = layers[layerIndex];\n    // image dimensions and crop\n    const srcStride = this.srcWidth;\n    const width = this.imageWidth;\n    const height = this.imageHeight;\n    const xOffs = this.imageOffsetX;\n    const yOffs = this.imageOffsetY;\n    // clear image buffer before writing\n    imageBuffer.fill(0);\n    // handle layer visibility by returning a blank image if the layer is invisible\n    if (!this.layerVisibility[layerIndex + 1])\n      return imageBuffer;\n    // convert to palette indices and crop\n    for (let srcY = yOffs, dstY = 0; dstY < height; srcY++, dstY++) {\n      for (let srcX = xOffs, dstX = 0; dstX < width; srcX++, dstX++) {\n        const srcPtr = srcY * srcStride + srcX;\n        const dstPtr = dstY * width + dstX;\n        let pixel = layerBuffer[srcPtr];\n        if (pixel !== 0) imageBuffer[dstPtr] = palette[palettePtr + pixel];\n      }\n    }\n    return imageBuffer;\n  }\n\n  /** \n   * Get the pixels for a given frame layer, as RGBA pixels\n   * NOTE: layerIndex are not guaranteed to be sorted by 3D depth in KWZs, use {@link getFrameLayerOrder} to get the correct sort order first\n   * NOTE: if the visibility flag for this layer is turned off, the result will be empty\n   * @category Image\n  */\n  getLayerPixelsRgba(\n    frameIndex: number,\n    layerIndex: number,\n    imageBuffer = new Uint32Array(this.imageWidth * this.imageHeight),\n    paletteBuffer = new Uint32Array(16)\n  ) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    assertRange(layerIndex, 0, this.numLayers - 1, 'Layer index');\n    // palette\n    this.getFramePaletteUint32(frameIndex, paletteBuffer);\n    const palettePtr = layerIndex * this.numLayerColors;\n    // raw pixels\n    const layers = this.decodeFrame(frameIndex);\n    const layerBuffer = layers[layerIndex];\n    // image dimensions and crop\n    const srcStride = this.srcWidth;\n    const width = this.imageWidth;\n    const height = this.imageHeight;\n    const xOffs = this.imageOffsetX;\n    const yOffs = this.imageOffsetY;\n    // clear image buffer before writing\n    imageBuffer.fill(paletteBuffer[0]);\n    // handle layer visibility by returning a blank image if the layer is invisible\n    if (!this.layerVisibility[layerIndex + 1])\n      return imageBuffer;\n    // convert to palette indices and crop\n    for (let srcY = yOffs, dstY = 0; dstY < height; srcY++, dstY++) {\n      for (let srcX = xOffs, dstX = 0; dstX < width; srcX++, dstX++) {\n        const srcPtr = srcY * srcStride + srcX;\n        const dstPtr = dstY * width + dstX;\n        let pixel = layerBuffer[srcPtr];\n        if (pixel !== 0) imageBuffer[dstPtr] = paletteBuffer[palettePtr + pixel];\n      }\n    }\n    return imageBuffer;\n  }\n\n  /** \n   * Get the layer draw order for a given frame\n   * @category Image\n  */\n  abstract getFrameLayerOrder(frameIndex: number): number[];\n\n  /** \n   * Get the image for a given frame, as palette indices\n   * @category Image\n  */\n  getFramePixels(\n    frameIndex: number,\n    imageBuffer = new Uint8Array(this.imageWidth * this.imageHeight)\n  ) {\n    // image dimensions and crop\n    const srcStride = this.srcWidth;\n    const width = this.imageWidth;\n    const height = this.imageHeight;\n    const xOffs = this.imageOffsetX;\n    const yOffs = this.imageOffsetY;\n    // palette\n    const palette = this.getFramePaletteIndices(frameIndex);\n    // clear framebuffer with paper color\n    imageBuffer.fill(palette[0]);\n    // get layer info + decode into buffers\n    const layerOrder = this.getFrameLayerOrder(frameIndex);\n    const layers = this.decodeFrame(frameIndex);\n    // merge layers into framebuffer\n    for (let i = 0; i < this.numLayers; i++) {\n      const layerIndex = layerOrder[i];\n      const layerBuffer = layers[layerIndex];\n      const palettePtr = layerIndex * this.numLayerColors;\n      // skip if layer is not visible\n      if (!this.layerVisibility[layerIndex + 1])\n        continue;\n      // merge layer into rgb buffer\n      for (let srcY = yOffs, dstY = 0; dstY < height; srcY++, dstY++) {\n        for (let srcX = xOffs, dstX = 0; dstX < width; srcX++, dstX++) {\n          const srcPtr = srcY * srcStride + srcX;\n          const dstPtr = dstY * width + dstX;\n          let pixel = layerBuffer[srcPtr];\n          if (pixel !== 0) imageBuffer[dstPtr] = palette[palettePtr + pixel];\n        }\n      }\n    }\n    return imageBuffer;\n  }\n\n\n  /**\n   * Get the image for a given frame as an uint32 array of RGBA pixels\n   * @category Image\n   */\n  getFramePixelsRgba(\n    frameIndex: number,\n    imageBuffer = new Uint32Array(this.imageWidth * this.imageHeight),\n    paletteBuffer = new Uint32Array(16)\n  ) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    // image dimensions and crop\n    const srcStride = this.srcWidth;\n    const width = this.imageWidth;\n    const height = this.imageHeight;\n    const xOffs = this.imageOffsetX;\n    const yOffs = this.imageOffsetY;\n    // palette\n    this.getFramePaletteUint32(frameIndex, paletteBuffer);\n    // clear framebuffer with paper color\n    imageBuffer.fill(paletteBuffer[0]);\n    // get layer info + decode into buffers\n    const layerOrder = this.getFrameLayerOrder(frameIndex);\n    const layers = this.decodeFrame(frameIndex);\n    // merge layers into framebuffer\n    for (let i = 0; i < this.numLayers; i++) {\n      const layerIndex = layerOrder[i];\n      const layerBuffer = layers[layerIndex];\n      const palettePtr = layerIndex * this.numLayerColors;\n      // skip if layer is not visible\n      if (!this.layerVisibility[layerIndex + 1])\n        continue;\n      // merge layer into rgb buffer\n      for (let srcY = yOffs, dstY = 0; dstY < height; srcY++, dstY++) {\n        for (let srcX = xOffs, dstX = 0; dstX < width; srcX++, dstX++) {\n          const srcPtr = srcY * srcStride + srcX;\n          const dstPtr = dstY * width + dstX;\n          let pixel = layerBuffer[srcPtr];\n          if (pixel !== 0) imageBuffer[dstPtr] = paletteBuffer[palettePtr + pixel];\n        }\n      }\n    }\n    return imageBuffer;\n  }\n\n  /** \n   * Get the color palette indices for a given frame. RGBA colors for these values can be indexed from {@link FlipnoteParserBase.globalPalette}\n   * @category Image\n  */\n  abstract getFramePaletteIndices(frameIndex: number): number[];\n  \n  /** \n   * Get the color palette for a given frame, as a list of `[r,g,b,a]` colors\n   * @category Image\n  */\n  abstract getFramePalette(frameIndex: number): FlipnotePaletteColor[];\n\n  /** \n   * Get the color palette for a given frame, as an uint32 array\n   * @category Image\n  */\n  getFramePaletteUint32(\n    frameIndex: number,\n    paletteBuffer = new Uint32Array(16)\n  ) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    const colors = this.getFramePalette(frameIndex);\n    paletteBuffer.fill(0);\n    colors.forEach(([r, g, b, a], i) => paletteBuffer[i] = (a << 24) | (b << 16) | (g << 8) | r);\n    return paletteBuffer;\n  }\n\n  /** \n   * Get the sound effect flags for every frame in the Flipnote\n   * @category Audio\n  */\n  abstract decodeSoundFlags(): boolean[][];\n\n  /**\n   * Get the sound effect usage flags for every frame\n   * @category Audio\n   */\n  abstract getSoundEffectFlags(): FlipnoteSoundEffectFlags[];\n\n  /**\n   * Get the sound effect usage flags for a given frame\n   * @category Audio\n   */\n  abstract getFrameSoundEffectFlags(frameIndex: number): FlipnoteSoundEffectFlags;\n\n  /**\n   * Get the usage flags for a given track across every frame\n   * @returns an array of booleans for every frame, indicating whether the track is used on that frame\n   * @category Audio\n   */\n  getSoundEffectFlagsForTrack(trackId: FlipnoteSoundEffectTrack) {\n    return this.getSoundEffectFlags().map(flags => flags[trackId]);\n  };\n\n  /**\n   * Is a given track used on a given frame\n   * @category Audio\n   */\n  isSoundEffectUsedOnFrame(trackId: FlipnoteSoundEffectTrack, frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    if (!this.soundEffectTracks.includes(trackId))\n      return false;\n    return this.getFrameSoundEffectFlags(frameIndex)[trackId];\n  }\n\n  /** \n   * Does an audio track exist in the Flipnote?\n   * @returns boolean\n   * @category Audio\n  */\n  hasAudioTrack(trackId: FlipnoteAudioTrack): boolean {\n    return this.soundMeta.has(trackId) && this.soundMeta.get(trackId).length > 0;\n  }\n\n  /** \n   * Get the raw compressed audio data for a given track\n   * @returns byte array\n   * @category Audio\n  */\n  abstract getAudioTrackRaw(trackId: FlipnoteAudioTrack): Uint8Array;\n\n  /** \n   * Get the decoded audio data for a given track, using the track's native samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  abstract decodeAudioTrack(trackId: FlipnoteAudioTrack): Int16Array;\n\n  /** \n   * Get the decoded audio data for a given track, using the specified samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  abstract getAudioTrackPcm(trackId: FlipnoteAudioTrack, sampleRate?: number): Int16Array;\n\n  /** \n   * Get the full mixed audio for the Flipnote, using the specified samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  abstract getAudioMasterPcm(sampleRate?: number): Int16Array;\n\n  /**\n   * Get the body of the Flipnote - the data that is digested for computing the signature\n   * @returns content data as Uint8Array\n   * @category Verification\n   */\n  abstract getBody(): Uint8Array;\n\n  /**\n   * Get the Flipnote's signature data\n   * @returns signature data as Uint8Array\n   * @category Verification\n   */\n  abstract getSignature(): Uint8Array;\n\n  /**\n   * Verify whether this Flipnote's signature is valid\n   * @async\n   * @returns boolean\n   * @category Verification\n   */\n  abstract verify(): Promise<boolean>;\n}","import { \n  FlipnoteFormat,\n  FlipnotePaletteDefinition,\n  FlipnoteAudioTrack,\n  FlipnoteSoundEffectTrack,\n  FlipnoteSoundEffectFlags,\n  FlipnoteMeta,\n  FlipnoteParserBase\n} from './FlipnoteParserBase';\n\nimport {\n  ADPCM_INDEX_TABLE_4BIT,\n  ADPCM_STEP_TABLE,\n  clamp,\n  pcmResampleNearestNeighbour,\n  pcmGetClippingRatio,\n  assert,\n  assertRange,\n  dateFromNintendoTimestamp,\n  timeGetNoteDuration,\n  getPpmFsidRegion,\n  rsaLoadPublicKey,\n  rsaVerify\n} from '../utils';\n\n/** \n * PPM framerates in frames per second, indexed by the in-app frame speed.\n * Frame speed 0 is never normally used\n */\nconst PPM_FRAMERATES = [0.5, 0.5, 1, 2, 4, 6, 12, 20, 30];\n\n/** \n * PPM color defines (red, green, blue, alpha)\n */\nconst PPM_PALETTE: FlipnotePaletteDefinition = {\n  WHITE: [0xff, 0xff, 0xff, 0xff],\n  BLACK: [0x0e, 0x0e, 0x0e, 0xff],\n  RED:   [0xff, 0x2a, 0x2a, 0xff],\n  BLUE:  [0x0a, 0x39, 0xff, 0xff]\n};\n\n/**\n * RSA public key used to verify that the PPM file signature is genuine.\n * \n * This **cannot** be used to resign Flipnotes, it can only verify that they are valid\n */\nconst PPM_PUBLIC_KEY: string = `-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDCPLwTL6oSflv+gjywi/sM0TUB\n90xqOvuCpjduETjPoN2FwMebxNjdKIqHUyDu4AvrQ6BDJc6gKUbZ1E27BGZoCPH4\n9zQRb+zAM6M9EjHwQ6BABr0u2TcF7xGg2uQ9MBWz9AfbVQ91NjfrNWo0f7UPmffv\n1VvixmTk1BCtavZxBwIDAQAB\n-----END PUBLIC KEY-----`;\n\n/** \n * PPM file metadata, stores information about its playback, author details, etc\n */\nexport interface PpmMeta extends FlipnoteMeta {\n  /** In-app frame playback speed when the BGM audio track was recorded */\n  bgmSpeed: number;\n};\n\n/**\n * PPM parser options for enabling optimizations and other extra features.\n * None are currently implemented\n */\nexport type PpmParserSettings = {};\n\n/**\n * Parser class for (DSiWare) Flipnote Studio's PPM animation format.\n * \n * Format docs: https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format\n * @category File Parser\n */\nexport class PpmParser extends FlipnoteParserBase {\n\n  /** Default PPM parser settings */\n  static defaultSettings: PpmParserSettings = {};\n  /** File format type */\n  static format = FlipnoteFormat.PPM;\n  /** Animation frame width */\n  static width = 256;\n  /** Animation frame height */\n  static height = 192;\n  /** Animation frame aspect ratio */\n  static aspect = 3 / 4;\n  /** Number of animation frame layers */\n  static numLayers = 2;\n  /** Number of colors per layer (aside from transparent) */\n  static numLayerColors = 1;\n  /** Audio track base sample rate */\n  static rawSampleRate = 8192;\n  /** Nintendo DSi audio output rate */\n  static sampleRate = 32768;\n  /** Which audio tracks are available in this format */\n  static audioTracks = [\n    FlipnoteAudioTrack.BGM,\n    FlipnoteAudioTrack.SE1,\n    FlipnoteAudioTrack.SE2,\n    FlipnoteAudioTrack.SE3\n  ];\n  /** Which sound effect tracks are available in this format */\n  static soundEffectTracks = [\n    FlipnoteSoundEffectTrack.SE1,\n    FlipnoteSoundEffectTrack.SE2,\n    FlipnoteSoundEffectTrack.SE3,\n  ];\n  /** Global animation frame color palette */\n  static globalPalette = [\n    PPM_PALETTE.WHITE,\n    PPM_PALETTE.BLACK,\n    PPM_PALETTE.RED,\n    PPM_PALETTE.BLUE\n  ];\n  /** Public key used for Flipnote verification, in PEM format */\n  static publicKey = PPM_PUBLIC_KEY;\n\n  /** File format type, reflects {@link PpmParser.format} */\n  format = FlipnoteFormat.PPM;\n  /** Custom object tag */\n  [Symbol.toStringTag] = 'Flipnote Studio PPM animation file';\n  /** Animation frame width, reflects {@link PpmParser.width} */\n  imageWidth = PpmParser.width;\n  /** Animation frame height, reflects {@link PpmParser.height} */\n  imageHeight = PpmParser.height;\n  /** Animation frame aspect ratio, reflects {@link PpmParser.aspect} */\n  aspect = PpmParser.aspect;\n  /** X offset for the top-left corner of the animation frame */\n  imageOffsetX = 0;\n  /** Y offset for the top-left corner of the animation frame */\n  imageOffsetY = 0;\n  /** Number of animation frame layers, reflects {@link PpmParser.numLayers} */\n  numLayers = PpmParser.numLayers;\n  /** Number of colors per layer (aside from transparent), reflects {@link PpmParser.numLayerColors} */\n  numLayerColors = PpmParser.numLayerColors;\n  /** key used for Flipnote verification, in PEM format */\n  publicKey = PpmParser.publicKey;\n  /** @internal */\n  srcWidth = PpmParser.width;\n  /** Which audio tracks are available in this format, reflects {@link PpmParser.audioTracks} */\n  audioTracks = PpmParser.audioTracks;\n  /** Which sound effect tracks are available in this format, reflects {@link PpmParser.soundEffectTracks} */\n  soundEffectTracks = PpmParser.soundEffectTracks;\n  /** Audio track base sample rate, reflects {@link PpmParser.rawSampleRate} */\n  rawSampleRate = PpmParser.rawSampleRate;\n  /** Audio output sample rate, reflects {@link PpmParser.sampleRate} */\n  sampleRate = PpmParser.sampleRate;\n  /** Global animation frame color palette, reflects {@link PpmParser.globalPalette} */\n  globalPalette = PpmParser.globalPalette;\n  /** File metadata, see {@link PpmMeta} for structure */\n  meta: PpmMeta;\n  /** File format version; always the same as far as we know */\n  version: number;\n\n  private layerBuffers: [Uint8Array, Uint8Array];\n  private soundFlags: boolean[][];\n  private prevLayerBuffers: [Uint8Array, Uint8Array];\n  private lineEncodingBuffers: [Uint8Array, Uint8Array];\n  private prevDecodedFrame: number = null;\n  private frameDataLength: number;\n  private soundDataLength: number;\n  private soundDataOffset: number;\n  private frameOffsets: Uint32Array;\n\n  /**\n   * Create a new PPM file parser instance\n   * @param arrayBuffer an ArrayBuffer containing file data\n   * @param settings parser settings (none currently implemented)\n   */\n  constructor(arrayBuffer: ArrayBuffer, settings: Partial<PpmParserSettings> = {}) {\n    super(arrayBuffer);\n    this.decodeHeader();\n    this.decodeAnimationHeader();\n    this.decodeSoundHeader();\n    // this is always true afaik, it's likely just a remnant from development\n    // doesn't hurt to be accurate though...\n    if (((this.version >> 4) & 0xf) !== 0) {\n      this.decodeMeta();\n    }\n    // create image buffers\n    this.layerBuffers = [\n      new Uint8Array(PpmParser.width * PpmParser.height),\n      new Uint8Array(PpmParser.width * PpmParser.height)\n    ];\n    this.prevLayerBuffers = [\n      new Uint8Array(PpmParser.width * PpmParser.height),\n      new Uint8Array(PpmParser.width * PpmParser.height)\n    ];\n    this.lineEncodingBuffers = [\n      new Uint8Array(PpmParser.height),\n      new Uint8Array(PpmParser.height)\n    ];\n    this.prevDecodedFrame = null;\n  }\n\n  private decodeHeader() {\n    assert(16 < this.byteLength);\n    this.seek(4);\n    // decode header\n    // https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format#header\n    this.frameDataLength = this.readUint32();\n    this.soundDataLength = this.readUint32();\n    this.frameCount = this.readUint16() + 1;\n    this.version = this.readUint16();\n    // sound data offset = frame data offset + frame data length + sound effect flags\n    let soundDataOffset = 0x06A0 + this.frameDataLength + this.frameCount;\n    if (soundDataOffset % 4 !== 0) soundDataOffset += 4 - (soundDataOffset % 4);\n    assert(soundDataOffset < this.byteLength);\n    this.soundDataOffset = soundDataOffset;\n  }\n\n  private readFilename() {\n    const mac = this.readHex(3);\n    const random = this.readChars(13);\n    const edits = this.readUint16().toString().padStart(3, '0');\n    return `${ mac }_${ random }_${ edits }`;\n  }\n\n  private decodeMeta() {\n    // https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format#metadata\n    assert(0x06A8 < this.byteLength);\n    this.seek(0x10);\n    const lock = this.readUint16();\n    const thumbIndex = this.readInt16();\n    const rootAuthorName = this.readWideChars(11);\n    const parentAuthorName = this.readWideChars(11);\n    const currentAuthorName = this.readWideChars(11);\n    const parentAuthorId = this.readHex(8, true);\n    const currentAuthorId = this.readHex(8, true);\n    const parentFilename = this.readFilename();\n    const currentFilename = this.readFilename();\n    const rootAuthorId = this.readHex(8, true);\n    this.seek(0x9A);\n    const timestamp = dateFromNintendoTimestamp(this.readInt32());\n    this.seek(0x06A6);\n    const flags = this.readUint16();\n    this.thumbFrameIndex = thumbIndex;\n    this.layerVisibility = {\n      1: (flags & 0x10) === 0,\n      2: (flags & 0x20) === 0,\n      3: false\n    };\n    this.isSpinoff = (currentAuthorId !== parentAuthorId) || (currentAuthorId !== rootAuthorId);\n    this.meta = {\n      lock: lock === 1,\n      loop: (flags >> 1 & 0x1) === 1,\n      isSpinoff: this.isSpinoff,\n      frameCount: this.frameCount,\n      frameSpeed: this.frameSpeed,\n      bgmSpeed: this.bgmSpeed,\n      duration: this.duration,\n      thumbIndex: thumbIndex,\n      timestamp: timestamp,\n      root: {\n        username: rootAuthorName,\n        fsid: rootAuthorId,\n        region: getPpmFsidRegion(rootAuthorId),\n        filename: null\n      },\n      parent: {\n        username: parentAuthorName,\n        fsid: parentAuthorId,\n        region: getPpmFsidRegion(parentAuthorId),\n        filename: parentFilename\n      },\n      current: {\n        username: currentAuthorName,\n        fsid: currentAuthorId,\n        region: getPpmFsidRegion(currentAuthorId),\n        filename: currentFilename\n      },\n    };\n  }\n\n  private decodeAnimationHeader() {\n    // jump to the start of the animation data section\n    // https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format#animation-header\n    this.seek(0x06A0);\n    const offsetTableLength = this.readUint16();\n    const numOffsets = offsetTableLength / 4;\n    assert(numOffsets <= this.frameCount);\n    // skip padding + flags\n    this.seek(0x06A8);\n    // read frame offsets and build them into a table\n    const frameOffsets = new Uint32Array(numOffsets);\n    for (let n = 0; n < numOffsets; n++) {\n      const ptr = 0x06A8 + offsetTableLength + this.readUint32();\n      assert(ptr < this.byteLength, `Frame ${ n } pointer is out of bounds`);\n      frameOffsets[n] = ptr;\n    }\n    this.frameOffsets = frameOffsets;\n  }\n\n  private decodeSoundHeader() {\n    // https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format#sound-header\n    let ptr = this.soundDataOffset;\n    this.seek(ptr);\n    const bgmLen = this.readUint32();\n    const se1Len = this.readUint32();\n    const se2Len = this.readUint32();\n    const se3Len = this.readUint32();\n    this.frameSpeed = 8 - this.readUint8();\n    this.bgmSpeed = 8 - this.readUint8();\n    assert(this.frameSpeed <= 8 && this.bgmSpeed <= 8);\n    ptr += 32;\n    this.framerate = PPM_FRAMERATES[this.frameSpeed];\n    this.duration = timeGetNoteDuration(this.frameCount, this.framerate);\n    this.bgmrate = PPM_FRAMERATES[this.bgmSpeed];\n    const soundMeta = new Map();\n    soundMeta.set(FlipnoteAudioTrack.BGM, {ptr: ptr,           length: bgmLen});\n    soundMeta.set(FlipnoteAudioTrack.SE1, {ptr: ptr += bgmLen, length: se1Len});\n    soundMeta.set(FlipnoteAudioTrack.SE2, {ptr: ptr += se1Len, length: se2Len});\n    soundMeta.set(FlipnoteAudioTrack.SE3, {ptr: ptr += se2Len, length: se3Len});\n    this.soundMeta = soundMeta;\n  }\n\n  private isKeyFrame(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameOffsets[frameIndex]);\n    const header = this.readUint8();\n    return (header >> 7) & 0x1;\n  }\n  \n  /** \n   * Decode a frame, returning the raw pixel buffers for each layer\n   * @category Image\n  */\n  decodeFrame(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    // return existing layer buffers if no new frame has been decoded since the last call\n    if (this.prevDecodedFrame === frameIndex)\n      return this.layerBuffers;\n    // if necessary, decode previous frames until a keyframe is reached\n    if (this.prevDecodedFrame !== frameIndex - 1 && (!this.isKeyFrame(frameIndex)) && frameIndex !== 0)\n      this.decodeFrame(frameIndex - 1);\n    this.prevDecodedFrame = frameIndex;\n    // https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format#animation-data\n    this.seek(this.frameOffsets[frameIndex]);\n    const header = this.readUint8();\n    const isKeyFrame = (header >> 7) & 0x1;\n    const isTranslated = (header >> 5) & 0x3;\n    // reset current layer buffers\n    this.layerBuffers[0].fill(0);\n    this.layerBuffers[1].fill(0);\n\n    let translateX = 0;\n    let translateY = 0;\n    if (isTranslated) {\n      translateX = this.readInt8();\n      translateY = this.readInt8();\n    }\n\n    // unpack line encodings for each layer\n    for (let layerIndex = 0; layerIndex < 2; layerIndex++) {\n      const lineEncodingBuffer = this.lineEncodingBuffers[layerIndex];\n      lineEncodingBuffer.fill(0);\n      for (let ptr = 0; ptr < lineEncodingBuffer.length;) {\n        let byte = this.readUint8();\n        // the 4 lines in this byte are all empty (type 0) - skip\n        if (byte === 0) {\n          ptr += 4;\n          continue;\n        }\n        // unpack 4 line types from the current byte\n        lineEncodingBuffer[ptr++] = byte & 0x03;\n        lineEncodingBuffer[ptr++] = (byte >> 2) & 0x03;\n        lineEncodingBuffer[ptr++] = (byte >> 4) & 0x03;\n        lineEncodingBuffer[ptr++] = (byte >> 6) & 0x03;\n      }\n    }\n\n    // unpack layer bitmaps\n    for (let layerIndex = 0; layerIndex < 2; layerIndex++) {\n      const pixelBuffer = this.layerBuffers[layerIndex];\n      const lineEncodingBuffer = this.lineEncodingBuffers[layerIndex];\n      for (let y = 0; y < PpmParser.height; y++) {\n        let pixelBufferPtr = y * PpmParser.width;\n        const lineType = lineEncodingBuffer[y];\n        switch(lineType) {\n          // line type 0 = blank line, decode nothing\n          case 0:\n            break;\n          // line type 1 = compressed bitmap line\n          case 1:\n            // read lineHeader as a big-endian int\n            var lineHeader = this.readUint32(false);\n            // loop through each bit in the line header\n            // shift lineheader to the left by 1 bit every interation, \n            // so on the next loop cycle the next bit will be checked\n            // and if the line header equals 0, no more bits are set, \n            // the rest of the line is empty and can be skipped\n            for (; lineHeader !== 0; lineHeader <<= 1, pixelBufferPtr += 8) {\n              // if the bit is set, this 8-pix wide chunk is stored\n              // else we can just leave it blank and move on to the next chunk\n              if (lineHeader & 0x80000000) {\n                let chunk = this.readUint8();\n                // unpack chunk bits\n                // the chunk if shifted right 1 bit on every loop\n                // if the chunk equals 0, no more bits are set, \n                // so the rest of the chunk is empty and can be skipped\n                for (let pixel = 0; chunk !== 0; pixel++, chunk >>= 1)\n                  pixelBuffer[pixelBufferPtr + pixel] = chunk & 0x1;\n              }\n            }\n            break;\n          // line type 2 = compressed bitmap line like type 1, but all pixels are set to 1 first\n          case 2:\n            // line type 2 starts as an inverted line\n            pixelBuffer.fill(1, pixelBufferPtr, pixelBufferPtr + PpmParser.width);\n            // read lineHeader as a big-endian int\n            var lineHeader = this.readUint32(false);\n            // loop through each bit in the line header\n            // shift lineheader to the left by 1 bit every iteration, \n            // so on the next loop cycle the next bit will be checked\n            // and if the line header equals 0, no more bits are set, \n            // the rest of the line is empty and can be skipped\n            for (; lineHeader !== 0; lineHeader <<= 1, pixelBufferPtr += 8) {\n              // if the bit is set, this 8-pix wide chunk is stored\n              // else we can just leave it blank and move on to the next chunk\n              if (lineHeader & 0x80000000) {\n                let chunk = this.readUint8();\n                // unpack chunk bits\n                for (let pixel = 0; pixel < 8; pixel++, chunk >>= 1)\n                  pixelBuffer[pixelBufferPtr + pixel] = chunk & 0x1;\n              }\n            }\n            break;\n          // line type 3 = raw bitmap line\n          case 3:\n            for (let chunk = 0, i = 0; i < PpmParser.width; i++) {\n              if (i % 8 === 0)\n                chunk = this.readUint8();\n              pixelBuffer[pixelBufferPtr++] = chunk & 0x1;\n              chunk >>= 1;\n            }\n            break;\n        }\n      }\n    }\n    // if the current frame is based on changes from the previous one, merge them by XORing their values\n    const layer1 = this.layerBuffers[0];\n    const layer2 = this.layerBuffers[1];\n    const layer1Prev = this.prevLayerBuffers[0];\n    const layer2Prev = this.prevLayerBuffers[1];\n    // fast diffing if the frame isn't translated\n    if (!isKeyFrame && translateX === 0 && translateY === 0) {\n      const size =  PpmParser.height * PpmParser.width;\n      for (let i = 0; i < size; i++) {\n        layer1[i] ^= layer1Prev[i];\n        layer2[i] ^= layer2Prev[i];\n      }\n    }\n    // slower diffing if the frame is translated\n    else if (!isKeyFrame) {\n      const w = PpmParser.width;\n      const h = PpmParser.height;\n      const startX = Math.max(translateX, 0);\n      const startY = Math.max(translateY, 0);\n      const endX = Math.min(w + translateX, w);\n      const endY = Math.min(h + translateY, h);\n      const shift = translateY * w + translateX;\n      let dest: number, src: number;\n      // loop through each line\n      for (let y = startY; y < endY; y++) {\n        // loop through each pixel in the line\n        for (let x = startX; x < endX; x++) {\n          dest = y * w + x;\n          src = dest - shift;\n          // diff pixels with a binary XOR\n          layer1[dest] ^= layer1Prev[src];\n          layer2[dest] ^= layer2Prev[src];\n        }\n      }\n    }\n    // copy the current layer buffers to the previous ones\n    this.prevLayerBuffers[0].set(this.layerBuffers[0]);\n    this.prevLayerBuffers[1].set(this.layerBuffers[1]);\n    return this.layerBuffers;\n  }\n\n  /** \n   * Get the layer draw order for a given frame\n   * @category Image\n   * @returns Array of layer indexes, in the order they should be drawn\n  */\n  getFrameLayerOrder(frameIndex?: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    return [1, 0];\n  }\n\n  /** \n   * Get the color palette indices for a given frame. RGBA colors for these values can be indexed from {@link PpmParser.globalPalette}\n   *\n   * Returns an array where:\n   *  - index 0 is the paper color index\n   *  - index 1 is the layer 1 color index\n   *  - index 2 is the layer 2 color index\n   * @category Image\n  */\n  getFramePaletteIndices(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameOffsets[frameIndex]);\n    const header = this.readUint8();\n    const isInverted = (header & 0x1) !== 1;\n    const penMap = [\n      isInverted ? 0 : 1, // pen index 0 isn't used in normal cases\n      isInverted ? 0 : 1,\n      2,\n      3,\n    ];\n    return [\n      isInverted ? 1 : 0, // paper\n      penMap[(header >> 1) & 0x3], // layer 1 color\n      penMap[(header >> 3) & 0x3], // layer 2 color\n    ];\n  }\n\n  /**\n   * Get the RGBA colors for a given frame\n   * \n   * Returns an array where:\n   *  - index 0 is the paper color\n   *  - index 1 is the layer 1 color\n   *  - index 2 is the layer 2 color\n   * @category Image\n   */\n  getFramePalette(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    const indices = this.getFramePaletteIndices(frameIndex);\n    return indices.map(colorIndex => this.globalPalette[colorIndex]);\n  }\n\n  /** \n   * Get the sound effect flags for every frame in the Flipnote\n   * @category Audio\n  */\n  decodeSoundFlags() {\n    if (this.soundFlags !== undefined)\n      return this.soundFlags;\n    assert(0x06A0 + this.frameDataLength < this.byteLength);\n    // https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format#sound-effect-flags\n    this.seek(0x06A0 + this.frameDataLength);\n    const numFlags = this.frameCount;\n    const flags = this.readBytes(numFlags);\n    this.soundFlags = new Array(numFlags);\n    for (let i = 0; i < numFlags; i++) {\n      const byte = flags[i];\n      this.soundFlags[i] = [\n        (byte & 0x1) !== 0, // SE1 bitflag\n        (byte & 0x2) !== 0, // SE2 bitflag\n        (byte & 0x4) !== 0, // SE3 bitflag\n      ];\n    }\n    return this.soundFlags;\n  }\n\n  /**\n   * Get the sound effect usage flags for every frame\n   * @category Audio\n   */\n  getSoundEffectFlags(): FlipnoteSoundEffectFlags[] {\n    return this.decodeSoundFlags().map(frameFlags => ({\n      [FlipnoteSoundEffectTrack.SE1]: frameFlags[0],\n      [FlipnoteSoundEffectTrack.SE2]: frameFlags[1],\n      [FlipnoteSoundEffectTrack.SE3]: frameFlags[2]\n    }));\n  }\n\n  /**\n   * Get the sound effect usage flags for a given frame\n   * @category Audio\n   */\n  getFrameSoundEffectFlags(frameIndex: number): FlipnoteSoundEffectFlags {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(0x06A0 + this.frameDataLength + frameIndex);\n    const byte = this.readUint8();\n    return {\n      [FlipnoteSoundEffectTrack.SE1]: (byte & 0x1) !== 0,\n      [FlipnoteSoundEffectTrack.SE2]: (byte & 0x2) !== 0,\n      [FlipnoteSoundEffectTrack.SE3]: (byte & 0x4) !== 0\n    }\n  }\n\n  /** \n   * Get the raw compressed audio data for a given track\n   * @returns byte array\n   * @category Audio\n  */\n  getAudioTrackRaw(trackId: FlipnoteAudioTrack) {\n    const trackMeta = this.soundMeta.get(trackId);\n    assert(trackMeta.ptr + trackMeta.length < this.byteLength);\n    this.seek(trackMeta.ptr);\n    return this.readBytes(trackMeta.length);\n  }\n  \n  /** \n   * Get the decoded audio data for a given track, using the track's native samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  decodeAudioTrack(trackId: FlipnoteAudioTrack) {\n    // note this doesn't resample\n    // decode a 4 bit IMA adpcm audio track\n    // https://github.com/Flipnote-Collective/flipnote-studio-docs/wiki/PPM-format#sound-data\n    const src = this.getAudioTrackRaw(trackId);\n    const srcSize = src.length;\n    const dst = new Int16Array(srcSize * 2);\n    let srcPtr = 0;\n    let dstPtr = 0;\n    let sample = 0;\n    let stepIndex = 0;\n    let predictor = 0;\n    let lowNibble = true;\n    while (srcPtr < srcSize) {\n      // switch between high and low nibble each loop iteration\n      // increments srcPtr after every high nibble\n      if (lowNibble)\n        sample = src[srcPtr] & 0xF;\n      else\n        sample = src[srcPtr++] >> 4;\n      lowNibble = !lowNibble;\n      const step = ADPCM_STEP_TABLE[stepIndex];\n      let diff = step >> 3;\n      if (sample & 1)\n        diff += step >> 2;\n      if (sample & 2)\n        diff += step >> 1;\n      if (sample & 4)\n        diff += step;\n      if (sample & 8)\n        diff = -diff;\n      predictor += diff;\n      predictor = clamp(predictor, -32768, 32767);\n      stepIndex += ADPCM_INDEX_TABLE_4BIT[sample];\n      stepIndex = clamp(stepIndex, 0, 88);\n      dst[dstPtr++] = predictor;\n    }\n    return dst;\n  }\n\n  /** \n   * Get the decoded audio data for a given track, using the specified samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  getAudioTrackPcm(trackId: FlipnoteAudioTrack, dstFreq = this.sampleRate) {\n    const srcPcm = this.decodeAudioTrack(trackId);\n    let srcFreq = this.rawSampleRate;\n    if (trackId === FlipnoteAudioTrack.BGM) {\n      const bgmAdjust = (1 / this.bgmrate) / (1 / this.framerate);\n      srcFreq = this.rawSampleRate * bgmAdjust;\n    }\n    if (srcFreq !== dstFreq)\n      return pcmResampleNearestNeighbour(srcPcm, srcFreq, dstFreq);\n    return srcPcm;\n  }\n\n  private pcmAudioMix(src: Int16Array, dst: Int16Array, dstOffset: number = 0) {\n    const srcSize = src.length;\n    const dstSize = dst.length;\n    for (let n = 0; n < srcSize; n++) {\n      if (dstOffset + n > dstSize)\n        break;\n      // half src volume\n      const samp = dst[dstOffset + n] + (src[n] / 2);\n      dst[dstOffset + n] = clamp(samp, -32768, 32767);\n    }\n  }\n\n  /** \n   * Get the full mixed audio for the Flipnote, using the specified samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  getAudioMasterPcm(dstFreq = this.sampleRate) {\n    const dstSize = Math.ceil(this.duration * dstFreq);\n    const master = new Int16Array(dstSize);\n    const hasBgm = this.hasAudioTrack(FlipnoteAudioTrack.BGM);\n    const hasSe1 = this.hasAudioTrack(FlipnoteAudioTrack.SE1);\n    const hasSe2 = this.hasAudioTrack(FlipnoteAudioTrack.SE2);\n    const hasSe3 = this.hasAudioTrack(FlipnoteAudioTrack.SE3);\n    // Mix background music\n    if (hasBgm) {\n      const bgmPcm = this.getAudioTrackPcm(FlipnoteAudioTrack.BGM, dstFreq);\n      this.pcmAudioMix(bgmPcm, master, 0);\n    }\n    // Mix sound effects\n    if (hasSe1 || hasSe2 || hasSe3) {\n      const samplesPerFrame = dstFreq / this.framerate;\n      const se1Pcm = hasSe1 ? this.getAudioTrackPcm(FlipnoteAudioTrack.SE1, dstFreq) : null;\n      const se2Pcm = hasSe2 ? this.getAudioTrackPcm(FlipnoteAudioTrack.SE2, dstFreq) : null;\n      const se3Pcm = hasSe3 ? this.getAudioTrackPcm(FlipnoteAudioTrack.SE3, dstFreq) : null;\n      const seFlags = this.decodeSoundFlags();\n      for (let frame = 0; frame < this.frameCount; frame++) {\n        const seOffset = Math.ceil(frame * samplesPerFrame);\n        const flag = seFlags[frame];\n        if (hasSe1 && flag[0])\n          this.pcmAudioMix(se1Pcm, master, seOffset);\n        if (hasSe2 && flag[1])\n          this.pcmAudioMix(se2Pcm, master, seOffset);\n        if (hasSe3 && flag[2])\n          this.pcmAudioMix(se3Pcm, master, seOffset);\n      }\n    }\n    this.audioClipRatio = pcmGetClippingRatio(master);\n    return master;\n  }\n\n  /**\n   * Get the body of the Flipnote - the data that is digested for the signature\n   * @category Verification\n   */\n  getBody() {\n    const bodyEnd = this.soundDataOffset + this.soundDataLength + 32;\n    return this.bytes.subarray(0, bodyEnd);\n  }\n\n  /**\n  * Get the Flipnote's signature data\n  * @category Verification\n  */\n  getSignature() {\n    const bodyEnd = this.soundDataOffset + this.soundDataLength + 32;\n    return this.bytes.subarray(bodyEnd, bodyEnd + 128);\n  }\n  \n  /**\n   * Verify whether this Flipnote's signature is valid\n   * @category Verification\n   */\n  async verify() {\n    const key = await rsaLoadPublicKey(PPM_PUBLIC_KEY, 'SHA-1');\n    return await rsaVerify(key, this.getSignature(), this.getBody());\n  }\n}","import { \n  FlipnoteFormat,\n  FlipnotePaletteDefinition,\n  FlipnoteAudioTrack,\n  FlipnoteSoundEffectTrack,\n  FlipnoteSoundEffectFlags,\n  FlipnoteMeta,\n  FlipnoteParserBase\n} from './FlipnoteParserBase';\n\nimport {\n  ADPCM_STEP_TABLE,\n  ADPCM_INDEX_TABLE_2BIT,\n  ADPCM_INDEX_TABLE_4BIT,\n  clamp,\n  assert,\n  assertRange,\n  pcmResampleLinear,\n  pcmGetClippingRatio,\n  pcmGetRms,\n  dateFromNintendoTimestamp,\n  timeGetNoteDuration,\n  getKwzFsidRegion,\n  isKwzDsiLibraryFsid,\n  rsaLoadPublicKey,\n  rsaVerify,\n} from '../utils';\n\n/** \n * KWZ framerates in frames per second, indexed by the in-app frame speed\n */\nconst KWZ_FRAMERATES = [.2, .5, 1, 2, 4, 6, 8, 12, 20, 24, 30];\n\n/** \n * KWZ color defines (red, green, blue, alpha)\n */\nconst KWZ_PALETTE: FlipnotePaletteDefinition = {\n  WHITE:  [0xff, 0xff, 0xff, 0xff],\n  BLACK:  [0x10, 0x10, 0x10, 0xff],\n  RED:    [0xff, 0x10, 0x10, 0xff],\n  YELLOW: [0xff, 0xe7, 0x00, 0xff],\n  GREEN:  [0x00, 0x86, 0x31, 0xff],\n  BLUE:   [0x00, 0x38, 0xce, 0xff],\n  NONE:   [0xff, 0xff, 0xff, 0x00]\n};\n\n/**\n * RSA public key used to verify that the KWZ file signature is genuine.\n * \n * This **cannot** be used to resign Flipnotes, it can only verify that they are valid\n */\nconst KWZ_PUBLIC_KEY: string = `-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuv+zHAXXvbbtRqxADDeJ\nArX2b9RMxj3T+qpRg3FnIE/jeU3tj7eoDzsMduY+D/UT9CSnP+QHYY/vf0n5lqX9\ns6ljoZAmyUuruyj1e5Bg+fkDEu/yPEPQjqhbyywCyYL4TEAOJveopUBx9fdQxUJ6\nJ4J5oCE/Im1kFrlGW+puARiHmt3mmUyNzO8bI/Jx3cGSfoOHJG1foEaQsI5aaKqA\npBqxtzvwqMhudcZtAWSyRMBMlndvkRnVTDNTfTXLOYdHShCIgnKULCTH87uLBIP/\nnsmr4/bnQz8q2rp/HyVO+0yjR6mVr0NX5APJQ+6riJmGg3t3VOldhKP7aTHDUW+h\nkQIDAQAB\n-----END PUBLIC KEY-----`;\n\n/** \n * Pre computed bitmasks for readBits; done as a slight optimisation\n * @internal\n */\nconst BITMASKS = new Uint16Array(16);\nfor (let i = 0; i < 16; i++) {\n  BITMASKS[i] = (1 << i) - 1;\n}\n\n/** \n * Every possible sequence of pixels for each 8-pixel line\n * @internal \n */\nconst KWZ_LINE_TABLE = new Uint8Array(6561 * 8);\n/** \n * Same lines as KWZ_LINE_TABLE, but the pixels are shift-rotated to the left by one place\n * @internal\n */\nconst KWZ_LINE_TABLE_SHIFT = new Uint8Array(6561 * 8);\n\n/** @internal */\nvar offset = 0;\nfor (let a = 0; a < 3; a++)\nfor (let b = 0; b < 3; b++)\nfor (let c = 0; c < 3; c++)\nfor (let d = 0; d < 3; d++)\nfor (let e = 0; e < 3; e++)\nfor (let f = 0; f < 3; f++)\nfor (let g = 0; g < 3; g++)\nfor (let h = 0; h < 3; h++)\n{\n  KWZ_LINE_TABLE.set([b, a, d, c, f, e, h, g], offset);\n  KWZ_LINE_TABLE_SHIFT.set([a, d, c, f, e, h, g, b], offset);\n  offset += 8;\n}\n\n/**\n * Commonly used lines - represents lines where all the pixels are empty, full, \n * or include a pattern produced by the paint tool, etc\n * @internal\n */\nconst KWZ_LINE_TABLE_COMMON = new Uint8Array(32 * 8);\n/** \n * Same lines as common line table, but shift-rotates one place to the left\n * @internal\n */\nconst KWZ_LINE_TABLE_COMMON_SHIFT = new Uint8Array(32 * 8);\n\n[\n  0x0000, 0x0CD0, 0x19A0, 0x02D9, 0x088B, 0x0051, 0x00F3, 0x0009,\n  0x001B, 0x0001, 0x0003, 0x05B2, 0x1116, 0x00A2, 0x01E6, 0x0012,\n  0x0036, 0x0002, 0x0006, 0x0B64, 0x08DC, 0x0144, 0x00FC, 0x0024,\n  0x001C, 0x0004, 0x0334, 0x099C, 0x0668, 0x1338, 0x1004, 0x166C\n].forEach((value, i) => {\n  const lineTablePtr = value * 8;\n  const pixels = KWZ_LINE_TABLE.subarray(lineTablePtr, lineTablePtr + 8);\n  const shiftPixels = KWZ_LINE_TABLE_SHIFT.subarray(lineTablePtr, lineTablePtr + 8);\n  KWZ_LINE_TABLE_COMMON.set(pixels, i * 8);\n  KWZ_LINE_TABLE_COMMON_SHIFT.set(shiftPixels, i * 8);\n});\n\n/** \n * KWZ section types\n * @internal\n */\nexport type KwzSectionMagic = 'KFH' | 'KTN' | 'KMC' | 'KMI' | 'KSN' | 'KIC';\n\n/** \n * KWZ section map, tracking their offset and length\n * @internal\n */\nexport type KwzSectionMap = Map<KwzSectionMagic, {\n  ptr: number, \n  length: number\n}>;\n\n/** \n * KWZ file metadata, stores information about its playback, author details, etc\n */\nexport interface KwzMeta extends FlipnoteMeta {\n  /** Date representing when the file was created */\n  creationTimestamp: Date;\n};\n\n/** \n * KWZ frame metadata, stores information about each frame, like layer depths sound effect usage\n */\nexport interface KwzFrameMeta {\n  /** Frame flags */\n  flags: number[];\n  /** Frame layer sizes */\n  layerSize: number[];\n  /** Frame author's Flipnote Studio ID */\n  frameAuthor: string;\n  /** Frame layer 3D depths */\n  layerDepth: number[];\n  /** Frame sound */\n  soundFlags: number;\n  /** Whether this frame contains photos taken with the console's camera */\n  cameraFlag: number;\n};\n\n/** \n * KWZ parser options for enabling optimizations and other extra features\n */\nexport type KwzParserSettings = {\n  /** \n   * Skip full metadata parsing for quickness\n   */\n  quickMeta: boolean;\n  /** \n   * Apply special cases for DSi library notes\n   */ \n  dsiLibraryNote: boolean;\n  /** \n   * Automatically crop out the border around any frames\n   */ \n  borderCrop: boolean;\n  /**\n   * Nintendo messed up the initial adpcm state for a bunch of the PPM to KWZ conversions on DSi Library. They are effectively random.\n   * By default flipnote.js will try to make a best guess, but you can disable this and provide your own state values\n   * \n   * This is only enabled if `dsiLibraryNote` is also set to `true`\n   */\n  guessInitialBgmState: boolean;\n  /**\n   * Manually provide the initial adpcm step index for the BGM track.\n   * \n   * This is only enabled if `dsiLibraryNote` is also set to `true`\n   */\n  initialBgmStepIndex: number | null;\n  /**\n   * Manually provide the initial adpcm predictor for the BGM track.\n   * \n   * This is only enabled if `dsiLibraryNote` is also set to `true`\n   */\n  initialBgmPredictor: number | null;\n  /**\n   * Manually provide an initial adpcm step index for each sound effect track.\n   * \n   * This is only enabled if `dsiLibraryNote` is also set to `true`\n   */\n  initialSeStepIndices: number[] | null;\n  /**\n   * Manually provide an initial adpcm predictor for each sound effect track.\n   * \n   * This is only enabled if `dsiLibraryNote` is also set to `true`\n   */\n  initialSePredictors: number[] | null;\n};\n\n/** \n * Parser class for Flipnote Studio 3D's KWZ animation format\n * \n * KWZ format docs: https://github.com/Flipnote-Collective/flipnote-studio-3d-docs/wiki/KWZ-Format\n * @category File Parser\n */\nexport class KwzParser extends FlipnoteParserBase {\n\n  /** Default KWZ parser settings */\n  static defaultSettings: KwzParserSettings = {\n    quickMeta: false,\n    dsiLibraryNote: false,\n    borderCrop: false,\n    guessInitialBgmState: true,\n    initialBgmPredictor: null,\n    initialBgmStepIndex: null,\n    initialSePredictors: null,\n    initialSeStepIndices: null,\n  };\n  /** File format type */\n  static format = FlipnoteFormat.KWZ;\n  /** Animation frame width */\n  static width = 320;\n  /** Animation frame height */\n  static height = 240;\n  /** Animation frame aspect ratio */\n  static aspect = 3 / 4;\n  /** Number of animation frame layers */\n  static numLayers = 3;\n  /** Number of colors per layer (aside from transparent) */\n  static numLayerColors = 2;\n  /** Audio track base sample rate */\n  static rawSampleRate = 16364;\n  /** Audio output sample rate  */\n  static sampleRate = 32768;\n  /** Which audio tracks are available in this format */\n  static audioTracks = [\n    FlipnoteAudioTrack.BGM,\n    FlipnoteAudioTrack.SE1,\n    FlipnoteAudioTrack.SE2,\n    FlipnoteAudioTrack.SE3,\n    FlipnoteAudioTrack.SE4,\n  ];\n  /** Which sound effect tracks are available in this format */\n  static soundEffectTracks = [\n    FlipnoteSoundEffectTrack.SE1,\n    FlipnoteSoundEffectTrack.SE2,\n    FlipnoteSoundEffectTrack.SE3,\n    FlipnoteSoundEffectTrack.SE4,\n  ];\n  /** Global animation frame color palette */\n  static globalPalette = [\n    KWZ_PALETTE.WHITE,\n    KWZ_PALETTE.BLACK,\n    KWZ_PALETTE.RED,\n    KWZ_PALETTE.YELLOW,\n    KWZ_PALETTE.GREEN,\n    KWZ_PALETTE.BLUE,\n    KWZ_PALETTE.NONE,\n  ];\n  /** Public key used for Flipnote verification, in PEM format */\n  static publicKey = KWZ_PUBLIC_KEY;\n  \n  /** File format type, reflects {@link KwzParser.format} */\n  format = FlipnoteFormat.KWZ;\n  /** Custom object tag */\n  [Symbol.toStringTag] = 'Flipnote Studio 3D KWZ animation file';\n  /** Animation frame width, reflects {@link KwzParser.width} */\n  imageWidth = KwzParser.width;\n  /** Animation frame height, reflects {@link KwzParser.height} */\n  imageHeight = KwzParser.height;\n  /** Animation frame aspect ratio, reflects {@link KwzParser.aspect} */\n  aspect = KwzParser.aspect;\n  /** X offset for the top-left corner of the animation frame */\n  imageOffsetX = 0;\n  /** Y offset for the top-left corner of the animation frame */\n  imageOffsetY = 0;\n  /** Number of animation frame layers, reflects {@link KwzParser.numLayers} */\n  numLayers = KwzParser.numLayers;\n  /** Number of colors per layer (aside from transparent), reflects {@link KwzParser.numLayerColors} */\n  numLayerColors = KwzParser.numLayerColors;\n  /** key used for Flipnote verification, in PEM format */\n  publicKey = KwzParser.publicKey;\n  /** @internal */\n  srcWidth = KwzParser.width;\n  /** Which audio tracks are available in this format, reflects {@link KwzParser.audioTracks} */\n  audioTracks = KwzParser.audioTracks;\n  /** Which sound effect tracks are available in this format, reflects {@link KwzParser.soundEffectTracks} */\n  soundEffectTracks = KwzParser.soundEffectTracks;\n  /** Audio track base sample rate, reflects {@link KwzParser.rawSampleRate} */\n  rawSampleRate = KwzParser.rawSampleRate;\n  /** Audio output sample rate, reflects {@link KwzParser.sampleRate} */\n  sampleRate = KwzParser.sampleRate;\n  /** Global animation frame color palette, reflects {@link KwzParser.globalPalette} */\n  globalPalette = KwzParser.globalPalette;\n  /** File metadata, see {@link KwzMeta} for structure */\n  meta: KwzMeta;\n\n  private settings: KwzParserSettings;\n  private sectionMap: KwzSectionMap;\n  private bodyEndOffset: number;\n  private layerBuffers: [Uint8Array, Uint8Array, Uint8Array];\n  private soundFlags: boolean[][]; // sound effect flag cache\n  private prevDecodedFrame: number = null;\n  // private frameMeta: Map<number, KwzFrameMeta>;\n  private frameMetaOffsets: Uint32Array;\n  private frameDataOffsets: Uint32Array;\n  private frameLayerSizes: [number, number, number][];\n  private bitIndex = 0;\n  private bitValue = 0;\n  \n  /**\n   * Create a new KWZ file parser instance\n   * @param arrayBuffer an ArrayBuffer containing file data\n   * @param settings parser settings\n   */\n  constructor(arrayBuffer: ArrayBuffer, settings: Partial<KwzParserSettings> = {}) {\n    super(arrayBuffer);\n    this.settings = {...KwzParser.defaultSettings, ...settings};\n    this.layerBuffers = [\n      new Uint8Array(KwzParser.width * KwzParser.height),\n      new Uint8Array(KwzParser.width * KwzParser.height),\n      new Uint8Array(KwzParser.width * KwzParser.height),\n    ];\n    // skip through the file and read all of the section headers so we can locate them\n    this.buildSectionMap();\n    // if the KIC section is present, we're dealing with a folder icon\n    // these are single-frame KWZs without a KFH section for metadata, or a KSN section for sound\n    // while the data for a full frame (320*240) is present, only the top-left 24*24 pixels are used\n    if (this.sectionMap.has('KIC')) {\n      this.isFolderIcon = true;\n      // icons still use the full 320 * 240 frame size, so we just set up our image crop to deal with that\n      this.imageWidth = 24;\n      this.imageHeight = 24;\n      this.frameCount = 1;\n      this.frameSpeed = 0;\n      this.framerate = KWZ_FRAMERATES[0];\n      this.thumbFrameIndex = 0;\n      this.getFrameOffsets();\n    }\n    // if the KSN section is not present, then this is a handwritten comment from the Flipnote Gallery World online service\n    // these are single-frame KWZs, just with no sound\n    else if (!this.sectionMap.has('KSN')) {\n      this.isComment = true; \n      this.decodeMeta();\n      this.getFrameOffsets();\n    }\n    // else let's assume this is a regular note\n    else {\n      this.decodeMeta();\n      this.getFrameOffsets();\n      this.decodeSoundHeader();\n    }\n\n    // apply special optimizations for converted DSi library notes\n    if (this.settings.dsiLibraryNote) {\n      this.isDsiLibraryNote = true;\n    }\n    \n    // automatically crop out the border around every frame\n    if (this.settings.borderCrop) {\n      // dsi library notes can be cropped to their original resolution\n      if (this.isDsiLibraryNote) {\n        this.imageOffsetX = 32;\n        this.imageOffsetY = 24;\n        this.imageWidth = 256;\n        this.imageHeight = 192;\n      }\n      // even standard notes have a bit of a border...\n      else if (!this.isFolderIcon) {\n        this.imageOffsetX = 5;\n        this.imageOffsetY = 5;\n        this.imageWidth = 310;\n        this.imageHeight = 230;\n      }\n    }\n  }\n  \n  private buildSectionMap() {\n    const fileSize = this.byteLength - 256;\n    const sectionMap = new Map();\n    let sectionCount = 0;\n    let ptr = 0;\n    // counting sections should mitigate against one of mrnbayoh's notehax exploits\n    while (ptr < fileSize && sectionCount < 6) {\n      this.seek(ptr);\n      const magic = this.readChars(4).substring(0, 3) as KwzSectionMagic;\n      const length = this.readUint32();\n      sectionMap.set(magic, { ptr, length });\n      ptr += length + 8;\n      sectionCount += 1;\n    }\n    this.bodyEndOffset = ptr;\n    this.sectionMap = sectionMap;\n    assert(sectionMap.has('KMC') && sectionMap.has('KMI'));\n  }\n\n  private readBits(num: number) {\n    // assert(num < 16);\n    if (this.bitIndex + num > 16) {\n      const nextBits = this.readUint16();\n      this.bitValue |= nextBits << (16 - this.bitIndex);\n      this.bitIndex -= 16;\n    }\n    const result = this.bitValue & BITMASKS[num];\n    this.bitValue >>= num;\n    this.bitIndex += num;\n    return result;\n  }\n\n  private readFsid() {\n    if (this.settings.dsiLibraryNote) { // format as DSi PPM FSID\n      const hex = this.readHex(10, true);\n      return hex.slice(2, 18);\n    }\n    const hex = this.readHex(10);\n    return `${hex.slice(0, 4)}-${hex.slice(4, 8)}-${hex.slice(8, 12)}-${hex.slice(12, 18)}`.toLowerCase();\n  }\n\n  private readFilename() {\n    const ptr = this.pointer;\n    const chars = this.readChars(28);\n    if (chars.length === 28)\n      return chars;\n    // Otherwise, this is likely a DSi Library note, \n    // where sometimes Nintendo's buggy PPM converter includes the original packed PPM filename\n    this.seek(ptr);\n    const mac = this.readHex(3);\n    const random = this.readChars(13);\n    const edits = this.readUint16().toString().padStart(3, '0');\n    this.seek(ptr + 28);\n    return `${ mac }_${ random }_${ edits }`;\n  }\n\n  private decodeMeta() {\n    if (this.settings.quickMeta)\n      return this.decodeMetaQuick();\n    assert(this.sectionMap.has('KFH'));\n    this.seek(this.sectionMap.get('KFH').ptr + 12);\n    const creationTime = dateFromNintendoTimestamp(this.readUint32());\n    const modifiedTime = dateFromNintendoTimestamp(this.readUint32());\n    // const simonTime = \n    const appVersion = this.readUint32();\n    const rootAuthorId = this.readFsid();\n    const parentAuthorId = this.readFsid();\n    const currentAuthorId = this.readFsid();\n    const rootAuthorName = this.readWideChars(11);\n    const parentAuthorName = this.readWideChars(11);\n    const currentAuthorName = this.readWideChars(11);\n    const rootFilename = this.readFilename();\n    const parentFilename = this.readFilename();\n    const currentFilename = this.readFilename();\n    const frameCount = this.readUint16();\n    const thumbIndex = this.readUint16();\n    const flags = this.readUint16();\n    const frameSpeed = this.readUint8();\n    const layerFlags = this.readUint8();\n    this.isSpinoff = (currentAuthorId !== parentAuthorId) || (currentAuthorId !== rootAuthorId);\n    this.frameCount = frameCount;\n    this.frameSpeed = frameSpeed;\n    this.framerate = KWZ_FRAMERATES[frameSpeed];\n    this.duration = timeGetNoteDuration(this.frameCount, this.framerate);\n    this.thumbFrameIndex = thumbIndex;\n    this.layerVisibility = {\n      1: (layerFlags & 0x1) === 0,\n      2: (layerFlags & 0x2) === 0,\n      3: (layerFlags & 0x3) === 0,\n    };\n    // Try to auto-detect whether the current author ID matches a converted PPM ID\n    // if (isKwzDsiLibraryFsid(currentAuthorId)) {\n    //   this.isDsiLibraryNote = true;\n    // }\n    this.meta = {\n      lock: (flags & 0x1) !== 0,\n      loop: (flags & 0x2) !== 0,\n      isSpinoff: this.isSpinoff,\n      frameCount: frameCount,\n      frameSpeed: frameSpeed,\n      duration: this.duration,\n      thumbIndex: thumbIndex,\n      timestamp: modifiedTime,\n      creationTimestamp: creationTime,\n      root: {\n        username: rootAuthorName,\n        fsid: rootAuthorId,\n        region: getKwzFsidRegion(rootAuthorId),\n        filename: rootFilename,\n        isDsiFilename: rootFilename.length !== 28\n      },\n      parent: {\n        username: parentAuthorName,\n        fsid: parentAuthorId,\n        region: getKwzFsidRegion(parentAuthorId),\n        filename: parentFilename,\n        isDsiFilename: parentFilename.length !== 28\n      },\n      current: {\n        username: currentAuthorName,\n        fsid: currentAuthorId,\n        region: getKwzFsidRegion(currentAuthorId),\n        filename: currentFilename,\n        isDsiFilename: currentFilename.length !== 28\n      },\n    };\n  }\n\n  private decodeMetaQuick() {\n    assert(this.sectionMap.has('KFH'));\n    this.seek(this.sectionMap.get('KFH').ptr + 0x8 + 0xC4);\n    const frameCount = this.readUint16();\n    const thumbFrameIndex = this.readUint16();\n    const flags = this.readUint16();\n    const frameSpeed = this.readUint8();\n    const layerFlags = this.readUint8();\n    this.frameCount = frameCount;\n    this.thumbFrameIndex = thumbFrameIndex;\n    this.frameSpeed = frameSpeed;\n    this.framerate = KWZ_FRAMERATES[frameSpeed];\n    this.duration = timeGetNoteDuration(this.frameCount, this.framerate);\n    this.layerVisibility = {\n      1: (layerFlags & 0x1) === 0,\n      2: (layerFlags & 0x2) === 0,\n      3: (layerFlags & 0x3) === 0,\n    };\n  }\n\n  private getFrameOffsets() {\n    assert(this.sectionMap.has('KMI') && this.sectionMap.has('KMC'));\n    const numFrames = this.frameCount;\n    const kmiSection = this.sectionMap.get('KMI');\n    const kmcSection = this.sectionMap.get('KMC');\n    assert(kmiSection.length / 28 >= numFrames);\n    const frameMetaOffsets = new Uint32Array(numFrames);\n    const frameDataOffsets = new Uint32Array(numFrames);\n    const frameLayerSizes: [number, number, number][] = [];\n    let frameMetaPtr = kmiSection.ptr + 8;\n    let frameDataPtr = kmcSection.ptr + 12;\n    for (let frameIndex = 0; frameIndex < numFrames; frameIndex++) {\n      this.seek(frameMetaPtr + 4);\n      const layerASize = this.readUint16();\n      const layerBSize = this.readUint16();\n      const layerCSize = this.readUint16();\n      frameMetaOffsets[frameIndex] = frameMetaPtr\n      frameDataOffsets[frameIndex] = frameDataPtr;\n      frameMetaPtr += 28;\n      frameDataPtr += layerASize + layerBSize + layerCSize;\n      assert(frameMetaPtr < this.byteLength, `frame${ frameIndex } meta pointer out of bounds`);\n      assert(frameDataPtr < this.byteLength, `frame${ frameIndex } data pointer out of bounds`);\n      frameLayerSizes.push([layerASize, layerBSize, layerCSize]);\n    }\n    this.frameMetaOffsets = frameMetaOffsets;\n    this.frameDataOffsets = frameDataOffsets;\n    this.frameLayerSizes = frameLayerSizes;\n  }\n\n  private decodeSoundHeader() {\n    assert(this.sectionMap.has('KSN'));\n    let ptr = this.sectionMap.get('KSN').ptr + 8;\n    this.seek(ptr);\n    this.bgmSpeed = this.readUint32();\n    assert(this.bgmSpeed <= 10);\n    this.bgmrate = KWZ_FRAMERATES[this.bgmSpeed];\n    const trackSizes = new Uint32Array(this.buffer, ptr + 4, 20);\n    const soundMeta = new Map();\n    soundMeta.set(FlipnoteAudioTrack.BGM, {ptr: ptr += 28,            length: trackSizes[0]});\n    soundMeta.set(FlipnoteAudioTrack.SE1, {ptr: ptr += trackSizes[0], length: trackSizes[1]});\n    soundMeta.set(FlipnoteAudioTrack.SE2, {ptr: ptr += trackSizes[1], length: trackSizes[2]});\n    soundMeta.set(FlipnoteAudioTrack.SE3, {ptr: ptr += trackSizes[2], length: trackSizes[3]});\n    soundMeta.set(FlipnoteAudioTrack.SE4, {ptr: ptr += trackSizes[3], length: trackSizes[4]});\n    this.soundMeta = soundMeta;\n  }\n\n  /** \n   * Get the color palette indices for a given frame. RGBA colors for these values can be indexed from {@link KwzParser.globalPalette}\n   * \n   * Returns an array where:\n   *  - index 0 is the paper color index\n   *  - index 1 is the layer A color 1 index\n   *  - index 2 is the layer A color 2 index\n   *  - index 3 is the layer B color 1 index\n   *  - index 4 is the layer B color 2 index\n   *  - index 5 is the layer C color 1 index\n   *  - index 6 is the layer C color 2 index\n   * @category Image\n  */\n  getFramePaletteIndices(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameMetaOffsets[frameIndex]);\n    const flags = this.readUint32();\n    return [\n      flags & 0xF,\n      (flags >> 8) & 0xF,\n      (flags >> 12) & 0xF,\n      (flags >> 16) & 0xF,\n      (flags >> 20) & 0xF,\n      (flags >> 24) & 0xF,\n      (flags >> 28) & 0xF,\n    ];\n  }\n\n  /**\n   * Get the RGBA colors for a given frame\n   * \n   * Returns an array where:\n   *  - index 0 is the paper color\n   *  - index 1 is the layer A color 1\n   *  - index 2 is the layer A color 2\n   *  - index 3 is the layer B color 1\n   *  - index 4 is the layer B color 2\n   *  - index 5 is the layer C color 1\n   *  - index 6 is the layer C color 2\n   * @category Image\n  */\n  getFramePalette(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    const indices = this.getFramePaletteIndices(frameIndex);\n    return indices.map(colorIndex => this.globalPalette[colorIndex]);\n  }\n\n  private getFrameDiffingFlag(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameMetaOffsets[frameIndex]);\n    const flags = this.readUint32();\n    return (flags >> 4) & 0x07;\n  }\n\n  private getFrameLayerSizes(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameMetaOffsets[frameIndex] + 0x4);\n    return [\n      this.readUint16(),\n      this.readUint16(),\n      this.readUint16()\n    ];\n  }\n\n  private getFrameLayerDepths(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameMetaOffsets[frameIndex] + 0x14);\n    const a = [\n      this.readUint8(),\n      this.readUint8(),\n      this.readUint8()\n    ];\n    return a;\n  }\n\n  private getFrameAuthor(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameMetaOffsets[frameIndex] + 0xA);\n    return this.readFsid();\n  }\n\n  private decodeFrameSoundFlags(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    this.seek(this.frameMetaOffsets[frameIndex] + 0x17);\n    const soundFlags = this.readUint8();\n    return [\n      (soundFlags & 0x1) !== 0,\n      (soundFlags & 0x2) !== 0,\n      (soundFlags & 0x4) !== 0,\n      (soundFlags & 0x8) !== 0,\n    ];\n  }\n\n  private getFrameCameraFlags(frameIndex: number) {\n    this.seek(this.frameMetaOffsets[frameIndex] + 0x1A);\n    const cameraFlags = this.readUint8();\n    return [\n      (cameraFlags & 0x1) !== 0,\n      (cameraFlags & 0x2) !== 0,\n      (cameraFlags & 0x4) !== 0,\n    ];\n  }\n\n  /** \n   * Get the layer draw order for a given frame\n   * @category Image\n   * @returns Array of layer indexes, in the order they should be drawn\n  */\n  getFrameLayerOrder(frameIndex: number) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    const depths = this.getFrameLayerDepths(frameIndex);\n    return [2, 1, 0].sort((a, b) => depths[b] - depths[a]);\n  }\n\n  /** \n   * Decode a frame, returning the raw pixel buffers for each layer\n   * @category Image\n  */\n  decodeFrame(frameIndex: number, diffingFlag = 0x7, isPrevFrame = false) {\n    assertRange(frameIndex, 0, this.frameCount - 1, 'Frame index');\n    // return existing layer buffers if no new frame has been decoded since the last call\n    if (this.prevDecodedFrame === frameIndex)\n      return this.layerBuffers;\n    // the prevDecodedFrame check is an optimization for decoding frames in full sequence\n    if (this.prevDecodedFrame !== frameIndex - 1 && frameIndex !== 0) {\n      // if this frame is being decoded as a prev frame, then we only want to decode the layers necessary\n      // diffingFlag is negated with ~ so if no layers are diff-based, diffingFlag is 0\n      if (isPrevFrame)\n        diffingFlag = diffingFlag & ~this.getFrameDiffingFlag(frameIndex + 1);\n      // if diffing flag isn't 0, decode the previous frame before this one\n      if (diffingFlag !== 0)\n        this.decodeFrame(frameIndex - 1, diffingFlag, true);\n    }\n    \n    let framePtr = this.frameDataOffsets[frameIndex];\n    const layerSizes = this.frameLayerSizes[frameIndex];\n\n    for (let layerIndex = 0; layerIndex < 3; layerIndex++) {\n      // dsi gallery conversions don't use the third layer, so it can be skipped if this is set\n      if (this.settings.dsiLibraryNote && layerIndex === 3)\n        break;\n\n      this.seek(framePtr);\n      let layerSize = layerSizes[layerIndex];\n      framePtr += layerSize;\n      const pixelBuffer = this.layerBuffers[layerIndex];\n\n      // if the layer is 38 bytes then it hasn't changed at all since the previous frame, so we can skip it\n      if (layerSize === 38)\n        continue;\n\n      // if this layer doesn't need to be decoded for diffing\n      if (((diffingFlag >> layerIndex) & 0x1) === 0)\n        continue;\n\n      // reset readbits state\n      this.bitIndex = 16;\n      this.bitValue = 0;\n\n      // tile skip counter\n      let skipTileCounter = 0;\n\n      for (let tileOffsetY = 0; tileOffsetY < 240; tileOffsetY += 128) {\n        for (let tileOffsetX = 0; tileOffsetX < 320; tileOffsetX += 128) {\n          // loop small tiles\n          for (let subTileOffsetY = 0; subTileOffsetY < 128; subTileOffsetY += 8) {\n            const y = tileOffsetY + subTileOffsetY;\n            if (y >= 240)\n              break;\n\n            for (let subTileOffsetX = 0; subTileOffsetX < 128; subTileOffsetX += 8) {\n              const x = tileOffsetX + subTileOffsetX;\n              if (x >= 320)\n                break;\n\n              // continue to next tile loop if skipTileCounter is > 0\n              if (skipTileCounter > 0) {\n                skipTileCounter -= 1;\n                continue;\n              }\n\n              let pixelBufferPtr = y * KwzParser.width + x;\n              const tileType = this.readBits(3);\n\n              if (tileType === 0) {\n                const linePtr = this.readBits(5) * 8;\n                const pixels = KWZ_LINE_TABLE_COMMON.subarray(linePtr, linePtr + 8);\n                pixelBuffer.set(pixels, pixelBufferPtr);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n              } \n\n              else if (tileType === 1) {\n                const linePtr = this.readBits(13) * 8;\n                const pixels = KWZ_LINE_TABLE.subarray(linePtr, linePtr + 8);\n                pixelBuffer.set(pixels, pixelBufferPtr);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n                pixelBuffer.set(pixels, pixelBufferPtr += 320);\n              } \n              \n              else if (tileType === 2) {\n                const linePtr = this.readBits(5) * 8;\n                const a = KWZ_LINE_TABLE_COMMON.subarray(linePtr, linePtr + 8);\n                const b = KWZ_LINE_TABLE_COMMON_SHIFT.subarray(linePtr, linePtr + 8);\n                pixelBuffer.set(a, pixelBufferPtr);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n                pixelBuffer.set(a, pixelBufferPtr += 320);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n                pixelBuffer.set(a, pixelBufferPtr += 320);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n                pixelBuffer.set(a, pixelBufferPtr += 320);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n              } \n              \n              else if (tileType === 3) {\n                const linePtr = this.readBits(13) * 8;\n                const a = KWZ_LINE_TABLE.subarray(linePtr, linePtr + 8);\n                const b = KWZ_LINE_TABLE_SHIFT.subarray(linePtr, linePtr + 8);\n                pixelBuffer.set(a, pixelBufferPtr);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n                pixelBuffer.set(a, pixelBufferPtr += 320);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n                pixelBuffer.set(a, pixelBufferPtr += 320);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n                pixelBuffer.set(a, pixelBufferPtr += 320);\n                pixelBuffer.set(b, pixelBufferPtr += 320);\n              }\n\n              // most common tile type\n              else if (tileType === 4) {\n                const flags = this.readBits(8);\n                for (let mask = 1; mask < 0xFF; mask <<= 1) {\n                  if (flags & mask) {\n                    const linePtr = this.readBits(5) * 8;\n                    const pixels = KWZ_LINE_TABLE_COMMON.subarray(linePtr, linePtr + 8);\n                    pixelBuffer.set(pixels, pixelBufferPtr);\n                  }\n                  else {\n                    const linePtr = this.readBits(13) * 8;\n                    const pixels = KWZ_LINE_TABLE.subarray(linePtr, linePtr + 8);\n                    pixelBuffer.set(pixels, pixelBufferPtr);\n                  }\n                  pixelBufferPtr += 320;\n                }\n              }\n\n              else if (tileType === 5) {\n                skipTileCounter = this.readBits(5);\n                continue;\n              }\n\n              // type 6 doesnt exist\n\n              else if (tileType === 7) {\n                let pattern = this.readBits(2);\n                let useCommonLines = this.readBits(1);\n                let a, b;\n\n                if (useCommonLines !== 0) {\n                  const linePtrA = this.readBits(5) * 8;\n                  const linePtrB = this.readBits(5) * 8;\n                  a = KWZ_LINE_TABLE_COMMON.subarray(linePtrA, linePtrA + 8);\n                  b = KWZ_LINE_TABLE_COMMON.subarray(linePtrB, linePtrB + 8);\n                  pattern += 1;\n                } \n                else {\n                  const linePtrA = this.readBits(13) * 8;\n                  const linePtrB = this.readBits(13) * 8;\n                  a = KWZ_LINE_TABLE.subarray(linePtrA, linePtrA + 8);\n                  b = KWZ_LINE_TABLE.subarray(linePtrB, linePtrB + 8);\n                }\n\n                switch (pattern % 4) {\n                  case 0:\n                    pixelBuffer.set(a, pixelBufferPtr);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    break;\n                  case 1:\n                    pixelBuffer.set(a, pixelBufferPtr);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    break;\n                  case 2:\n                    pixelBuffer.set(a, pixelBufferPtr);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    break;\n                  case 3:\n                    pixelBuffer.set(a, pixelBufferPtr);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    pixelBuffer.set(a, pixelBufferPtr += 320);\n                    pixelBuffer.set(b, pixelBufferPtr += 320);\n                    break;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    this.prevDecodedFrame = frameIndex;\n    return this.layerBuffers;\n  }\n\n  /** \n   * Get the sound effect flags for every frame in the Flipnote\n   * @category Audio\n  */\n  decodeSoundFlags() {\n    if (this.soundFlags !== undefined)\n      return this.soundFlags;\n    this.soundFlags = new Array(this.frameCount)\n      .fill(false)\n      .map((_, i) => this.decodeFrameSoundFlags(i))\n    return this.soundFlags;\n  }\n\n  /**\n   * Get the sound effect usage flags for every frame\n   * @category Audio\n   */\n  getSoundEffectFlags(): FlipnoteSoundEffectFlags[] {\n    return this.decodeSoundFlags().map((frameFlags) => ({\n      [FlipnoteSoundEffectTrack.SE1]: frameFlags[0],\n      [FlipnoteSoundEffectTrack.SE2]: frameFlags[1],\n      [FlipnoteSoundEffectTrack.SE3]: frameFlags[2],\n      [FlipnoteSoundEffectTrack.SE4]: frameFlags[3],\n    }));  \n  }\n\n  /**\n   * Get the sound effect usage for a given frame\n   * @param frameIndex\n   * @category Audio\n   */\n  getFrameSoundEffectFlags(frameIndex: number): FlipnoteSoundEffectFlags {\n    const frameFlags = this.decodeFrameSoundFlags(frameIndex);\n    return {\n      [FlipnoteSoundEffectTrack.SE1]: frameFlags[0],\n      [FlipnoteSoundEffectTrack.SE2]: frameFlags[1],\n      [FlipnoteSoundEffectTrack.SE3]: frameFlags[2],\n      [FlipnoteSoundEffectTrack.SE4]: frameFlags[3],\n    };\n  }\n\n  /** \n   * Get the raw compressed audio data for a given track\n   * @returns Byte array\n   * @category Audio\n  */\n  getAudioTrackRaw(trackId: FlipnoteAudioTrack) {\n    const trackMeta = this.soundMeta.get(trackId);\n    assert(trackMeta.ptr + trackMeta.length < this.byteLength);\n    return new Uint8Array(this.buffer, trackMeta.ptr, trackMeta.length);\n  }\n\n  private decodeAdpcm(src: Uint8Array, dst: Int16Array, predictor = 0, stepIndex = 0) {\n    const srcSize = src.length;\n    let dstPtr = 0;\n    let sample = 0;\n    let step = 0;\n    let diff = 0;\n    // loop through each byte in the raw adpcm data\n    for (let srcPtr = 0; srcPtr < srcSize; srcPtr++) {\n      let currByte = src[srcPtr];\n      let currBit = 0;\n      while (currBit < 8) {\n        // 2 bit sample\n        if (stepIndex < 18 || currBit > 4) {\n          sample = currByte & 0x3;\n          step = ADPCM_STEP_TABLE[stepIndex];\n          diff = step >> 3;\n          if (sample & 1)\n            diff += step;\n          if (sample & 2)\n            diff = -diff;\n          predictor += diff;\n          stepIndex += ADPCM_INDEX_TABLE_2BIT[sample];\n          currByte >>= 2;\n          currBit += 2;\n        }\n        // 4 bit sample\n        else {\n          sample = currByte & 0xf;\n          step = ADPCM_STEP_TABLE[stepIndex];\n          diff = step >> 3;\n          if (sample & 1) \n            diff += step >> 2;\n          if (sample & 2) \n            diff += step >> 1;\n          if (sample & 4)\n            diff += step;\n          if (sample & 8)\n            diff = -diff;\n          predictor += diff;\n          stepIndex += ADPCM_INDEX_TABLE_4BIT[sample];\n          currByte >>= 4;\n          currBit += 4;\n        }\n        stepIndex = clamp(stepIndex, 0, 79);\n        // clamp as 12 bit then scale to 16\n        predictor = clamp(predictor, -2048, 2047);\n        dst[dstPtr] = predictor * 16;\n        dstPtr += 1;\n      }\n    }\n    return dstPtr;\n  }\n\n  /** \n   * Get the decoded audio data for a given track, using the track's native samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  decodeAudioTrack(trackId: FlipnoteAudioTrack) {\n    const settings = this.settings;\n    const src = this.getAudioTrackRaw(trackId);\n    const dstSize = this.rawSampleRate * 60; // enough for 60 seconds, the max bgm size\n    const dst = new Int16Array(dstSize);\n    // initial decoder state\n    let predictor = 0;\n    let stepIndex = 40;\n    // Nintendo messed up the initial adpcm state for a bunch of the PPM conversions on DSi Library\n    // they are effectively random, so you can optionally provide your own state values, or let the lib make a best guess\n    if (this.isDsiLibraryNote) {\n      if (trackId === FlipnoteAudioTrack.BGM) {\n        // passing an initial index or predictor value should disable bruteforcing\n        let doGuess = true;\n        // allow manual overrides for default predictor\n        if (settings.initialBgmPredictor !== null) {\n          predictor = settings.initialBgmPredictor;\n          doGuess = false;\n        }\n\n        // allow manual overrides for default step index\n        if (settings.initialBgmStepIndex !== null) {\n          stepIndex = settings.initialBgmStepIndex;\n          doGuess = false\n        }\n\n        // bruteforce step index by finding the lowest track root mean square \n        if (doGuess && settings.guessInitialBgmState) {\n          let bestRms = 0xFFFFFFFF; // arbitrarily large\n          let bestStepIndex = 0;\n          for (stepIndex = 0; stepIndex <= 40; stepIndex++) {\n            const dstPtr = this.decodeAdpcm(src, dst, predictor, stepIndex);\n            const rms = pcmGetRms(dst.subarray(0, dstPtr)); // uses same underlying memory as dst\n            if (rms < bestRms) {\n              bestRms = rms;\n              bestStepIndex = stepIndex;\n            }\n          }\n          stepIndex = bestStepIndex;\n        }\n      }\n      else {\n        const trackIndex = this.soundEffectTracks.indexOf(trackId as any);\n        // allow manual overrides for default predictor\n        if (Array.isArray(settings.initialSePredictors) && settings.initialSePredictors[trackIndex] !== undefined)\n          predictor = settings.initialSePredictors[trackIndex];\n        // allow manual overrides for default step index\n        if (Array.isArray(settings.initialSeStepIndices) && settings.initialSeStepIndices[trackIndex] !== undefined)\n          stepIndex = settings.initialSeStepIndices[trackIndex];\n      }\n    }\n    // decode track\n    const dstPtr = this.decodeAdpcm(src, dst, predictor, stepIndex);\n    // copy part of dst with slice() so dst buffer can be garbage collected\n    return dst.slice(0, dstPtr);\n  }\n\n  /** \n   * Get the decoded audio data for a given track, using the specified samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  getAudioTrackPcm(trackId: FlipnoteAudioTrack, dstFreq = this.sampleRate) {\n    const srcPcm = this.decodeAudioTrack(trackId);\n    let srcFreq = this.rawSampleRate;\n    if (trackId === FlipnoteAudioTrack.BGM) {\n      const bgmAdjust = (1 / this.bgmrate) / (1 / this.framerate);\n      srcFreq = this.rawSampleRate * bgmAdjust;\n    }\n    if (srcFreq !== dstFreq)\n      return pcmResampleLinear(srcPcm, srcFreq, dstFreq);\n\n    return srcPcm;\n  }\n\n  private pcmAudioMix(src: Int16Array, dst: Int16Array, dstOffset: number = 0) {\n    const srcSize = src.length;\n    const dstSize = dst.length;\n    for (let n = 0; n < srcSize; n++) {\n      if (dstOffset + n > dstSize)\n        break;\n      // half src volume\n      const samp = dst[dstOffset + n] + src[n];\n      dst[dstOffset + n] = clamp(samp, -32768, 32767);\n    }\n  }\n\n  /** \n   * Get the full mixed audio for the Flipnote, using the specified samplerate\n   * @returns Signed 16-bit PCM audio\n   * @category Audio\n  */\n  getAudioMasterPcm(dstFreq = this.sampleRate) {\n    const dstSize = Math.ceil(this.duration * dstFreq);\n    const master = new Int16Array(dstSize);\n    const hasBgm = this.hasAudioTrack(FlipnoteAudioTrack.BGM);\n    const hasSe1 = this.hasAudioTrack(FlipnoteAudioTrack.SE1);\n    const hasSe2 = this.hasAudioTrack(FlipnoteAudioTrack.SE2);\n    const hasSe3 = this.hasAudioTrack(FlipnoteAudioTrack.SE3);\n    const hasSe4 = this.hasAudioTrack(FlipnoteAudioTrack.SE4);\n    // Mix background music\n    if (hasBgm) {\n      const bgmPcm = this.getAudioTrackPcm(FlipnoteAudioTrack.BGM, dstFreq);\n      this.pcmAudioMix(bgmPcm, master, 0);\n    }\n    // Mix sound effects\n    if (hasSe1 || hasSe2 || hasSe3 || hasSe4) {\n      const samplesPerFrame = dstFreq / this.framerate;\n      const se1Pcm = hasSe1 ? this.getAudioTrackPcm(FlipnoteAudioTrack.SE1, dstFreq) : null;\n      const se2Pcm = hasSe2 ? this.getAudioTrackPcm(FlipnoteAudioTrack.SE2, dstFreq) : null;\n      const se3Pcm = hasSe3 ? this.getAudioTrackPcm(FlipnoteAudioTrack.SE3, dstFreq) : null;\n      const se4Pcm = hasSe4 ? this.getAudioTrackPcm(FlipnoteAudioTrack.SE4, dstFreq) : null;\n      const soundEffectFlags = this.decodeSoundFlags();\n      for (let i = 0; i < this.frameCount; i++) {\n        const seFlags = soundEffectFlags[i];\n        const seOffset = Math.ceil(i * samplesPerFrame);\n        if (hasSe1 && seFlags[0])\n          this.pcmAudioMix(se1Pcm, master, seOffset);\n        if (hasSe2 && seFlags[1])\n          this.pcmAudioMix(se2Pcm, master, seOffset);\n        if (hasSe3 && seFlags[2])\n          this.pcmAudioMix(se3Pcm, master, seOffset);\n        if (hasSe4 && seFlags[3])\n          this.pcmAudioMix(se4Pcm, master, seOffset);\n      }\n    }\n    this.audioClipRatio = pcmGetClippingRatio(master);\n    return master;\n  }\n\n  /**\n   * Get the body of the Flipnote - the data that is digested for the signature\n   * @category Verification\n   */\n  getBody() {\n    const bodyEnd = this.bodyEndOffset;\n    return this.bytes.subarray(0, bodyEnd);\n  }\n\n  /**\n   * Get the Flipnote's signature data\n   * @category Verification\n   */\n  getSignature() {\n    const bodyEnd = this.bodyEndOffset;\n    return this.bytes.subarray(bodyEnd, bodyEnd + 256);\n  }\n\n  /**\n   * Verify whether this Flipnote's signature is valid\n   * @category Verification\n   */\n  async verify() {\n    const key = await rsaLoadPublicKey(KWZ_PUBLIC_KEY, 'SHA-256');\n    return await rsaVerify(key, this.getSignature(), this.getBody());\n  }\n}","import { isBrowser } from '../utils';\nimport { LoaderDefinition } from './LoaderDefinition';\n\n/** \n * Loader for web url strings (Browser only)\n * @category Loader\n */\nconst webUrlLoader: LoaderDefinition<string> = {\n\n  matches: function(source) {\n    return isBrowser && typeof source === 'string';\n  },\n\n  load: function(source, resolve, reject) {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', source, true);\n    xhr.responseType = 'arraybuffer'; \n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4) {\n        if (xhr.status >= 200 && xhr.status < 300)\n          resolve(xhr.response);\n        else\n          reject({\n            type: 'httpError',\n            status: xhr.status,\n            statusText: xhr.statusText\n          });\n      }\n    };\n    xhr.send(null);\n  }\n\n};\n\nexport default webUrlLoader;","import { isNode, assertNodeEnv, dynamicRequire } from '../utils';\nimport { ServerResponse } from 'http';\nimport { LoaderDefinition } from './LoaderDefinition';\n\n/** \n * Loader for web url strings (Node only)\n * @category Loader\n */\nconst nodeUrlLoader: LoaderDefinition<string> = {\n\n  matches: function(source) {\n    return isNode && typeof source === 'string';\n  },\n\n  load: function(source, resolve, reject) {\n    assertNodeEnv();\n    const http = dynamicRequire(module, 'https');\n    http.get(source, (res: ServerResponse) => {\n      const chunks: Buffer[] = [];\n      res.on('data', chunk => chunks.push(chunk));\n      res.on('end', () => {\n        const buffer = Buffer.concat(chunks);\n        resolve(buffer.buffer);\n      });\n      res.on('error', (err) => reject(err));\n    });\n  }\n\n};\n\nexport default nodeUrlLoader;","import { assert, isBrowser } from '../utils';\nimport { LoaderDefinition } from './LoaderDefinition';\n\n/** \n * Loader for File objects (browser only)\n * @category Loader\n */\nconst fileLoader: LoaderDefinition<File> = {\n\n  matches: function(source) {\n    return isBrowser \n      && typeof File !== 'undefined' \n      && typeof FileReader !== 'undefined' \n      && source instanceof File;\n  },\n\n  load: function(source, resolve, reject) {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      resolve(reader.result as ArrayBuffer);\n    };\n    reader.onerror = (event) => {\n      reject({type: 'fileReadError'});\n    };\n    reader.readAsArrayBuffer(source);\n  }\n\n};\n\nexport default fileLoader;","import { isBrowser } from '../utils';\nimport { LoaderDefinition } from './LoaderDefinition';\n\n/** \n * Loader for Blob objects (browser only)\n * @category Loader\n */\nconst blobLoader: LoaderDefinition<Blob> = {\n\n  matches: function(source) {\n    return isBrowser \n      && typeof Blob !== 'undefined'\n      && typeof Response !== 'undefined'\n      && source instanceof Blob;\n  },\n\n  load: function(source, resolve, reject) {\n    // https://stackoverflow.com/questions/15341912/how-to-go-from-blob-to-arraybuffer\n    new Response(source).arrayBuffer()\n      .then(resolve)\n      .catch(reject);\n  }\n\n};\n\nexport default blobLoader;","import { isNode } from '../utils';\nimport { LoaderDefinition } from './LoaderDefinition';\n\n/** \n * Loader for Buffer objects (Node only)\n * @category Loader\n */\nconst nodeBufferLoader: LoaderDefinition<Buffer> = {\n\n  matches: function(source) {\n    return isNode && (source instanceof Buffer);\n  },\n\n  load: function(source, resolve, reject) {\n    resolve(source.buffer);\n  }\n\n};\n\nexport default nodeBufferLoader;","import { LoaderDefinition } from './LoaderDefinition';\n\n/** \n * Loader for ArrayBuffer objects\n * @category Loader\n */\nconst arrayBufferLoader: LoaderDefinition<ArrayBuffer> = {\n\n  matches: function(source) {\n    return (source instanceof ArrayBuffer);\n  },\n\n  load: function(source, resolve, reject) {\n    resolve(source);\n  }\n\n};\n\nexport default arrayBufferLoader;","import { LoaderDefinition } from './LoaderDefinition';\nimport webUrlLoader from './webUrlLoader';\nimport nodeUrlLoader from './nodeUrlLoader';\nimport fileLoader from './fileLoader';\nimport blobLoader from './blobLoader';\nimport nodeBufferLoader from './nodeBufferLoader';\nimport arrayBufferLoader from './arrayBufferLoader';\n\nexport * from './LoaderDefinition';\nexport * from './webUrlLoader';\nexport * from './nodeUrlLoader';\nexport * from './fileLoader';\nexport * from './blobLoader';\nexport * from './nodeBufferLoader';\nexport * from './arrayBufferLoader';\n\n/**\n * A list of {@link LoaderDefinition} items to use when attempting to load a Flipnote.\n * Loaders are tried in sequence until a matching one is found for the requested input.\n * @category Loader\n */\nexport type LoaderDefinitionList = LoaderDefinition<any>[];\n\n/** @category Loader */\nconst DEFAULT_LOADERS: LoaderDefinitionList = [\n  webUrlLoader,\n  nodeUrlLoader,\n  fileLoader,\n  blobLoader,\n  nodeBufferLoader,\n  arrayBufferLoader\n];\n\n/** @internal */\nexport function loadSource(source: any, loaders: LoaderDefinitionList = DEFAULT_LOADERS): Promise<ArrayBuffer> {\n  return new Promise((resolve, reject) => {\n    for (let i = 0; i < loaders.length; i++) {\n      const loader = loaders[i];\n      if (loader.matches(source))\n        return loader.load(source, resolve, reject);\n    }\n    reject('No loader available for source type');\n  });\n}","import { PpmParser } from './parsers/PpmParser';\nimport { KwzParser } from './parsers/KwzParser';\nimport { loadSource, LoaderDefinitionList } from './loaders';\n\nimport { Flipnote, FlipnoteParserSettings } from './parsers';\n\n/**\n * Source to load a Flipnote from. Depending on the operating envionment, this can be:\n * - A string representing a web URL\n * - An {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer | ArrayBuffer}\n * - A {@link https://developer.mozilla.org/en-US/docs/Web/API/File | File} object (Browser only)\n * - A {@link https://nodejs.org/api/buffer.html | Buffer} object (NodeJS only)\n */\nexport type FlipnoteSource = string | ArrayBuffer | Buffer | File;\n\n/**\n * Implements loading a Flipnote from a given source type, and returns a promise which resolves to a {@link Flipnote} parser instance.\n */\nexport type FlipnoteSourceParser<S = FlipnoteSource, D = Flipnote> = (source:S, parserConfig?: Partial<FlipnoteParserSettings>, loaders?: LoaderDefinitionList) => Promise<D>;\n\n/**\n * Load a Flipnote from a given source, returning a promise with a parser object. \n * It will auto-detect the Flipnote format and return either a {@link PpmParser} or {@link KwzParser} accordingly.\n * \n * @param source - Source to load a Flipnote from. Depending on the operating environment, this can be:\n * - A string representing a web URL\n * - An {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer | ArrayBuffer}\n * - A {@link https://developer.mozilla.org/en-US/docs/Web/API/File | File} object (Browser only)\n * - A {@link https://nodejs.org/api/buffer.html | Buffer} object (NodeJS only)\n * You can also pass your own list of loaders to support your own source types.\n * @param parserConfig - Config settings to pass to the parser, see {@link FlipnoteParserSettings}\n * @param loaders - Optional list of file loaders ({@link LoaderDefinition}) when attempting to load a Flipnote. Loaders are tried in sequence until a matching one is found for the requested input.\n */\nexport const parseSource: FlipnoteSourceParser = (source, parserConfig?, loaders?) => {\n  return loadSource(source, loaders)\n  .then((arrayBuffer: ArrayBuffer) => {\n    return new Promise((resolve, reject) => {\n      // check the buffer's magic to identify which format it uses\n      const magicBytes = new Uint8Array(arrayBuffer.slice(0, 4));\n      const magic = (magicBytes[0] << 24) | (magicBytes[1] << 16) | (magicBytes[2] << 8) | magicBytes[3];\n      // check if magic is PARA (ppm magic)\n      if (magic === 0x50415241)\n        resolve(new PpmParser(arrayBuffer, parserConfig));\n      // check if magic is KFH (kwz magic)\n      else if ((magic & 0xFFFFFF00) === 0x4B464800)\n        resolve(new KwzParser(arrayBuffer, parserConfig));\n      // check if magic is KIC (fs3d folder icon)\n      else if ((magic & 0xFFFFFF00) === 0x4B494300)\n        resolve(new KwzParser(arrayBuffer, parserConfig));\n      else\n        reject('Could not identify source as a valid Flipnote file');\n    });\n  });\n}","/** \n * Player event types\n */\nexport enum PlayerEvent {\n  __Any = 'any', // special event, gets called on everything\n  Play = 'play',\n  Pause = 'pause',\n  CanPlay = 'canplay',\n  CanPlayThrough = 'canplaythrough',\n  SeekStart = 'seeking',\n  SeekEnd = 'seeked',\n  Duration = 'durationchange',\n  Loop = 'loop',\n  Ended = 'ended',\n  VolumeChange = 'volumechange',\n  Progress = 'progress',\n  TimeUpdate = 'timeupdate',\n  FrameUpdate = 'frameupdate',\n  FrameNext = 'framenext',\n  FramePrev = 'frameprev',\n  FrameFirst = 'framefirst',\n  FrameLast = 'framelast',\n  Ready = 'ready',\n  Load = 'load',\n  LoadStart = 'loadstart',\n  LoadedData = 'loadeddata',\n  LoadedMeta = 'loadedmetadata',\n  Emptied = 'emptied',\n  Close = 'close',\n  Error = 'error',\n  Destroy = 'destroy',\n}\n\n/** @internal */\nexport type PlayerEventMap = Map<PlayerEvent, Function[]>;\n\n/** @internal */\nexport const supportedEvents: PlayerEvent[] = [\n  PlayerEvent.Play,\n  PlayerEvent.Pause,\n  PlayerEvent.CanPlay,\n  PlayerEvent.CanPlayThrough,\n  PlayerEvent.SeekStart,\n  PlayerEvent.SeekEnd,\n  PlayerEvent.Duration,\n  PlayerEvent.Loop,\n  PlayerEvent.Ended,\n  PlayerEvent.VolumeChange,\n  PlayerEvent.Progress,\n  PlayerEvent.TimeUpdate,\n  PlayerEvent.FrameUpdate,\n  PlayerEvent.FrameNext,\n  PlayerEvent.FramePrev,\n  PlayerEvent.FrameFirst,\n  PlayerEvent.FrameLast,\n  PlayerEvent.Ready,\n  PlayerEvent.Load,\n  PlayerEvent.LoadStart,\n  PlayerEvent.LoadedData,\n  PlayerEvent.LoadedMeta,\n  PlayerEvent.Emptied,\n  PlayerEvent.Close,\n  PlayerEvent.Error,\n];","/** @internal */\nexport function createTimeRanges(ranges: [number, number][]): TimeRanges {\n  return {\n    length: ranges.length,\n    start: (i: number) => ranges[i][0],\n    end: (i: number) => ranges[i][1],\n  }\n}\n\n/** @internal */\nexport function padNumber(num: number, strLength: number) {\n  return num.toString().padStart(strLength, '0');\n}\n\n/** @internal */\nexport function formatTime(seconds: number) {\n  const m = Math.floor((seconds % 3600) / 60);\n  const s = Math.floor(seconds % 60);\n  return `${ m }:${ padNumber(s, 2) }`\n}","import type { FlipnoteParserBase } from '../parsers';\n\n/** @internal */\nexport abstract class CanvasInterface {\n\n  public note: FlipnoteParserBase;\n  public width: number;\n  public height: number;\n\n  public srcWidth: number;\n  public srcHeight: number;\n  public dstWidth: number;\n  public dstHeight: number;\n  public prevFrameIndex: number;\n\n  constructor (parent: Element, width: number, height: number) {}\n\n  public abstract setCanvasSize(width: number, height: number): void\n\n  public abstract setNote(note: FlipnoteParserBase): void\n\n  public abstract clear(color?: [number, number, number, number]): void\n\n  public abstract drawFrame(frameIndex: number): void\n\n  public abstract forceUpdate(): void;\n\n  public abstract getDataUrl(type?: string, quality?: any): string\n\n  public abstract getBlob(type?: string, quality?: any): Promise<Blob>\n\n  public abstract destroy(): void\n}","/* @license twgl.js 4.21.2 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\nAvailable via the MIT license.\nsee: http://github.com/greggman/twgl.js for details */\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\n\nlet VecType = Float32Array;\n\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n * @memberOf module:twgl/v3\n */\nfunction setDefaultType(ctor) {\n  const oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @param {number} [x] Initial x value.\n * @param {number} [y] Initial y value.\n * @param {number} [z] Initial z value.\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\nfunction create(x, y, z) {\n  const dst = new VecType(3);\n  if (x) {\n    dst[0] = x;\n  }\n  if (y) {\n    dst[1] = y;\n  }\n  if (z) {\n    dst[2] = z;\n  }\n  return dst;\n}\n\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A vector tha tis the sum of a and b.\n * @memberOf module:twgl/v3\n */\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n\n  return dst;\n}\n\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A vector that is the difference of a and b.\n * @memberOf module:twgl/v3\n */\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The linear interpolated result.\n * @memberOf module:twgl/v3\n */\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} t Interpolation coefficients vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} the linear interpolated result.\n * @memberOf module:twgl/v3\n */\nfunction lerpV(a, b, t, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n  dst[2] = a[2] + t[2] * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The max components vector.\n * @memberOf module:twgl/v3\n */\nfunction max(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n  dst[2] = Math.max(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The min components vector.\n * @memberOf module:twgl/v3\n */\nfunction min(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n  dst[2] = Math.min(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The scaled vector.\n * @memberOf module:twgl/v3\n */\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n\n  return dst;\n}\n\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The scaled vector.\n * @memberOf module:twgl/v3\n */\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n\n  return dst;\n}\n\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of a cross b.\n * @memberOf module:twgl/v3\n */\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  const t1 = a[2] * b[0] - a[0] * b[2];\n  const t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n\n  return dst;\n}\n\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\nfunction dot(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\n}\n\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\nfunction length$1(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\nfunction distance(a, b) {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\nfunction distanceSq(a, b) {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n\n  const lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  const len = Math.sqrt(lenSq);\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\nfunction negate(v, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n\n  return dst;\n}\n\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\nfunction copy(v, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\nfunction multiply(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n\n  return dst;\n}\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n\n  return dst;\n}\n\nvar v3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  add: add,\n  copy: copy,\n  create: create,\n  cross: cross,\n  distance: distance,\n  distanceSq: distanceSq,\n  divide: divide,\n  divScalar: divScalar,\n  dot: dot,\n  lerp: lerp,\n  lerpV: lerpV,\n  length: length$1,\n  lengthSq: lengthSq,\n  max: max,\n  min: min,\n  mulScalar: mulScalar,\n  multiply: multiply,\n  negate: negate,\n  normalize: normalize,\n  setDefaultType: setDefaultType,\n  subtract: subtract\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nlet MatType = Float32Array;\n\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n * @memberOf module:twgl/m4\n */\nfunction setDefaultType$1(ctor) {\n  const oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\nfunction negate$1(m, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = -m[ 0];\n  dst[ 1] = -m[ 1];\n  dst[ 2] = -m[ 2];\n  dst[ 3] = -m[ 3];\n  dst[ 4] = -m[ 4];\n  dst[ 5] = -m[ 5];\n  dst[ 6] = -m[ 6];\n  dst[ 7] = -m[ 7];\n  dst[ 8] = -m[ 8];\n  dst[ 9] = -m[ 9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n\n  return dst;\n}\n\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\nfunction copy$1(m, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = m[ 0];\n  dst[ 1] = m[ 1];\n  dst[ 2] = m[ 2];\n  dst[ 3] = m[ 3];\n  dst[ 4] = m[ 4];\n  dst[ 5] = m[ 5];\n  dst[ 6] = m[ 6];\n  dst[ 7] = m[ 7];\n  dst[ 8] = m[ 8];\n  dst[ 9] = m[ 9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n\n  return dst;\n}\n\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n function transpose(m, dst) {\n  dst = dst || new MatType(16);\n  if (dst === m) {\n    let t;\n\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  dst[ 0] = m00;\n  dst[ 1] = m10;\n  dst[ 2] = m20;\n  dst[ 3] = m30;\n  dst[ 4] = m01;\n  dst[ 5] = m11;\n  dst[ 6] = m21;\n  dst[ 7] = m31;\n  dst[ 8] = m02;\n  dst[ 9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n\n  return dst;\n}\n\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n  const tmp_0  = m22 * m33;\n  const tmp_1  = m32 * m23;\n  const tmp_2  = m12 * m33;\n  const tmp_3  = m32 * m13;\n  const tmp_4  = m12 * m23;\n  const tmp_5  = m22 * m13;\n  const tmp_6  = m02 * m33;\n  const tmp_7  = m32 * m03;\n  const tmp_8  = m02 * m23;\n  const tmp_9  = m22 * m03;\n  const tmp_10 = m02 * m13;\n  const tmp_11 = m12 * m03;\n  const tmp_12 = m20 * m31;\n  const tmp_13 = m30 * m21;\n  const tmp_14 = m10 * m31;\n  const tmp_15 = m30 * m11;\n  const tmp_16 = m10 * m21;\n  const tmp_17 = m20 * m11;\n  const tmp_18 = m00 * m31;\n  const tmp_19 = m30 * m01;\n  const tmp_20 = m00 * m21;\n  const tmp_21 = m20 * m01;\n  const tmp_22 = m00 * m11;\n  const tmp_23 = m10 * m01;\n\n  const t0 = (tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31) -\n      (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  const t1 = (tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31) -\n      (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  const t2 = (tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31) -\n      (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  const t3 = (tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21) -\n      (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n\n  const d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n\n  dst[ 0] = d * t0;\n  dst[ 1] = d * t1;\n  dst[ 2] = d * t2;\n  dst[ 3] = d * t3;\n  dst[ 4] = d * ((tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30) -\n          (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[ 5] = d * ((tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30) -\n          (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[ 6] = d * ((tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30) -\n          (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[ 7] = d * ((tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20) -\n          (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[ 8] = d * ((tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33) -\n          (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[ 9] = d * ((tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33) -\n          (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * ((tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33) -\n          (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * ((tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23) -\n          (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * ((tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12) -\n          (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * ((tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22) -\n          (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * ((tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02) -\n          (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * ((tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12) -\n          (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n\n  return dst;\n}\n\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\nfunction multiply$1(a, b, dst) {\n  dst = dst || new MatType(16);\n\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[ 4 + 0];\n  const a11 = a[ 4 + 1];\n  const a12 = a[ 4 + 2];\n  const a13 = a[ 4 + 3];\n  const a20 = a[ 8 + 0];\n  const a21 = a[ 8 + 1];\n  const a22 = a[ 8 + 2];\n  const a23 = a[ 8 + 3];\n  const a30 = a[12 + 0];\n  const a31 = a[12 + 1];\n  const a32 = a[12 + 2];\n  const a33 = a[12 + 3];\n  const b00 = b[0];\n  const b01 = b[1];\n  const b02 = b[2];\n  const b03 = b[3];\n  const b10 = b[ 4 + 0];\n  const b11 = b[ 4 + 1];\n  const b12 = b[ 4 + 2];\n  const b13 = b[ 4 + 3];\n  const b20 = b[ 8 + 0];\n  const b21 = b[ 8 + 1];\n  const b22 = b[ 8 + 2];\n  const b23 = b[ 8 + 3];\n  const b30 = b[12 + 0];\n  const b31 = b[12 + 1];\n  const b32 = b[12 + 2];\n  const b33 = b[12 + 3];\n\n  dst[ 0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[ 1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[ 2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[ 3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[ 4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[ 5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[ 6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[ 7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[ 8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[ 9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n\n  return dst;\n}\n\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix with translation set.\n * @memberOf module:twgl/m4\n */\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n  if (a !== dst) {\n    dst[ 0] = a[ 0];\n    dst[ 1] = a[ 1];\n    dst[ 2] = a[ 2];\n    dst[ 3] = a[ 3];\n    dst[ 4] = a[ 4];\n    dst[ 5] = a[ 5];\n    dst[ 6] = a[ 6];\n    dst[ 7] = a[ 7];\n    dst[ 8] = a[ 8];\n    dst[ 9] = a[ 9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\nfunction getTranslation(m, dst) {\n  dst = dst || create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {module:twgl/v3.Vec3} [dst] vector.\n * @return {module:twgl/v3.Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\nfunction getAxis(m, axis, dst) {\n  dst = dst || create();\n  const off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix with axis set.\n * @memberOf module:twgl/m4\n */\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy$1(a, dst);\n  }\n  const off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n\n  const f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  const rangeInv = 1.0 / (zNear - zFar);\n\n  dst[0]  = f / aspect;\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = f;\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 orthogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  dst[0]  = 2 / (right - left);\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = 2 / (top - bottom);\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  const dx = (right - left);\n  const dy = (top - bottom);\n  const dz = (near - far);\n\n  dst[ 0] = 2 * near / dx;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 2 * near / dy;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = (left + right) / dx;\n  dst[ 9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n\n  return dst;\n}\n\nlet xAxis;\nlet yAxis;\nlet zAxis;\n\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {module:twgl/v3.Vec3} eye The position of the eye.\n * @param {module:twgl/v3.Vec3} target The position meant to be viewed.\n * @param {module:twgl/v3.Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n\n  xAxis = xAxis || create();\n  yAxis = yAxis || create();\n  zAxis = zAxis || create();\n\n  normalize(\n      subtract(eye, target, zAxis), zAxis);\n  normalize(cross(up, zAxis, xAxis), xAxis);\n  normalize(cross(zAxis, xAxis, yAxis), yAxis);\n\n  dst[ 0] = xAxis[0];\n  dst[ 1] = xAxis[1];\n  dst[ 2] = xAxis[2];\n  dst[ 3] = 0;\n  dst[ 4] = yAxis[0];\n  dst[ 5] = yAxis[1];\n  dst[ 6] = yAxis[2];\n  dst[ 7] = 0;\n  dst[ 8] = zAxis[0];\n  dst[ 9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Translates the given 4-by-4 matrix by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The translated matrix.\n * @memberOf module:twgl/m4\n */\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[ 0] = m00;\n    dst[ 1] = m01;\n    dst[ 2] = m02;\n    dst[ 3] = m03;\n    dst[ 4] = m10;\n    dst[ 5] = m11;\n    dst[ 6] = m12;\n    dst[ 7] = m13;\n    dst[ 8] = m20;\n    dst[ 9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = c;\n  dst[ 6] = s;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[4]  = c * m10 + s * m20;\n  dst[5]  = c * m11 + s * m21;\n  dst[6]  = c * m12 + s * m22;\n  dst[7]  = c * m13 + s * m23;\n  dst[8]  = c * m20 - s * m10;\n  dst[9]  = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[ 0] = m[ 0];\n    dst[ 1] = m[ 1];\n    dst[ 2] = m[ 2];\n    dst[ 3] = m[ 3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;\n  dst[ 1] = 0;\n  dst[ 2] = -s;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = s;\n  dst[ 9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 - s * m20;\n  dst[ 1] = c * m01 - s * m21;\n  dst[ 2] = c * m02 - s * m22;\n  dst[ 3] = c * m03 - s * m23;\n  dst[ 8] = c * m20 + s * m00;\n  dst[ 9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[ 4] = m[ 4];\n    dst[ 5] = m[ 5];\n    dst[ 6] = m[ 6];\n    dst[ 7] = m[ 7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;\n  dst[ 1] = s;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = -s;\n  dst[ 5] = c;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 + s * m10;\n  dst[ 1] = c * m01 + s * m11;\n  dst[ 2] = c * m02 + s * m12;\n  dst[ 3] = c * m03 + s * m13;\n  dst[ 4] = c * m10 - s * m00;\n  dst[ 5] = c * m11 - s * m01;\n  dst[ 6] = c * m12 - s * m02;\n  dst[ 7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  dst[ 0] = xx + (1 - xx) * c;\n  dst[ 1] = x * y * oneMinusCosine + z * s;\n  dst[ 2] = x * z * oneMinusCosine - y * s;\n  dst[ 3] = 0;\n  dst[ 4] = x * y * oneMinusCosine - z * s;\n  dst[ 5] = yy + (1 - yy) * c;\n  dst[ 6] = y * z * oneMinusCosine + x * s;\n  dst[ 7] = 0;\n  dst[ 8] = x * z * oneMinusCosine + y * s;\n  dst[ 9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  const r00 = xx + (1 - xx) * c;\n  const r01 = x * y * oneMinusCosine + z * s;\n  const r02 = x * z * oneMinusCosine - y * s;\n  const r10 = x * y * oneMinusCosine - z * s;\n  const r11 = yy + (1 - yy) * c;\n  const r12 = y * z * oneMinusCosine + x * s;\n  const r20 = x * z * oneMinusCosine + y * s;\n  const r21 = y * z * oneMinusCosine - x * s;\n  const r22 = zz + (1 - zz) * c;\n\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n\n  dst[ 0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[ 1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[ 2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[ 3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[ 4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[ 5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[ 6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[ 7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[ 8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[ 9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {module:twgl/v3.Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = v[0];\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = v[1];\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Scales the given 4-by-4 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {module:twgl/v3.Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The scaled matrix.\n * @memberOf module:twgl/m4\n */\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[ 0] = v0 * m[0 * 4 + 0];\n  dst[ 1] = v0 * m[0 * 4 + 1];\n  dst[ 2] = v0 * m[0 * 4 + 2];\n  dst[ 3] = v0 * m[0 * 4 + 3];\n  dst[ 4] = v1 * m[1 * 4 + 0];\n  dst[ 5] = v1 * m[1 * 4 + 1];\n  dst[ 6] = v1 * m[1 * 4 + 2];\n  dst[ 7] = v1 * m[1 * 4 + 3];\n  dst[ 8] = v2 * m[2 * 4 + 0];\n  dst[ 9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The point.\n * @param {module:twgl/v3.Vec3} [dst] optional vec3 to store result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed point.\n * @memberOf module:twgl/m4\n */\nfunction transformPoint(m, v, dst) {\n  dst = dst || create();\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The direction.\n * @param {module:twgl/v3.Vec3} [dst] optional Vec3 to store result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\nfunction transformDirection(m, v, dst) {\n  dst = dst || create();\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The normal.\n * @param {module:twgl/v3.Vec3} [dst] The direction. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed normal.\n * @memberOf module:twgl/m4\n */\nfunction transformNormal(m, v, dst) {\n  dst = dst || create();\n  const mi = inverse(m);\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n  return dst;\n}\n\nvar m4 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  axisRotate: axisRotate,\n  axisRotation: axisRotation,\n  copy: copy$1,\n  frustum: frustum,\n  getAxis: getAxis,\n  getTranslation: getTranslation,\n  identity: identity,\n  inverse: inverse,\n  lookAt: lookAt,\n  multiply: multiply$1,\n  negate: negate$1,\n  ortho: ortho,\n  perspective: perspective,\n  rotateX: rotateX,\n  rotateY: rotateY,\n  rotateZ: rotateZ,\n  rotationX: rotationX,\n  rotationY: rotationY,\n  rotationZ: rotationZ,\n  scale: scale,\n  scaling: scaling,\n  setAxis: setAxis,\n  setDefaultType: setDefaultType$1,\n  setTranslation: setTranslation,\n  transformDirection: transformDirection,\n  transformNormal: transformNormal,\n  transformPoint: transformPoint,\n  translate: translate,\n  translation: translation,\n  transpose: transpose\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* DataType */\nconst BYTE                           = 0x1400;\nconst UNSIGNED_BYTE                  = 0x1401;\nconst SHORT                          = 0x1402;\nconst UNSIGNED_SHORT                 = 0x1403;\nconst INT                            = 0x1404;\nconst UNSIGNED_INT                   = 0x1405;\nconst FLOAT                          = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4       = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1       = 0x8034;\nconst UNSIGNED_SHORT_5_6_5         = 0x8363;\nconst HALF_FLOAT                   = 0x140B;\nconst UNSIGNED_INT_2_10_10_10_REV  = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV     = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nconst UNSIGNED_INT_24_8            = 0x84FA;\n\nconst glTypeToTypedArray = {};\n{\n  const tt = glTypeToTypedArray;\n  tt[BYTE]                           = Int8Array;\n  tt[UNSIGNED_BYTE]                  = Uint8Array;\n  tt[SHORT]                          = Int16Array;\n  tt[UNSIGNED_SHORT]                 = Uint16Array;\n  tt[INT]                            = Int32Array;\n  tt[UNSIGNED_INT]                   = Uint32Array;\n  tt[FLOAT]                          = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4]         = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1]         = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5]           = Uint16Array;\n  tt[HALF_FLOAT]                     = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV]    = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV]   = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV]       = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\n  tt[UNSIGNED_INT_24_8]              = Uint32Array;\n}\n\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array)         { return BYTE; }           // eslint-disable-line\n  if (typedArray instanceof Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArray instanceof Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArray instanceof Int16Array)        { return SHORT; }          // eslint-disable-line\n  if (typedArray instanceof Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\n  if (typedArray instanceof Int32Array)        { return INT; }            // eslint-disable-line\n  if (typedArray instanceof Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\n  if (typedArray instanceof Float32Array)      { return FLOAT; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferView} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)         { return BYTE; }           // eslint-disable-line\n  if (typedArrayType === Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArrayType === Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArrayType === Int16Array)        { return SHORT; }          // eslint-disable-line\n  if (typedArrayType === Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\n  if (typedArrayType === Int32Array)        { return INT; }            // eslint-disable-line\n  if (typedArrayType === Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\n  if (typedArrayType === Float32Array)      { return FLOAT; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\nfunction getTypedArrayTypeForGLType(type) {\n  const CTOR = glTypeToTypedArray[type];\n  if (!CTOR) {\n    throw new Error('unknown gl type');\n  }\n  return CTOR;\n}\n\nconst isArrayBuffer = typeof SharedArrayBuffer !== 'undefined'\n  ? function isArrayBufferOrSharedArrayBuffer(a) {\n    return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof SharedArrayBuffer);\n  }\n  : function isArrayBuffer(a) {\n    return a && a.buffer && a.buffer instanceof ArrayBuffer;\n  };\n\nvar typedarrays = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getGLTypeForTypedArray: getGLTypeForTypedArray,\n  getGLTypeForTypedArrayType: getGLTypeForTypedArrayType,\n  getTypedArrayTypeForGLType: getTypedArrayTypeForGLType,\n  isArrayBuffer: isArrayBuffer\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint no-console: \"off\" */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n * @private\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function(name) {\n    const value = src[name];\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n * @private\n */\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function(key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {  /* eslint no-prototype-builtins: 0 */\n      dst[key] = src[key];\n    }\n  });\n}\n\nfunction error(...args) {\n  console.error(...args);\n}\n\nfunction warn(...args) {\n  console.warn(...args);\n}\n\nfunction isBuffer(gl, t) {\n  return typeof WebGLBuffer !== 'undefined' && t instanceof WebGLBuffer;\n}\n\nfunction isRenderbuffer(gl, t) {\n  return typeof WebGLRenderbuffer !== 'undefined' && t instanceof WebGLRenderbuffer;\n}\n\nfunction isShader(gl, t) {\n  return typeof WebGLShader !== 'undefined' && t instanceof WebGLShader;\n}\n\nfunction isTexture(gl, t) {\n  return typeof WebGLTexture !== 'undefined' && t instanceof WebGLTexture;\n}\n\nfunction isSampler(gl, t) {\n  return typeof WebGLSampler !== 'undefined' && t instanceof WebGLSampler;\n}\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst STATIC_DRAW                  = 0x88e4;\nconst ARRAY_BUFFER                 = 0x8892;\nconst ELEMENT_ARRAY_BUFFER         = 0x8893;\nconst BUFFER_SIZE                  = 0x8764;\n\nconst BYTE$1                         = 0x1400;\nconst UNSIGNED_BYTE$1                = 0x1401;\nconst SHORT$1                        = 0x1402;\nconst UNSIGNED_SHORT$1               = 0x1403;\nconst INT$1                          = 0x1404;\nconst UNSIGNED_INT$1                 = 0x1405;\nconst FLOAT$1                        = 0x1406;\nconst defaults = {\n  attribPrefix: \"\",\n};\n\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n * In other words I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\nfunction setAttributePrefix(prefix) {\n  defaults.attribPrefix = prefix;\n}\n\nfunction setDefaults(newDefaults) {\n  copyExistingProperties(newDefaults, defaults);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || STATIC_DRAW);\n}\n\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n  type = type || ARRAY_BUFFER;\n  const buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n}\n\n// This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\nfunction getNormalizationForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array)    { return true; }  // eslint-disable-line\n  if (typedArray instanceof Uint8Array)   { return true; }  // eslint-disable-line\n  return false;\n}\n\n// This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)    { return true; }  // eslint-disable-line\n  if (typedArrayType === Uint8Array)   { return true; }  // eslint-disable-line\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nconst texcoordRE = /coord|texture/i;\nconst colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  let numComponents;\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3;  // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw new Error(`Can not guess numComponents for attribute '${name}'. Tried ${numComponents} but ${length} values is not evenly divisible by ${numComponents}. You should specify it.`);\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array,\n    };\n  }\n\n  let Type = array.type;\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n  return new Type(array.data);\n}\n\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of components of an array\n * @typedef {Object} FullArraySpec\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {(number|number[]|ArrayBufferView)} data The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {constructor} [type] type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\n * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @property {WebGLBuffer} [buffer] Buffer to use for this attribute. This lets you use your own buffer\n *    but you will need to supply `numComponents` and `type`. You can effectively pass an `AttribInfo`\n *    to provide this. Example:\n *\n *         const bufferInfo1 = twgl.createBufferInfoFromArrays(gl, {\n *           position: [1, 2, 3, ... ],\n *         });\n *         const bufferInfo2 = twgl.createBufferInfoFromArrays(gl, {\n *           position: bufferInfo1.attribs.position,  // use the same buffer from bufferInfo1\n *         });\n *\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @param {module:twgl.BufferInfo} [srcBufferInfo] a BufferInfo to copy from\n *   This lets you share buffers. Any arrays you supply will override\n *   the buffers from srcBufferInfo.\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\nfunction createAttribsFromArrays(gl, arrays) {\n  const attribs = {};\n  Object.keys(arrays).forEach(function(arrayName) {\n    if (!isIndices(arrayName)) {\n      const array = arrays[arrayName];\n      const attribName = array.attrib || array.name || array.attribName || (defaults.attribPrefix + arrayName);\n      if (array.value) {\n        if (!Array.isArray(array.value) && !isArrayBuffer(array.value)) {\n          throw new Error('array.value is not array or typedarray');\n        }\n        attribs[attribName] = {\n          value: array.value,\n        };\n      } else {\n        let buffer;\n        let type;\n        let normalization;\n        let numComponents;\n        if (array.buffer && array.buffer instanceof WebGLBuffer) {\n          buffer = array.buffer;\n          numComponents = array.numComponents || array.size;\n          type = array.type;\n          normalization = array.normalize;\n        } else if (typeof array === \"number\" || typeof array.data === \"number\") {\n          const numValues = array.data || array;\n          const arrayType = array.type || Float32Array;\n          const numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n          type = getGLTypeForTypedArrayType(arrayType);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n          numComponents = array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues);\n          buffer = gl.createBuffer();\n          gl.bindBuffer(ARRAY_BUFFER, buffer);\n          gl.bufferData(ARRAY_BUFFER, numBytes, array.drawType || STATIC_DRAW);\n        } else {\n          const typedArray = makeTypedArray(array, arrayName);\n          buffer = createBufferFromTypedArray(gl, typedArray, undefined, array.drawType);\n          type = getGLTypeForTypedArray(typedArray);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray);\n          numComponents = getNumComponents(array, arrayName);\n        }\n        attribs[attribName] = {\n          buffer:        buffer,\n          numComponents: numComponents,\n          type:          type,\n          normalize:     normalization,\n          stride:        array.stride || 0,\n          offset:        array.offset || 0,\n          divisor:       array.divisor === undefined ? undefined : array.divisor,\n          drawType:      array.drawType,\n        };\n      }\n    }\n  });\n  gl.bindBuffer(ARRAY_BUFFER, null);\n  return attribs;\n}\n\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically update the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably inefficient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n  if (offset !== undefined) {\n    gl.bindBuffer(ARRAY_BUFFER, attribInfo.buffer);\n    gl.bufferSubData(ARRAY_BUFFER, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === BYTE$1)           return 1;  // eslint-disable-line\n  if (type === UNSIGNED_BYTE$1)  return 1;  // eslint-disable-line\n  if (type === SHORT$1)          return 2;  // eslint-disable-line\n  if (type === UNSIGNED_SHORT$1) return 2;  // eslint-disable-line\n  if (type === INT$1)            return 4;  // eslint-disable-line\n  if (type === UNSIGNED_INT$1)   return 4;  // eslint-disable-line\n  if (type === FLOAT$1)          return 4;  // eslint-disable-line\n  return 0;\n}\n\n// Tries to get the number of elements from a set of arrays.\nconst positionKeys = ['position', 'positions', 'a_position'];\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  let key;\n  let ii;\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n    if (key in arrays) {\n      break;\n    }\n  }\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n  const array = arrays[key];\n  const length = getArray(array).length;\n  const numComponents = getNumComponents(array, key);\n  const numElements = length / numComponents;\n  if (length % numComponents > 0) {\n    throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n  }\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  let key;\n  let ii;\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n    if (key in attribs) {\n      break;\n    }\n    key = defaults.attribPrefix + key;\n    if (key in attribs) {\n      break;\n    }\n  }\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n  const attrib = attribs[key];\n  gl.bindBuffer(ARRAY_BUFFER, attrib.buffer);\n  const numBytes = gl.getBufferParameter(ARRAY_BUFFER, BUFFER_SIZE);\n  gl.bindBuffer(ARRAY_BUFFER, null);\n\n  const bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  const totalElements = numBytes / bytesPerValue;\n  const numComponents = attrib.numComponents || attrib.size;\n  // TODO: check stride\n  const numElements = totalElements / numComponents;\n  if (numElements % 1 !== 0) {\n    throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n  }\n  return numElements;\n}\n\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs appropriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         position: { buffer: WebGLBuffer, numComponents: 3, },\n *         normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also be TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or AugmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         texcoord: { numComponents: 2, buffer: gl.createBuffer(), },\n *         normal: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @param {module:twgl.BufferInfo} [srcBufferInfo] An existing\n *        buffer info to start from. WebGLBuffers etc specified\n *        in the srcBufferInfo will be used in a new BufferInfo\n *        with any arrays specified overriding the ones in\n *        srcBufferInfo.\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\nfunction createBufferInfoFromArrays(gl, arrays, srcBufferInfo) {\n  const newAttribs = createAttribsFromArrays(gl, arrays);\n  const bufferInfo = Object.assign({}, srcBufferInfo ? srcBufferInfo : {});\n  bufferInfo.attribs = Object.assign({}, srcBufferInfo ? srcBufferInfo.attribs : {}, newAttribs);\n  const indices = arrays.indices;\n  if (indices) {\n    const newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = getGLTypeForTypedArray(newIndices);\n  } else if (!bufferInfo.numElements) {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that contains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be derived otherwise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\nfunction createBufferFromArray(gl, array, arrayName) {\n  const type = arrayName === \"indices\" ? ELEMENT_ARRAY_BUFFER : ARRAY_BUFFER;\n  const typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\nfunction createBuffersFromArrays(gl, arrays) {\n  const buffers = { };\n  Object.keys(arrays).forEach(function(key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  });\n\n  // Ugh!\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = getGLTypeForTypedArray(makeTypedArray(arrays.indices));\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\nvar attributes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createAttribsFromArrays: createAttribsFromArrays,\n  createBuffersFromArrays: createBuffersFromArrays,\n  createBufferFromArray: createBufferFromArray,\n  createBufferFromTypedArray: createBufferFromTypedArray,\n  createBufferInfoFromArrays: createBufferInfoFromArrays,\n  setAttribInfoBufferFromArray: setAttribInfoBufferFromArray,\n  setAttributePrefix: setAttributePrefix,\n  setAttributeDefaults_: setDefaults,\n  getNumComponents_: getNumComponents,\n  getArray_: getArray\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst getArray$1 = getArray;  // eslint-disable-line\nconst getNumComponents$1 = getNumComponents;  // eslint-disable-line\n\n/**\n * @typedef {(Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array)} TypedArray\n */\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n * @private\n */\nfunction augmentTypedArray(typedArray, numComponents) {\n  let cursor = 0;\n  typedArray.push = function() {\n    for (let ii = 0; ii < arguments.length; ++ii) {\n      const value = arguments[ii];\n      if (value instanceof Array || isArrayBuffer(value)) {\n        for (let jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n  typedArray.reset = function(opt_index) {\n    cursor = opt_index || 0;\n  };\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function() {\n      return this.length / this.numComponents | 0;\n    },\n  });\n  return typedArray;\n}\n\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  const Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n\n/**\n * Given indexed vertices creates a new set of vertices un-indexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\nfunction deindexVertices(vertices) {\n  const indices = vertices.indices;\n  const newVertices = {};\n  const numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    const srcBuffer = vertices[channel];\n    const numComponents = srcBuffer.numComponents;\n    const dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n    for (let ii = 0; ii < numElements; ++ii) {\n      const ndx = indices[ii];\n      const offset = ndx * numComponents;\n      for (let jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n\n  return newVertices;\n}\n\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw new Error('can not flatten normals of indexed vertices. deindex them first');\n  }\n\n  const normals = vertices.normal;\n  const numNormals = normals.length;\n  for (let ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    const nax = normals[ii + 0];\n    const nay = normals[ii + 1];\n    const naz = normals[ii + 2];\n\n    const nbx = normals[ii + 3];\n    const nby = normals[ii + 4];\n    const nbz = normals[ii + 5];\n\n    const ncx = normals[ii + 6];\n    const ncy = normals[ii + 7];\n    const ncz = normals[ii + 8];\n\n    // add them\n    let nx = nax + nbx + ncx;\n    let ny = nay + nby + ncy;\n    let nz = naz + nbz + ncz;\n\n    // normalize them\n    const length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n\n    nx /= length;\n    ny /= length;\n    nz /= length;\n\n    // copy them back in\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  const len = array.length;\n  const tmp = new Float32Array(3);\n  for (let ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii    ] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal$1(mi, v, dst) {\n  dst = dst || create();\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Reorients directions by the given matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, transformDirection);\n  return array;\n}\n\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, inverse(matrix), transformNormal$1);\n  return array;\n}\n\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, transformPoint);\n  return array;\n}\n\n/**\n * @typedef {(number[]|TypedArray)} NativeArrayOrTypedArray\n */\n\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, NativeArrayOrTypedArray>} arrays The vertices to reorient\n * @param {module:twgl/m4.Mat4} matrix matrix to reorient by.\n * @return {Object.<string, NativeArrayOrTypedArray>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function(name) {\n    const array = arrays[name];\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray>} the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [\n        xOffset + -1 * size, yOffset + -1 * size,\n        xOffset +  1 * size, yOffset + -1 * size,\n        xOffset + -1 * size, yOffset +  1 * size,\n        xOffset +  1 * size, yOffset +  1 * size,\n      ],\n    },\n    normal: [\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n    ],\n    texcoord: [\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1,\n    ],\n    indices: [ 0, 1, 2, 2, 1, 3 ],\n  };\n}\n\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createPlaneVertices(\n    width,\n    depth,\n    subdivisionsWidth,\n    subdivisionsDepth,\n    matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || identity();\n\n  const numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (let z = 0; z <= subdivisionsDepth; z++) {\n    for (let x = 0; x <= subdivisionsWidth; x++) {\n      const u = x / subdivisionsWidth;\n      const v = z / subdivisionsDepth;\n      positions.push(\n          width * u - width * 0.5,\n          0,\n          depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  const numVertsAcross = subdivisionsWidth + 1;\n  const indices = createAugmentedTypedArray(\n      3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (let z = 0; z < subdivisionsDepth; z++) {  // eslint-disable-line\n    for (let x = 0; x < subdivisionsWidth; x++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (z + 0) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x,\n          (z + 0) * numVertsAcross + x + 1);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (z + 1) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x + 1,\n          (z + 0) * numVertsAcross + x + 1);\n    }\n  }\n\n  const arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  }, matrix);\n  return arrays;\n}\n\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createSphereVertices(\n    radius,\n    subdivisionsAxis,\n    subdivisionsHeight,\n    opt_startLatitudeInRadians,\n    opt_endLatitudeInRadians,\n    opt_startLongitudeInRadians,\n    opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw new Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || (Math.PI * 2);\n\n  const latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  const longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians;\n\n  // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n  const numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let y = 0; y <= subdivisionsHeight; y++) {\n    for (let x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      const u = x / subdivisionsAxis;\n      const v = y / subdivisionsHeight;\n      const theta = longRange * u + opt_startLongitudeInRadians;\n      const phi = latRange * v + opt_startLatitudeInRadians;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  const numVertsAround = subdivisionsAxis + 1;\n  const indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n  for (let x = 0; x < subdivisionsAxis; x++) {  // eslint-disable-line\n    for (let y = 0; y < subdivisionsHeight; y++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (y + 0) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (y + 1) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n * @private\n */\nconst CUBE_FACE_INDICES = [\n  [3, 7, 5, 1],  // right\n  [6, 2, 0, 4],  // left\n  [6, 7, 3, 2],  // ??\n  [0, 1, 5, 4],  // ??\n  [7, 6, 4, 5],  // front\n  [2, 3, 1, 0],  // back\n];\n\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createCubeVertices(size) {\n  size = size || 1;\n  const k = size / 2;\n\n  const cornerVertices = [\n    [-k, -k, -k],\n    [+k, -k, -k],\n    [-k, +k, -k],\n    [+k, +k, -k],\n    [-k, -k, +k],\n    [+k, -k, +k],\n    [-k, +k, +k],\n    [+k, +k, +k],\n  ];\n\n  const faceNormals = [\n    [+1, +0, +0],\n    [-1, +0, +0],\n    [+0, +1, +0],\n    [+0, -1, +0],\n    [+0, +0, +1],\n    [+0, +0, -1],\n  ];\n\n  const uvCoords = [\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [1, 1],\n  ];\n\n  const numVertices = 6 * 4;\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2 , numVertices);\n  const indices   = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (let f = 0; f < 6; ++f) {\n    const faceIndices = CUBE_FACE_INDICES[f];\n    for (let v = 0; v < 4; ++v) {\n      const position = cornerVertices[faceIndices[v]];\n      const normal = faceNormals[f];\n      const uv = uvCoords[v];\n\n      // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n\n    }\n    // Two triangles make a square face.\n    const offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createTruncatedConeVertices(\n    bottomRadius,\n    topRadius,\n    height,\n    radialSubdivisions,\n    verticalSubdivisions,\n    opt_topCap,\n    opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw new Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  const topCap = (opt_topCap === undefined) ? true : opt_topCap;\n  const bottomCap = (opt_bottomCap === undefined) ? true : opt_bottomCap;\n\n  const extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n\n  const numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n  const indices   = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra / 2) * 2, Uint16Array);\n\n  const vertsAroundEdge = radialSubdivisions + 1;\n\n  // The slant of the cone is constant across its surface\n  const slant = Math.atan2(bottomRadius - topRadius, height);\n  const cosSlant = Math.cos(slant);\n  const sinSlant = Math.sin(slant);\n\n  const start = topCap ? -2 : 0;\n  const end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (let yy = start; yy <= end; ++yy) {\n    let v = yy / verticalSubdivisions;\n    let y = height * v;\n    let ringRadius;\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius +\n        (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n    y -= height / 2;\n    for (let ii = 0; ii < vertsAroundEdge; ++ii) {\n      const sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      const cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      if (yy < 0) {\n        normals.push(0, -1, 0);\n      } else if (yy > verticalSubdivisions) {\n        normals.push(0, 1, 0);\n      } else if (ringRadius === 0.0) {\n        normals.push(0, 0, 0);\n      } else {\n        normals.push(sin * cosSlant, sinSlant, cos * cosSlant);\n      }\n      texcoords.push((ii / radialSubdivisions), 1 - v);\n    }\n  }\n\n  for (let yy = 0; yy < verticalSubdivisions + extra; ++yy) {  // eslint-disable-line\n    if (yy === 1 && topCap || yy === verticalSubdivisions + extra - 2 && bottomCap) {\n      continue;\n    }\n    for (let ii = 0; ii < radialSubdivisions; ++ii) {  // eslint-disable-line\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 0) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii);\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 0 + ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n * @private\n */\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  const data = [];\n  for (let ii = 0; ii < rleData.length; ii += 4) {\n    const runLength = rleData[ii];\n    const element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n    for (let jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n  return data;\n}\n\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction create3DFVertices() {\n\n  const positions = [\n    // left column front\n    0,   0,  0,\n    0, 150,  0,\n    30,   0,  0,\n    0, 150,  0,\n    30, 150,  0,\n    30,   0,  0,\n\n    // top rung front\n    30,   0,  0,\n    30,  30,  0,\n    100,   0,  0,\n    30,  30,  0,\n    100,  30,  0,\n    100,   0,  0,\n\n    // middle rung front\n    30,  60,  0,\n    30,  90,  0,\n    67,  60,  0,\n    30,  90,  0,\n    67,  90,  0,\n    67,  60,  0,\n\n    // left column back\n      0,   0,  30,\n     30,   0,  30,\n      0, 150,  30,\n      0, 150,  30,\n     30,   0,  30,\n     30, 150,  30,\n\n    // top rung back\n     30,   0,  30,\n    100,   0,  30,\n     30,  30,  30,\n     30,  30,  30,\n    100,   0,  30,\n    100,  30,  30,\n\n    // middle rung back\n     30,  60,  30,\n     67,  60,  30,\n     30,  90,  30,\n     30,  90,  30,\n     67,  60,  30,\n     67,  90,  30,\n\n    // top\n      0,   0,   0,\n    100,   0,   0,\n    100,   0,  30,\n      0,   0,   0,\n    100,   0,  30,\n      0,   0,  30,\n\n    // top rung front\n    100,   0,   0,\n    100,  30,   0,\n    100,  30,  30,\n    100,   0,   0,\n    100,  30,  30,\n    100,   0,  30,\n\n    // under top rung\n    30,   30,   0,\n    30,   30,  30,\n    100,  30,  30,\n    30,   30,   0,\n    100,  30,  30,\n    100,  30,   0,\n\n    // between top rung and middle\n    30,   30,   0,\n    30,   60,  30,\n    30,   30,  30,\n    30,   30,   0,\n    30,   60,   0,\n    30,   60,  30,\n\n    // top of middle rung\n    30,   60,   0,\n    67,   60,  30,\n    30,   60,  30,\n    30,   60,   0,\n    67,   60,   0,\n    67,   60,  30,\n\n    // front of middle rung\n    67,   60,   0,\n    67,   90,  30,\n    67,   60,  30,\n    67,   60,   0,\n    67,   90,   0,\n    67,   90,  30,\n\n    // bottom of middle rung.\n    30,   90,   0,\n    30,   90,  30,\n    67,   90,  30,\n    30,   90,   0,\n    67,   90,  30,\n    67,   90,   0,\n\n    // front of bottom\n    30,   90,   0,\n    30,  150,  30,\n    30,   90,  30,\n    30,   90,   0,\n    30,  150,   0,\n    30,  150,  30,\n\n    // bottom\n    0,   150,   0,\n    0,   150,  30,\n    30,  150,  30,\n    0,   150,   0,\n    30,  150,  30,\n    30,  150,   0,\n\n    // left side\n    0,   0,   0,\n    0,   0,  30,\n    0, 150,  30,\n    0,   0,   0,\n    0, 150,  30,\n    0, 150,   0,\n  ];\n\n  const texcoords = [\n    // left column front\n    0.22, 0.19,\n    0.22, 0.79,\n    0.34, 0.19,\n    0.22, 0.79,\n    0.34, 0.79,\n    0.34, 0.19,\n\n    // top rung front\n    0.34, 0.19,\n    0.34, 0.31,\n    0.62, 0.19,\n    0.34, 0.31,\n    0.62, 0.31,\n    0.62, 0.19,\n\n    // middle rung front\n    0.34, 0.43,\n    0.34, 0.55,\n    0.49, 0.43,\n    0.34, 0.55,\n    0.49, 0.55,\n    0.49, 0.43,\n\n    // left column back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // middle rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // top rung front\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // under top rung\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // between top rung and middle\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // top of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // front of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom of middle rung.\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // front of bottom\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // left side\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n  ];\n\n  const normals = expandRLEData([\n    // left column front\n    // top rung front\n    // middle rung front\n    18, 0, 0, 1,\n\n    // left column back\n    // top rung back\n    // middle rung back\n    18, 0, 0, -1,\n\n    // top\n    6, 0, 1, 0,\n\n    // top rung front\n    6, 1, 0, 0,\n\n    // under top rung\n    6, 0, -1, 0,\n\n    // between top rung and middle\n    6, 1, 0, 0,\n\n    // top of middle rung\n    6, 0, 1, 0,\n\n    // front of middle rung\n    6, 1, 0, 0,\n\n    // bottom of middle rung.\n    6, 0, -1, 0,\n\n    // front of bottom\n    6, 1, 0, 0,\n\n    // bottom\n    6, 0, -1, 0,\n\n    // left side\n    6, -1, 0, 0,\n  ]);\n\n  const colors = expandRLEData([\n        // left column front\n        // top rung front\n        // middle rung front\n      18, 200,  70, 120,\n\n        // left column back\n        // top rung back\n        // middle rung back\n      18, 80, 70, 200,\n\n        // top\n      6, 70, 200, 210,\n\n        // top rung front\n      6, 200, 200, 70,\n\n        // under top rung\n      6, 210, 100, 70,\n\n        // between top rung and middle\n      6, 210, 160, 70,\n\n        // top of middle rung\n      6, 70, 180, 210,\n\n        // front of middle rung\n      6, 100, 70, 210,\n\n        // bottom of middle rung.\n      6, 76, 210, 100,\n\n        // front of bottom\n      6, 140, 210, 80,\n\n        // bottom\n      6, 90, 130, 110,\n\n        // left side\n      6, 160, 160, 220,\n  ], [255]);\n\n  const numVerts = positions.length / 3;\n\n  const arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2,  numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array),\n  };\n\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (let ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCrescentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCrescentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n function createCrescentVertices(\n    verticalRadius,\n    outerRadius,\n    innerRadius,\n    thickness,\n    subdivisionsDown,\n    startOffset,\n    endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw new Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset   = endOffset || 1;\n\n  const subdivisionsThick = 2;\n\n  const offsetRange = endOffset - startOffset;\n  const numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  const positions   = createAugmentedTypedArray(3, numVertices);\n  const normals     = createAugmentedTypedArray(3, numVertices);\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (let z = 0; z <= subdivisionsDown; z++) {\n      const uBack = x / (subdivisionsThick - 1);\n      const v = z / subdivisionsDown;\n      const xBack = (uBack - 0.5) * 2;\n      const angle = (startOffset + (v * offsetRange)) * Math.PI;\n      const s = Math.sin(angle);\n      const c = Math.cos(angle);\n      const radius = lerp(verticalRadius, arcRadius, s);\n      const px = xBack * thickness;\n      const py = c * verticalRadius;\n      const pz = s * radius;\n      positions.push(px, py, pz);\n      const n = add(multiply([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  }\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let x = 0; x < subdivisionsThick; x++) {\n    const uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  }\n\n  // Do outer surface.\n  const indices = createAugmentedTypedArray(3, (subdivisionsDown * 2) * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (let z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(\n          leftArcOffset + z + 0,\n          leftArcOffset + z + 1,\n          rightArcOffset + z + 0);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          leftArcOffset + z + 1,\n          rightArcOffset + z + 1,\n          rightArcOffset + z + 0);\n    }\n  }\n\n  const numVerticesDown = subdivisionsDown + 1;\n  // front\n  createSurface(numVerticesDown * 0, numVerticesDown * 4);\n  // right\n  createSurface(numVerticesDown * 5, numVerticesDown * 7);\n  // back\n  createSurface(numVerticesDown * 6, numVerticesDown * 2);\n  // left\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n\n  return {\n    position: positions,\n    normal:   normals,\n    texcoord: texcoords,\n    indices:  indices,\n  };\n}\n\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n /**\n  * Creates cylinder buffers. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n  * @param {number} radius Radius of cylinder.\n  * @param {number} height Height of cylinder.\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n  * @param {boolean} [topCap] Create top cap. Default = true.\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n  * @return {Object.<string, WebGLBuffer>} The created buffers.\n  * @memberOf module:twgl/primitives\n  * @function createCylinderBuffers\n  */\n\n /**\n  * Creates cylinder vertices. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param {number} radius Radius of cylinder.\n  * @param {number} height Height of cylinder.\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n  * @param {boolean} [topCap] Create top cap. Default = true.\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n  * @return {Object.<string, TypedArray>} The created vertices.\n  * @memberOf module:twgl/primitives\n  */\nfunction createCylinderVertices(\n    radius,\n    height,\n    radialSubdivisions,\n    verticalSubdivisions,\n    topCap,\n    bottomCap) {\n  return createTruncatedConeVertices(\n      radius,\n      radius,\n      height,\n      radialSubdivisions,\n      verticalSubdivisions,\n      topCap,\n      bottomCap);\n}\n\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createTorusVertices(\n    radius,\n    thickness,\n    radialSubdivisions,\n    bodySubdivisions,\n    startAngle,\n    endAngle) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw new Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  const range = endAngle - startAngle;\n\n  const radialParts = radialSubdivisions + 1;\n  const bodyParts   = bodySubdivisions + 1;\n  const numVertices = radialParts * bodyParts;\n  const positions   = createAugmentedTypedArray(3, numVertices);\n  const normals     = createAugmentedTypedArray(3, numVertices);\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\n  const indices     = createAugmentedTypedArray(3, (radialSubdivisions) * (bodySubdivisions) * 2, Uint16Array);\n\n  for (let slice = 0; slice < bodyParts; ++slice) {\n    const v = slice / bodySubdivisions;\n    const sliceAngle = v * Math.PI * 2;\n    const sliceSin = Math.sin(sliceAngle);\n    const ringRadius = radius + sliceSin * thickness;\n    const ny = Math.cos(sliceAngle);\n    const y = ny * thickness;\n    for (let ring = 0; ring < radialParts; ++ring) {\n      const u = ring / radialSubdivisions;\n      const ringAngle = startAngle + u * range;\n      const xSin = Math.sin(ringAngle);\n      const zCos = Math.cos(ringAngle);\n      const x = xSin * ringRadius;\n      const z = zCos * ringRadius;\n      const nx = xSin * sliceSin;\n      const nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (let slice = 0; slice < bodySubdivisions; ++slice) {  // eslint-disable-line\n    for (let ring = 0; ring < radialSubdivisions; ++ring) {  // eslint-disable-line\n      const nextRingIndex  = 1 + ring;\n      const nextSliceIndex = 1 + slice;\n      indices.push(radialParts * slice          + ring,\n                   radialParts * nextSliceIndex + ring,\n                   radialParts * slice          + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + ring,\n                   radialParts * nextSliceIndex + nextRingIndex,\n                   radialParts * slice          + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal:   normals,\n    texcoord: texcoords,\n    indices:  indices,\n  };\n}\n\n\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createDiscVertices(\n    radius,\n    divisions,\n    stacks,\n    innerRadius,\n    stackPower) {\n  if (divisions < 3) {\n    throw new Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0;\n\n  // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n  const numVertices = (divisions + 1) * (stacks + 1);\n\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n  const indices   = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n\n  let firstIndex = 0;\n  const radiusSpan = radius - innerRadius;\n  const pointsPerStack = divisions + 1;\n\n  // Build the disk one stack at a time.\n  for (let stack = 0; stack <= stacks; ++stack) {\n    const stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (let i = 0; i <= divisions; ++i) {\n      const theta = 2.0 * Math.PI * i / divisions;\n      const x = stackRadius * Math.cos(theta);\n      const z = stackRadius * Math.sin(theta);\n\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - (i / divisions), stack / stacks);\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        const a = firstIndex + (i + 1);\n        const b = firstIndex + i;\n        const c = firstIndex + i - pointsPerStack;\n        const d = firstIndex + (i + 1) - pointsPerStack;\n\n        // Make a quad of the vertices a, b, c, d.\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n * @private\n */\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, AugmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, AugmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  const numElements = vertices.position.numElements;\n  const vColors = createAugmentedTypedArray(4, numElements, Uint8Array);\n  const rand = options.rand || function(ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n  vertices.color = vColors;\n  if (vertices.indices) {\n    // just make random colors if index\n    for (let ii = 0; ii < numElements; ++ii) {\n      vColors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    const numVertsPerColor = options.vertsPerColor || 3;\n    const numSets = numElements / numVertsPerColor;\n    for (let ii = 0; ii < numSets; ++ii) {  // eslint-disable-line\n      const color = [rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3)];\n      for (let jj = 0; jj < numVertsPerColor; ++jj) {\n        vColors.push(color);\n      }\n    }\n  }\n  return vertices;\n}\n\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n * @private\n */\nfunction createBufferFunc(fn) {\n  return function(gl) {\n    const arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return createBuffersFromArrays(gl, arrays);\n  };\n}\n\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n * @private\n */\nfunction createBufferInfoFunc(fn) {\n  return function(gl) {\n    const arrays = fn.apply(null,  Array.prototype.slice.call(arguments, 1));\n    return createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nconst arraySpecPropertyNames = [\n  \"numComponents\",\n  \"size\",\n  \"type\",\n  \"normalize\",\n  \"stride\",\n  \"offset\",\n  \"attrib\",\n  \"name\",\n  \"attribName\",\n];\n\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n * @private\n */\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  const length = src.length;\n  for (let ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n * @private\n */\nfunction createArrayOfSameType(srcArray, length) {\n  const arraySrc = getArray$1(srcArray);\n  const newArray = new arraySrc.constructor(length);\n  let newArraySpec = newArray;\n  // If it appears to have been augmented make new one augmented\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  }\n  // If it was a full spec make new one a full spec\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray,\n    };\n    copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n  return newArraySpec;\n}\n\n/**\n * Concatenates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primitives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatenated vertices.\n * @memberOf module:twgl/primitives\n */\nfunction concatVertices(arrayOfArrays) {\n  const names = {};\n  let baseName;\n  // get names of all arrays.\n  // and numElements for each set of vertices\n  for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n    const arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function(name) {  // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n      const arrayInfo = arrays[name];\n      const numComponents = getNumComponents$1(arrayInfo, name);\n      const array = getArray$1(arrayInfo);\n      const numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  }\n\n  // compute length of combined array\n  // and return one for reference\n  function getLengthOfCombinedArrays(name) {\n    let length = 0;\n    let arraySpec;\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n      const arrays = arrayOfArrays[ii];\n      const arrayInfo = arrays[name];\n      const array = getArray$1(arrayInfo);\n      length += array.length;\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n    return {\n      length: length,\n      spec: arraySpec,\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    let baseIndex = 0;\n    let offset = 0;\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n      const arrays = arrayOfArrays[ii];\n      const arrayInfo = arrays[name];\n      const array = getArray$1(arrayInfo);\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n      offset += array.length;\n    }\n  }\n\n  const base = names[baseName];\n\n  const newArrays = {};\n  Object.keys(names).forEach(function(name) {\n    const info = getLengthOfCombinedArrays(name);\n    const newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray$1(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The duplicated vertices.\n * @memberOf module:twgl/primitives\n */\nfunction duplicateVertices(arrays) {\n  const newArrays = {};\n  Object.keys(arrays).forEach(function(name) {\n    const arraySpec = arrays[name];\n    const srcArray = getArray$1(arraySpec);\n    const newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray$1(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nconst create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nconst create3DFBuffers = createBufferFunc(create3DFVertices);\nconst createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nconst createCubeBuffers = createBufferFunc(createCubeVertices);\nconst createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nconst createPlaneBuffers = createBufferFunc(createPlaneVertices);\nconst createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nconst createSphereBuffers = createBufferFunc(createSphereVertices);\nconst createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nconst createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nconst createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nconst createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nconst createCrescentBufferInfo = createBufferInfoFunc(createCrescentVertices);\nconst createCrescentBuffers = createBufferFunc(createCrescentVertices);\nconst createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nconst createCylinderBuffers = createBufferFunc(createCylinderVertices);\nconst createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nconst createTorusBuffers = createBufferFunc(createTorusVertices);\nconst createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nconst createDiscBuffers = createBufferFunc(createDiscVertices);\n\n// these were mis-spelled until 4.12\nconst createCresentBufferInfo = createCrescentBufferInfo;\nconst createCresentBuffers = createCrescentBuffers;\nconst createCresentVertices = createCrescentVertices;\n\nvar primitives = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  create3DFBufferInfo: create3DFBufferInfo,\n  create3DFBuffers: create3DFBuffers,\n  create3DFVertices: create3DFVertices,\n  createAugmentedTypedArray: createAugmentedTypedArray,\n  createCubeBufferInfo: createCubeBufferInfo,\n  createCubeBuffers: createCubeBuffers,\n  createCubeVertices: createCubeVertices,\n  createPlaneBufferInfo: createPlaneBufferInfo,\n  createPlaneBuffers: createPlaneBuffers,\n  createPlaneVertices: createPlaneVertices,\n  createSphereBufferInfo: createSphereBufferInfo,\n  createSphereBuffers: createSphereBuffers,\n  createSphereVertices: createSphereVertices,\n  createTruncatedConeBufferInfo: createTruncatedConeBufferInfo,\n  createTruncatedConeBuffers: createTruncatedConeBuffers,\n  createTruncatedConeVertices: createTruncatedConeVertices,\n  createXYQuadBufferInfo: createXYQuadBufferInfo,\n  createXYQuadBuffers: createXYQuadBuffers,\n  createXYQuadVertices: createXYQuadVertices,\n  createCresentBufferInfo: createCresentBufferInfo,\n  createCresentBuffers: createCresentBuffers,\n  createCresentVertices: createCresentVertices,\n  createCrescentBufferInfo: createCrescentBufferInfo,\n  createCrescentBuffers: createCrescentBuffers,\n  createCrescentVertices: createCrescentVertices,\n  createCylinderBufferInfo: createCylinderBufferInfo,\n  createCylinderBuffers: createCylinderBuffers,\n  createCylinderVertices: createCylinderVertices,\n  createTorusBufferInfo: createTorusBufferInfo,\n  createTorusBuffers: createTorusBuffers,\n  createTorusVertices: createTorusVertices,\n  createDiscBufferInfo: createDiscBufferInfo,\n  createDiscBuffers: createDiscBuffers,\n  createDiscVertices: createDiscVertices,\n  deindexVertices: deindexVertices,\n  flattenNormals: flattenNormals,\n  makeRandomVertexColors: makeRandomVertexColors,\n  reorientDirections: reorientDirections,\n  reorientNormals: reorientNormals,\n  reorientPositions: reorientPositions,\n  reorientVertices: reorientVertices,\n  concatVertices: concatVertices,\n  duplicateVertices: duplicateVertices\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n * @private\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc');\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @return {string} enum string or hex value\n * @memberOf module:twgl\n * @function glEnumToString\n */\nconst glEnumToString = (function() {\n  const haveEnumsForType = {};\n  const enums = {};\n\n  function addEnums(gl) {\n    const type = gl.constructor.name;\n    if (!haveEnumsForType[type]) {\n      for (const key in gl) {\n        if (typeof gl[key] === 'number') {\n          const existing = enums[gl[key]];\n          enums[gl[key]] = existing ? `${existing} | ${key}` : key;\n        }\n      }\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || (typeof value === 'number' ? `0x${value.toString(16)}` : value);\n  };\n}());\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  glEnumToString: glEnumToString,\n  isWebGL1: isWebGL1,\n  isWebGL2: isWebGL2\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nconst defaults$1 = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined,\n};\nconst isArrayBuffer$1 = isArrayBuffer;\n\n// Should we make this on demand?\nconst getShared2DContext = function() {\n  let s_ctx;\n  return function getShared2DContext() {\n    s_ctx = s_ctx ||\n        ((typeof document !== 'undefined' && document.createElement)\n          ? document.createElement(\"canvas\").getContext(\"2d\")\n          : null);\n    return s_ctx;\n  };\n}();\n\n// NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an ImageBitmap to be cut. Unfortunately cutting an ImageBitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\nconst ALPHA                          = 0x1906;\nconst RGB                            = 0x1907;\nconst RGBA                           = 0x1908;\nconst LUMINANCE                      = 0x1909;\nconst LUMINANCE_ALPHA                = 0x190A;\nconst DEPTH_COMPONENT                = 0x1902;\nconst DEPTH_STENCIL                  = 0x84F9;\n\n/* TextureWrapMode */\n// const REPEAT                         = 0x2901;\n// const MIRRORED_REPEAT                = 0x8370;\nconst CLAMP_TO_EDGE                  = 0x812f;\n\n/* TextureMagFilter */\nconst NEAREST                        = 0x2600;\nconst LINEAR                         = 0x2601;\n\n/* TextureMinFilter */\n// const NEAREST_MIPMAP_NEAREST         = 0x2700;\n// const LINEAR_MIPMAP_NEAREST          = 0x2701;\n// const NEAREST_MIPMAP_LINEAR          = 0x2702;\n// const LINEAR_MIPMAP_LINEAR           = 0x2703;\n\n/* Texture Target */\nconst TEXTURE_2D                     = 0x0de1;\nconst TEXTURE_CUBE_MAP               = 0x8513;\nconst TEXTURE_3D                     = 0x806f;\nconst TEXTURE_2D_ARRAY               = 0x8c1a;\n\n/* Cubemap Targets */\nconst TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515;\nconst TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516;\nconst TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517;\nconst TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518;\nconst TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519;\nconst TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851a;\n\n/* Texture Parameters */\nconst TEXTURE_MIN_FILTER             = 0x2801;\nconst TEXTURE_MAG_FILTER             = 0x2800;\nconst TEXTURE_WRAP_S                 = 0x2802;\nconst TEXTURE_WRAP_T                 = 0x2803;\nconst TEXTURE_WRAP_R                 = 0x8072;\nconst TEXTURE_MIN_LOD                = 0x813a;\nconst TEXTURE_MAX_LOD                = 0x813b;\nconst TEXTURE_BASE_LEVEL             = 0x813c;\nconst TEXTURE_MAX_LEVEL              = 0x813d;\n\n\n/* Pixel store */\nconst UNPACK_ALIGNMENT                   = 0x0cf5;\nconst UNPACK_ROW_LENGTH                  = 0x0cf2;\nconst UNPACK_IMAGE_HEIGHT                = 0x806e;\nconst UNPACK_SKIP_PIXELS                 = 0x0cf4;\nconst UNPACK_SKIP_ROWS                   = 0x0cf3;\nconst UNPACK_SKIP_IMAGES                 = 0x806d;\nconst UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\nconst UNPACK_PREMULTIPLY_ALPHA_WEBGL     = 0x9241;\nconst UNPACK_FLIP_Y_WEBGL                = 0x9240;\n\nconst R8                           = 0x8229;\nconst R8_SNORM                     = 0x8F94;\nconst R16F                         = 0x822D;\nconst R32F                         = 0x822E;\nconst R8UI                         = 0x8232;\nconst R8I                          = 0x8231;\nconst RG16UI                       = 0x823A;\nconst RG16I                        = 0x8239;\nconst RG32UI                       = 0x823C;\nconst RG32I                        = 0x823B;\nconst RG8                          = 0x822B;\nconst RG8_SNORM                    = 0x8F95;\nconst RG16F                        = 0x822F;\nconst RG32F                        = 0x8230;\nconst RG8UI                        = 0x8238;\nconst RG8I                         = 0x8237;\nconst R16UI                        = 0x8234;\nconst R16I                         = 0x8233;\nconst R32UI                        = 0x8236;\nconst R32I                         = 0x8235;\nconst RGB8                         = 0x8051;\nconst SRGB8                        = 0x8C41;\nconst RGB565                       = 0x8D62;\nconst RGB8_SNORM                   = 0x8F96;\nconst R11F_G11F_B10F               = 0x8C3A;\nconst RGB9_E5                      = 0x8C3D;\nconst RGB16F                       = 0x881B;\nconst RGB32F                       = 0x8815;\nconst RGB8UI                       = 0x8D7D;\nconst RGB8I                        = 0x8D8F;\nconst RGB16UI                      = 0x8D77;\nconst RGB16I                       = 0x8D89;\nconst RGB32UI                      = 0x8D71;\nconst RGB32I                       = 0x8D83;\nconst RGBA8                        = 0x8058;\nconst SRGB8_ALPHA8                 = 0x8C43;\nconst RGBA8_SNORM                  = 0x8F97;\nconst RGB5_A1                      = 0x8057;\nconst RGBA4                        = 0x8056;\nconst RGB10_A2                     = 0x8059;\nconst RGBA16F                      = 0x881A;\nconst RGBA32F                      = 0x8814;\nconst RGBA8UI                      = 0x8D7C;\nconst RGBA8I                       = 0x8D8E;\nconst RGB10_A2UI                   = 0x906F;\nconst RGBA16UI                     = 0x8D76;\nconst RGBA16I                      = 0x8D88;\nconst RGBA32I                      = 0x8D82;\nconst RGBA32UI                     = 0x8D70;\n\nconst DEPTH_COMPONENT16            = 0x81A5;\nconst DEPTH_COMPONENT24            = 0x81A6;\nconst DEPTH_COMPONENT32F           = 0x8CAC;\nconst DEPTH32F_STENCIL8            = 0x8CAD;\nconst DEPTH24_STENCIL8             = 0x88F0;\n\n/* DataType */\nconst BYTE$2                         = 0x1400;\nconst UNSIGNED_BYTE$2                = 0x1401;\nconst SHORT$2                        = 0x1402;\nconst UNSIGNED_SHORT$2               = 0x1403;\nconst INT$2                          = 0x1404;\nconst UNSIGNED_INT$2                 = 0x1405;\nconst FLOAT$2                        = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4$1       = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1$1       = 0x8034;\nconst UNSIGNED_SHORT_5_6_5$1         = 0x8363;\nconst HALF_FLOAT$1                   = 0x140B;\nconst HALF_FLOAT_OES               = 0x8D61;  // Thanks Khronos for making this different >:(\nconst UNSIGNED_INT_2_10_10_10_REV$1  = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV$1 = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV$1     = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV$1 = 0x8DAD;\nconst UNSIGNED_INT_24_8$1            = 0x84FA;\n\nconst RG                           = 0x8227;\nconst RG_INTEGER                   = 0x8228;\nconst RED                          = 0x1903;\nconst RED_INTEGER                  = 0x8D94;\nconst RGB_INTEGER                  = 0x8D98;\nconst RGBA_INTEGER                 = 0x8D99;\n\nconst formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  const f = formatInfo;\n  f[ALPHA]           = { numColorComponents: 1, };\n  f[LUMINANCE]       = { numColorComponents: 1, };\n  f[LUMINANCE_ALPHA] = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGBA]            = { numColorComponents: 4, };\n  f[RED]             = { numColorComponents: 1, };\n  f[RED_INTEGER]     = { numColorComponents: 1, };\n  f[RG]              = { numColorComponents: 2, };\n  f[RG_INTEGER]      = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGB_INTEGER]     = { numColorComponents: 3, };\n  f[RGBA]            = { numColorComponents: 4, };\n  f[RGBA_INTEGER]    = { numColorComponents: 4, };\n  f[DEPTH_COMPONENT] = { numColorComponents: 1, };\n  f[DEPTH_STENCIL]   = { numColorComponents: 2, };\n}\n\n/**\n * @typedef {Object} TextureFormatDetails\n * @property {number} textureFormat format to pass texImage2D and similar functions.\n * @property {boolean} colorRenderable true if you can render to this format of texture.\n * @property {boolean} textureFilterable true if you can filter the texture, false if you can ony use `NEAREST`.\n * @property {number[]} type Array of possible types you can pass to texImage2D and similar function\n * @property {Object.<number,number>} bytesPerElementMap A map of types to bytes per element\n * @private\n */\n\nlet s_textureInternalFormatInfo;\nfunction getTextureInternalFormatInfo(internalFormat) {\n  if (!s_textureInternalFormatInfo) {\n    // NOTE: these properties need unique names so we can let Uglify mangle the name.\n    const t = {};\n    // unsized formats\n    t[ALPHA]              = { textureFormat: ALPHA,           colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2], };\n    t[LUMINANCE]          = { textureFormat: LUMINANCE,       colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2], };\n    t[LUMINANCE_ALPHA]    = { textureFormat: LUMINANCE_ALPHA, colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2, 4, 4, 8],        type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2], };\n    t[RGB]                = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 6, 6, 12, 2],    type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2, UNSIGNED_SHORT_5_6_5$1], };\n    t[RGBA]               = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 8, 8, 16, 2, 2], type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2, UNSIGNED_SHORT_4_4_4_4$1, UNSIGNED_SHORT_5_5_5_1$1], };\n    t[DEPTH_COMPONENT]    = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [2, 4],              type: [UNSIGNED_INT$2, UNSIGNED_SHORT$2], };\n\n    // sized formats\n    t[R8]                 = { textureFormat: RED,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1],        type: [UNSIGNED_BYTE$2], };\n    t[R8_SNORM]           = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [1],        type: [BYTE$2], };\n    t[R16F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [4, 2],     type: [FLOAT$2, HALF_FLOAT$1], };\n    t[R32F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: false, bytesPerElement: [4],        type: [FLOAT$2], };\n    t[R8UI]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [UNSIGNED_BYTE$2], };\n    t[R8I]                = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [BYTE$2], };\n    t[R16UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_SHORT$2], };\n    t[R16I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [SHORT$2], };\n    t[R32UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT$2], };\n    t[R32I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [INT$2], };\n    t[RG8]                = { textureFormat: RG,              colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2],        type: [UNSIGNED_BYTE$2], };\n    t[RG8_SNORM]          = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [2],        type: [BYTE$2], };\n    t[RG16F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [8, 4],     type: [FLOAT$2, HALF_FLOAT$1], };\n    t[RG32F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: false, bytesPerElement: [8],        type: [FLOAT$2], };\n    t[RG8UI]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_BYTE$2], };\n    t[RG8I]               = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [BYTE$2], };\n    t[RG16UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_SHORT$2], };\n    t[RG16I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [SHORT$2], };\n    t[RG32UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_INT$2], };\n    t[RG32I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [INT$2], };\n    t[RGB8]               = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE$2], };\n    t[SRGB8]              = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE$2], };\n    t[RGB565]             = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 2],     type: [UNSIGNED_BYTE$2, UNSIGNED_SHORT_5_6_5$1], };\n    t[RGB8_SNORM]         = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [BYTE$2], };\n    t[R11F_G11F_B10F]     = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT$2, HALF_FLOAT$1, UNSIGNED_INT_10F_11F_11F_REV$1], };\n    t[RGB9_E5]            = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT$2, HALF_FLOAT$1, UNSIGNED_INT_5_9_9_9_REV$1], };\n    t[RGB16F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6],    type: [FLOAT$2, HALF_FLOAT$1], };\n    t[RGB32F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [FLOAT$2], };\n    t[RGB8UI]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [UNSIGNED_BYTE$2], };\n    t[RGB8I]              = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [BYTE$2], };\n    t[RGB16UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [UNSIGNED_SHORT$2], };\n    t[RGB16I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [SHORT$2], };\n    t[RGB32UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [UNSIGNED_INT$2], };\n    t[RGB32I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [INT$2], };\n    t[RGBA8]              = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE$2], };\n    t[SRGB8_ALPHA8]       = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE$2], };\n    t[RGBA8_SNORM]        = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [4],        type: [BYTE$2], };\n    t[RGB5_A1]            = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2, 4],  type: [UNSIGNED_BYTE$2, UNSIGNED_SHORT_5_5_5_1$1, UNSIGNED_INT_2_10_10_10_REV$1], };\n    t[RGBA4]              = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2],     type: [UNSIGNED_BYTE$2, UNSIGNED_SHORT_4_4_4_4$1], };\n    t[RGB10_A2]           = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV$1], };\n    t[RGBA16F]            = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [16, 8],    type: [FLOAT$2, HALF_FLOAT$1], };\n    t[RGBA32F]            = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: false, bytesPerElement: [16],       type: [FLOAT$2], };\n    t[RGBA8UI]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_BYTE$2], };\n    t[RGBA8I]             = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [BYTE$2], };\n    t[RGB10_A2UI]         = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV$1], };\n    t[RGBA16UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_SHORT$2], };\n    t[RGBA16I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [SHORT$2], };\n    t[RGBA32I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [INT$2], };\n    t[RGBA32UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [UNSIGNED_INT$2], };\n    // Sized Internal\n    t[DEPTH_COMPONENT16]  = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [2, 4],     type: [UNSIGNED_SHORT$2, UNSIGNED_INT$2], };\n    t[DEPTH_COMPONENT24]  = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT$2], };\n    t[DEPTH_COMPONENT32F] = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT$2], };\n    t[DEPTH24_STENCIL8]   = { textureFormat: DEPTH_STENCIL,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_24_8$1], };\n    t[DEPTH32F_STENCIL8]  = { textureFormat: DEPTH_STENCIL,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT_32_UNSIGNED_INT_24_8_REV$1], };\n\n    Object.keys(t).forEach(function(internalFormat) {\n      const info = t[internalFormat];\n      info.bytesPerElementMap = {};\n      info.bytesPerElement.forEach(function(bytesPerElement, ndx) {\n        const type = info.type[ndx];\n        info.bytesPerElementMap[type] = bytesPerElement;\n      });\n    });\n    s_textureInternalFormatInfo = t;\n  }\n  return s_textureInternalFormatInfo[internalFormat];\n}\n\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  const bytesPerElement = info.bytesPerElementMap[type];\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n  return bytesPerElement;\n}\n\n/**\n * Info related to a specific texture internalFormat as returned\n * from {@link module:twgl/textures.getFormatAndTypeForInternalFormat}.\n *\n * @typedef {Object} TextureFormatInfo\n * @property {number} format Format to pass to texImage2D and related functions\n * @property {number} type Type to pass to texImage2D and related functions\n * @memberOf module:twgl/textures\n */\n\n/**\n * Gets the format and type for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {module:twgl/textures.TextureFormatInfo} the corresponding format and type,\n * @memberOf module:twgl/textures\n */\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return {\n    format: info.textureFormat,\n    type: info.type[0],\n  };\n}\n\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n * @private\n */\nfunction isPowerOf2(value) {\n  return (value & (value - 1)) === 0;\n}\n\n/**\n * Gets whether or not we can generate mips for the given\n * internal format.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number} width The width parameter from texImage2D etc..\n * @param {number} height The height parameter from texImage2D etc..\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\nfunction canGenerateMipmap(gl, width, height, internalFormat) {\n  if (!isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return info.colorRenderable && info.textureFilterable;\n}\n\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\nfunction canFilter(internalFormat) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return info.textureFilterable;\n}\n\n/**\n * Gets the number of components for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\nfunction getNumComponentsForFormat(format) {\n  const info = formatInfo[format];\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n  return info.numColorComponents;\n}\n\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n * @private\n */\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer$1(src)) {\n    return getGLTypeForTypedArray(src);\n  }\n  return defaultType || UNSIGNED_BYTE$2;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n  if (!width && !height) {\n    const size = Math.sqrt(numElements / (target === TEXTURE_CUBE_MAP ? 6 : 1));\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n  return {\n    width: width,\n    height: height,\n  };\n}\n\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\nfunction setDefaultTextureColor(color) {\n  defaults$1.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults$1(newDefaults) {\n  copyExistingProperties(newDefaults, defaults$1);\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number[]|ArrayBufferView} [color] Color to initialize this texture with if loading an image asynchronously.\n *     The default use a blue 1x1 pixel texture. You can set another default by calling `twgl.setDefaults`\n *     or you can set an individual texture's initial color by setting this property. Example: `[1, .5, .5, 1]` = pink\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediately. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then each entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction setPackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    gl.pixelStorei(UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\n  }\n  if (options.premultiplyAlpha !== undefined) {\n    gl.pixelStorei(UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\n  }\n  if (options.flipY !== undefined) {\n    gl.pixelStorei(UNPACK_FLIP_Y_WEBGL, options.flipY);\n  }\n}\n\n/**\n * Set skip state to defaults\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction setSkipStateToDefault(gl) {\n  gl.pixelStorei(UNPACK_ALIGNMENT, 4);\n  if (isWebGL2(gl)) {\n    gl.pixelStorei(UNPACK_ROW_LENGTH, 0);\n    gl.pixelStorei(UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(UNPACK_SKIP_PIXELS, 0);\n    gl.pixelStorei(UNPACK_SKIP_ROWS, 0);\n    gl.pixelStorei(UNPACK_SKIP_IMAGES, 0);\n  }\n}\n\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParameteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @private\n */\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, TEXTURE_MAG_FILTER, options.minMag);\n  }\n  if (options.min) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_FILTER, options.min);\n  }\n  if (options.mag) {\n    parameteriFn.call(gl, target, TEXTURE_MAG_FILTER, options.mag);\n  }\n  if (options.wrap) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, TEXTURE_WRAP_T, options.wrap);\n    if (target === TEXTURE_3D || isSampler(gl, target)) {\n      parameteriFn.call(gl, target, TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_R, options.wrapR);\n  }\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_S, options.wrapS);\n  }\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_T, options.wrapT);\n  }\n  if (options.minLod) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_LOD, options.minLod);\n  }\n  if (options.maxLod) {\n    parameteriFn.call(gl, target, TEXTURE_MAX_LOD, options.maxLod);\n  }\n  if (options.baseLevel) {\n    parameteriFn.call(gl, target, TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n  if (options.maxLevel) {\n    parameteriFn.call(gl, target, TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n}\n\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureParameters(gl, tex, options) {\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n * @private\n */\nfunction createSampler(gl, options) {\n  const sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n * @private\n */\nfunction createSamplers(gl, samplerOptions) {\n  const samplers = {};\n  Object.keys(samplerOptions).forEach(function(name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n * @private\n */\nfunction make1Pixel(color) {\n  color = color || defaults$1.textureColor;\n  if (isArrayBuffer$1(color)) {\n    return color;\n  }\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @memberOf module:twgl/textures\n */\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat) {\n  options = options || defaults$1.textureOptions;\n  internalFormat = internalFormat || RGBA;\n  const target = options.target || TEXTURE_2D;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n  if (canGenerateMipmap(gl, width, height, internalFormat)) {\n    gl.generateMipmap(target);\n  } else {\n    const filtering = canFilter(internalFormat) ? LINEAR : NEAREST;\n    gl.texParameteri(target, TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(target, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || (options.auto === undefined && options.level === undefined);\n}\n\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n * @private\n */\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [\n      TEXTURE_CUBE_MAP_POSITIVE_X,\n      TEXTURE_CUBE_MAP_NEGATIVE_X,\n      TEXTURE_CUBE_MAP_POSITIVE_Y,\n      TEXTURE_CUBE_MAP_NEGATIVE_Y,\n      TEXTURE_CUBE_MAP_POSITIVE_Z,\n      TEXTURE_CUBE_MAP_NEGATIVE_Z,\n    ];\n}\n\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundant but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n * @private\n */\nfunction getCubeFacesWithNdx(gl, options) {\n  const faces = getCubeFaceOrder(gl, options);\n  // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n  const facesWithNdx = faces.map(function(face, ndx) {\n    return { face: face, ndx: ndx };\n  });\n  facesWithNdx.sort(function(a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults$1.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  const level = options.level || 0;\n  let width = element.width;\n  let height = element.height;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || formatType.type;\n  setPackState(gl, options);\n  gl.bindTexture(target, tex);\n  if (target === TEXTURE_CUBE_MAP) {\n    // guess the parts\n    const imgWidth  = element.width;\n    const imgHeight = element.height;\n    let size;\n    let slices;\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n    const ctx = getShared2DContext();\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\n        const xOffset = slices[f.ndx * 2 + 0] * size;\n        const yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      });\n      // Free up the canvas memory\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (typeof createImageBitmap !== 'undefined') {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\n        const xOffset = slices[f.ndx * 2 + 0] * size;\n        const yOffset = slices[f.ndx * 2 + 1] * size;\n        // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be un-renderable.\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n        createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none',\n        })\n        .then(function(imageBitmap) {\n          setPackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n          }\n        });\n      });\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    const smallest = Math.min(element.width, element.height);\n    const largest = Math.max(element.width, element.height);\n    const depth = largest / smallest;\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n    const xMult = element.width  === largest ? 1 : 0;\n    const yMult = element.height === largest ? 1 : 0;\n    gl.pixelStorei(UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n    for (let d = 0; d < depth; ++d) {\n      const srcX = d * smallest * xMult;\n      const srcY = d * smallest * yMult;\n      gl.pixelStorei(UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n    setSkipStateToDefault(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n  }\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {\n}\n\n/**\n * Checks whether the url's origin is the same so that we can set the `crossOrigin`\n * @param {string} url url to image\n * @returns {boolean} true if the window's origin is the same as image's url\n * @private\n */\nfunction urlIsSameOrigin(url) {\n  if (typeof document !== 'undefined') {\n    // for IE really\n    const a = document.createElement('a');\n    a.href = url;\n    return a.hostname === location.hostname &&\n           a.port     === location.port &&\n           a.protocol === location.protocol;\n  } else {\n    const localOrigin = (new URL(location.href)).origin;\n    const urlOrigin = (new URL(url, location.href)).origin;\n    return urlOrigin === localOrigin;\n  }\n}\n\nfunction setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin) {\n  return crossOrigin === undefined && !urlIsSameOrigin(url)\n     ? 'anonymous'\n     : crossOrigin;\n}\n\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n * @private\n */\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  let img;\n  crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults$1.crossOrigin;\n  crossOrigin = setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin);\n  if (typeof Image !== 'undefined') {\n    img = new Image();\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    const clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError);  // eslint-disable-line\n      img.removeEventListener('load', onLoad);  // eslint-disable-line\n      img = null;\n    };\n\n    const onError = function onError() {\n      const msg = \"couldn't load image: \" + url;\n      error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    const onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (typeof ImageBitmap !== 'undefined') {\n    let err;\n    let bm;\n    const cb = function cb() {\n      callback(err, bm);\n    };\n\n    const options = {};\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n    fetch(url, options).then(function(response) {\n      if (!response.ok) {\n        throw response;\n      }\n      return response.blob();\n    }).then(function(blob) {\n      return createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none',\n      });\n    }).then(function(bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function(e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n  return img;\n}\n\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n * @private\n */\nfunction isTexImageSource(obj) {\n  return (typeof ImageBitmap !== 'undefined' && obj instanceof ImageBitmap) ||\n         (typeof ImageData !== 'undefined'  && obj instanceof ImageData) ||\n         (typeof HTMLElement !== 'undefined'  && obj instanceof HTMLElement);\n}\n\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @private\n */\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function() {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults$1.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  if (options.color === false) {\n    return;\n  }\n  // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n  const color = make1Pixel(options.color);\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, RGBA, 1, 1, 0, RGBA, UNSIGNED_BYTE$2, color);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, 0, RGBA, 1, 1, 1, 0, RGBA, UNSIGNED_BYTE$2, color);\n  } else {\n    gl.texImage2D(target, 0, RGBA, 1, 1, 0, RGBA, UNSIGNED_BYTE$2, color);\n  }\n}\n\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} source image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as appropriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults$1.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  const img = loadAndUseImage(options.src, options.crossOrigin, function(err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  const urls = options.src;\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || UNSIGNED_BYTE$2;\n  const target = options.target || TEXTURE_2D;\n  if (target !== TEXTURE_CUBE_MAP) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  let numToLoad = 6;\n  const errors = [];\n  const faces = getCubeFaceOrder(gl, options);\n  let imgs;  // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function(err, img) {\n      --numToLoad;\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          setPackState(gl, options);\n          gl.bindTexture(target, tex);\n\n          // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder().forEach(function(otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function(url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  const urls = options.src;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || UNSIGNED_BYTE$2;\n  const target = options.target || TEXTURE_2D_ARRAY;\n  if (target !== TEXTURE_3D && target !== TEXTURE_2D_ARRAY) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  let numToLoad = urls.length;\n  const errors = [];\n  let imgs;  // eslint-disable-line\n  const level = options.level || 0;\n  let width = options.width;\n  let height = options.height;\n  const depth = urls.length;\n  let firstImage = true;\n\n  function uploadImg(slice) {\n    return function(err, img) {\n      --numToLoad;\n      if (err) {\n        errors.push(err);\n      } else {\n        setPackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null);\n\n          // put it in every slice otherwise some slices will be 0,0,0,0\n          for (let s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          let src = img;\n          let ctx;\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            ctx = getShared2DContext();\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src);\n\n          // free the canvas memory\n          if (ctx && src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function(url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults$1.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  let width = options.width;\n  let height = options.height;\n  let depth = options.depth;\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  if (!isArrayBuffer$1(src)) {\n    const Type = getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  const bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  const numElements = src.byteLength / bytesPerElement;  // TODO: check UNPACK_ALIGNMENT?\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + glEnumToString(gl, format);\n  }\n  let dimensions;\n  if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    if (!width && !height && !depth) {\n      const size = Math.cbrt(numElements);\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n  setSkipStateToDefault(gl);\n  gl.pixelStorei(UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  setPackState(gl, options);\n  if (target === TEXTURE_CUBE_MAP) {\n    const elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    const faceSize = numElements / 6 * elementsPerElement;\n\n    getCubeFacesWithNdx(gl, options).forEach(f => {\n      const offset = faceSize * f.ndx;\n      const data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type,\n  };\n}\n\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\nfunction setEmptyTexture(gl, tex, options) {\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || formatType.type;\n  setPackState(gl, options);\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n}\n\n/**\n * Creates a texture based on the options passed in.\n *\n * Note: may reset UNPACK_ALIGNMENT, UNPACK_ROW_LENGTH, UNPACK_IMAGE_HEIGHT, UNPACK_SKIP_IMAGES\n * UNPACK_SKIP_PIXELS, and UNPACK_SKIP_ROWS\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults$1.textureOptions;\n  const tex = gl.createTexture();\n  const target = options.target || TEXTURE_2D;\n  let width  = options.width  || 1;\n  let height = options.height || 1;\n  const internalFormat = options.internalFormat || RGBA;\n  gl.bindTexture(target, tex);\n  if (target === TEXTURE_CUBE_MAP) {\n    // this should have been the default for cubemaps :(\n    gl.texParameteri(target, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(target, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n  }\n  let src = options.src;\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n    if (typeof (src) === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer$1(src) ||\n               (Array.isArray(src) && (\n                    typeof src[0] === 'number' ||\n                    Array.isArray(src[0]) ||\n                    isArrayBuffer$1(src[0]))\n               )\n              ) {\n      const dimensions = setTextureFromArray(gl, tex, src, options);\n      width  = dimensions.width;\n      height = dimensions.height;\n    } else if (Array.isArray(src) && (typeof (src[0]) === 'string' || isTexImageSource(src[0]))) {\n      if (target === TEXTURE_CUBE_MAP) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else { // if (isTexImageSource(src))\n      setTextureFromElement(gl, tex, src, options);\n      width  = src.width;\n      height = src.height;\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n  }\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @param {number} [depth] the new depth. If not passed in will use `options.depth`\n * @memberOf module:twgl/textures\n */\nfunction resizeTexture(gl, tex, options, width, height, depth) {\n  width = width || options.width;\n  height = height || options.height;\n  depth = depth || options.depth;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  let type;\n  const src = options.src;\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer$1(src) || (Array.isArray(src) && typeof (src[0]) === 'number')) {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n * @private\n */\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' ||\n         (Array.isArray(src) && typeof src[0] === 'string');\n}\n\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  let numDownloading = 0;\n  const errors = [];\n  const textures = {};\n  const images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function() {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function(name) {\n    const options = textureOptions[name];\n    let onLoadFn;\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n        if (err) {\n          errors.push(err);\n        }\n        callCallbackIfReady();\n      };\n      ++numDownloading;\n    }\n    textures[name] = createTexture(gl, options, onLoadFn);\n  });\n\n  // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n  callCallbackIfReady();\n\n  return textures;\n}\n\nvar textures = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  setTextureDefaults_: setDefaults$1,\n  createSampler: createSampler,\n  createSamplers: createSamplers,\n  setSamplerParameters: setSamplerParameters,\n  createTexture: createTexture,\n  setEmptyTexture: setEmptyTexture,\n  setTextureFromArray: setTextureFromArray,\n  loadTextureFromUrl: loadTextureFromUrl,\n  setTextureFromElement: setTextureFromElement,\n  setTextureFilteringForSize: setTextureFilteringForSize,\n  setTextureParameters: setTextureParameters,\n  setDefaultTextureColor: setDefaultTextureColor,\n  createTextures: createTextures,\n  resizeTexture: resizeTexture,\n  canGenerateMipmap: canGenerateMipmap,\n  canFilter: canFilter,\n  getNumComponentsForFormat: getNumComponentsForFormat,\n  getBytesPerElementForInternalFormat: getBytesPerElementForInternalFormat,\n  getFormatAndTypeForInternalFormat: getFormatAndTypeForInternalFormat\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\n\nconst error$1 = error;\nconst warn$1 = warn;\nfunction getElementById(id) {\n  return (typeof document !== 'undefined' && document.getElementById)\n      ? document.getElementById(id)\n      : null;\n}\n\nconst TEXTURE0                       = 0x84c0;\nconst DYNAMIC_DRAW                   = 0x88e8;\n\nconst ARRAY_BUFFER$1                   = 0x8892;\nconst ELEMENT_ARRAY_BUFFER$1           = 0x8893;\nconst UNIFORM_BUFFER                 = 0x8a11;\nconst TRANSFORM_FEEDBACK_BUFFER      = 0x8c8e;\n\nconst TRANSFORM_FEEDBACK             = 0x8e22;\n\nconst COMPILE_STATUS                 = 0x8b81;\nconst LINK_STATUS                    = 0x8b82;\nconst FRAGMENT_SHADER                = 0x8b30;\nconst VERTEX_SHADER                  = 0x8b31;\nconst SEPARATE_ATTRIBS               = 0x8c8d;\n\nconst ACTIVE_UNIFORMS                = 0x8b86;\nconst ACTIVE_ATTRIBUTES              = 0x8b89;\nconst TRANSFORM_FEEDBACK_VARYINGS    = 0x8c83;\nconst ACTIVE_UNIFORM_BLOCKS          = 0x8a36;\nconst UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER   = 0x8a44;\nconst UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46;\nconst UNIFORM_BLOCK_DATA_SIZE                     = 0x8a40;\nconst UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES        = 0x8a43;\n\nconst FLOAT$3                         = 0x1406;\nconst FLOAT_VEC2                    = 0x8B50;\nconst FLOAT_VEC3                    = 0x8B51;\nconst FLOAT_VEC4                    = 0x8B52;\nconst INT$3                           = 0x1404;\nconst INT_VEC2                      = 0x8B53;\nconst INT_VEC3                      = 0x8B54;\nconst INT_VEC4                      = 0x8B55;\nconst BOOL                          = 0x8B56;\nconst BOOL_VEC2                     = 0x8B57;\nconst BOOL_VEC3                     = 0x8B58;\nconst BOOL_VEC4                     = 0x8B59;\nconst FLOAT_MAT2                    = 0x8B5A;\nconst FLOAT_MAT3                    = 0x8B5B;\nconst FLOAT_MAT4                    = 0x8B5C;\nconst SAMPLER_2D                    = 0x8B5E;\nconst SAMPLER_CUBE                  = 0x8B60;\nconst SAMPLER_3D                    = 0x8B5F;\nconst SAMPLER_2D_SHADOW             = 0x8B62;\nconst FLOAT_MAT2x3                  = 0x8B65;\nconst FLOAT_MAT2x4                  = 0x8B66;\nconst FLOAT_MAT3x2                  = 0x8B67;\nconst FLOAT_MAT3x4                  = 0x8B68;\nconst FLOAT_MAT4x2                  = 0x8B69;\nconst FLOAT_MAT4x3                  = 0x8B6A;\nconst SAMPLER_2D_ARRAY              = 0x8DC1;\nconst SAMPLER_2D_ARRAY_SHADOW       = 0x8DC4;\nconst SAMPLER_CUBE_SHADOW           = 0x8DC5;\nconst UNSIGNED_INT$3                  = 0x1405;\nconst UNSIGNED_INT_VEC2             = 0x8DC6;\nconst UNSIGNED_INT_VEC3             = 0x8DC7;\nconst UNSIGNED_INT_VEC4             = 0x8DC8;\nconst INT_SAMPLER_2D                = 0x8DCA;\nconst INT_SAMPLER_3D                = 0x8DCB;\nconst INT_SAMPLER_CUBE              = 0x8DCC;\nconst INT_SAMPLER_2D_ARRAY          = 0x8DCF;\nconst UNSIGNED_INT_SAMPLER_2D       = 0x8DD2;\nconst UNSIGNED_INT_SAMPLER_3D       = 0x8DD3;\nconst UNSIGNED_INT_SAMPLER_CUBE     = 0x8DD4;\nconst UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\n\nconst TEXTURE_2D$1                    = 0x0DE1;\nconst TEXTURE_CUBE_MAP$1              = 0x8513;\nconst TEXTURE_3D$1                    = 0x806F;\nconst TEXTURE_2D_ARRAY$1              = 0x8C1A;\n\nconst typeMap = {};\n\n/**\n * Returns the corresponding bind point for a given sampler type\n */\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n}\n\n// This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\nfunction floatSetter(gl, location) {\n  return function(v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function(v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function(v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  return isWebGL2(gl) ? function(textureOrPair) {\n    let texture;\n    let sampler;\n    if (isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function(texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  const units = new Int32Array(size);\n  for (let ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return isWebGL2(gl) ? function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(textureOrPair, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      let texture;\n      let sampler;\n      if (isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(texture, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT$3]                         = { Type: Float32Array, size:  4, setter: floatSetter,      arraySetter: floatArraySetter, };\ntypeMap[FLOAT_VEC2]                    = { Type: Float32Array, size:  8, setter: floatVec2Setter,  cols: 2, };\ntypeMap[FLOAT_VEC3]                    = { Type: Float32Array, size: 12, setter: floatVec3Setter,  cols: 3, };\ntypeMap[FLOAT_VEC4]                    = { Type: Float32Array, size: 16, setter: floatVec4Setter,  cols: 4, };\ntypeMap[INT$3]                           = { Type: Int32Array,   size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[INT_VEC2]                      = { Type: Int32Array,   size:  8, setter: intVec2Setter,    cols: 2, };\ntypeMap[INT_VEC3]                      = { Type: Int32Array,   size: 12, setter: intVec3Setter,    cols: 3, };\ntypeMap[INT_VEC4]                      = { Type: Int32Array,   size: 16, setter: intVec4Setter,    cols: 4, };\ntypeMap[UNSIGNED_INT$3]                  = { Type: Uint32Array,  size:  4, setter: uintSetter,       arraySetter: uintArraySetter, };\ntypeMap[UNSIGNED_INT_VEC2]             = { Type: Uint32Array,  size:  8, setter: uintVec2Setter,   cols: 2, };\ntypeMap[UNSIGNED_INT_VEC3]             = { Type: Uint32Array,  size: 12, setter: uintVec3Setter,   cols: 3, };\ntypeMap[UNSIGNED_INT_VEC4]             = { Type: Uint32Array,  size: 16, setter: uintVec4Setter,   cols: 4, };\ntypeMap[BOOL]                          = { Type: Uint32Array,  size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[BOOL_VEC2]                     = { Type: Uint32Array,  size:  8, setter: intVec2Setter,    cols: 2, };\ntypeMap[BOOL_VEC3]                     = { Type: Uint32Array,  size: 12, setter: intVec3Setter,    cols: 3, };\ntypeMap[BOOL_VEC4]                     = { Type: Uint32Array,  size: 16, setter: intVec4Setter,    cols: 4, };\ntypeMap[FLOAT_MAT2]                    = { Type: Float32Array, size: 32, setter: floatMat2Setter,  rows: 2, cols: 2, };\ntypeMap[FLOAT_MAT3]                    = { Type: Float32Array, size: 48, setter: floatMat3Setter,  rows: 3, cols: 3, };\ntypeMap[FLOAT_MAT4]                    = { Type: Float32Array, size: 64, setter: floatMat4Setter,  rows: 4, cols: 4, };\ntypeMap[FLOAT_MAT2x3]                  = { Type: Float32Array, size: 32, setter: floatMat23Setter, rows: 2, cols: 3, };\ntypeMap[FLOAT_MAT2x4]                  = { Type: Float32Array, size: 32, setter: floatMat24Setter, rows: 2, cols: 4, };\ntypeMap[FLOAT_MAT3x2]                  = { Type: Float32Array, size: 48, setter: floatMat32Setter, rows: 3, cols: 2, };\ntypeMap[FLOAT_MAT3x4]                  = { Type: Float32Array, size: 48, setter: floatMat34Setter, rows: 3, cols: 4, };\ntypeMap[FLOAT_MAT4x2]                  = { Type: Float32Array, size: 64, setter: floatMat42Setter, rows: 4, cols: 2, };\ntypeMap[FLOAT_MAT4x3]                  = { Type: Float32Array, size: 64, setter: floatMat43Setter, rows: 4, cols: 3, };\ntypeMap[SAMPLER_2D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[SAMPLER_CUBE]                  = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[SAMPLER_3D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D$1,       };\ntypeMap[SAMPLER_2D_SHADOW]             = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[SAMPLER_2D_ARRAY]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\ntypeMap[SAMPLER_2D_ARRAY_SHADOW]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\ntypeMap[SAMPLER_CUBE_SHADOW]           = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[INT_SAMPLER_2D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[INT_SAMPLER_3D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D$1,       };\ntypeMap[INT_SAMPLER_CUBE]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[INT_SAMPLER_2D_ARRAY]          = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[UNSIGNED_INT_SAMPLER_3D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D$1,       };\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE]     = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\n\nfunction floatAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      switch (b.value.length) {\n        case 4:\n          gl.vertexAttrib4fv(index, b.value);\n          break;\n        case 3:\n          gl.vertexAttrib3fv(index, b.value);\n          break;\n        case 2:\n          gl.vertexAttrib2fv(index, b.value);\n          break;\n        case 1:\n          gl.vertexAttrib1fv(index, b.value);\n          break;\n        default:\n          throw new Error('the length of a float constant value must be between 1 and 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribPointer(\n          index, b.numComponents || b.size, b.type || FLOAT$3, b.normalize || false, b.stride || 0, b.offset || 0);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4iv(index, b.value);\n      } else {\n        throw new Error('The length of an integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || INT$3, b.stride || 0, b.offset || 0);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction uintAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4uiv(index, b.value);\n      } else {\n        throw new Error('The length of an unsigned integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || UNSIGNED_INT$3, b.stride || 0, b.offset || 0);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  const defaultSize = typeInfo.size;\n  const count = typeInfo.count;\n\n  return function(b) {\n    gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n    const numComponents = b.size || b.numComponents || defaultSize;\n    const size = numComponents / count;\n    const type = b.type || FLOAT$3;\n    const typeInfo = typeMap[type];\n    const stride = typeInfo.size * numComponents;\n    const normalize = b.normalize || false;\n    const offset = b.offset || 0;\n    const rowOffset = stride / count;\n    for (let i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(\n          index + i, size, type, normalize, stride, offset + rowOffset * i);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index + i, b.divisor);\n      }\n    }\n  };\n}\n\n\n\nconst attrTypeMap = {};\nattrTypeMap[FLOAT$3]             = { size:  4, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC2]        = { size:  8, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC3]        = { size: 12, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC4]        = { size: 16, setter: floatAttribSetter, };\nattrTypeMap[INT$3]               = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC2]          = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC3]          = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC4]          = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[UNSIGNED_INT$3]      = { size:  4, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC2] = { size:  8, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC3] = { size: 12, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC4] = { size: 16, setter: uintAttribSetter,  };\nattrTypeMap[BOOL]              = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC2]         = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC3]         = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC4]         = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[FLOAT_MAT2]        = { size:  4, setter: matAttribSetter,   count: 2, };\nattrTypeMap[FLOAT_MAT3]        = { size:  9, setter: matAttribSetter,   count: 3, };\nattrTypeMap[FLOAT_MAT4]        = { size: 16, setter: matAttribSetter,   count: 4, };\n\nconst errorRE = /ERROR:\\s*\\d+:(\\d+)/gi;\nfunction addLineNumbersWithError(src, log = '', lineOffset = 0) {\n  // Note: Error message formats are not defined by any spec so this may or may not work.\n  const matches = [...log.matchAll(errorRE)];\n  const lineNoToErrorMap = new Map(matches.map((m, ndx) => {\n    const lineNo = parseInt(m[1]);\n    const next = matches[ndx + 1];\n    const end = next ? next.index : log.length;\n    const msg = log.substring(m.index, end);\n    return [lineNo - 1, msg];\n  }));\n  return src.split('\\n').map((line, lineNo) => {\n    const err = lineNoToErrorMap.get(lineNo);\n    return `${lineNo + 1 + lineOffset}: ${line}${err ? `\\n\\n^^^ ${err}` : ''}`;\n  }).join('\\n');\n}\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\nconst spaceRE = /^[ \\t]*\\n/;\n\n/**\n * Loads a shader.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors.\n * @return {WebGLShader} The created shader.\n * @private\n */\nfunction loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n  const errFn = opt_errorCallback || error$1;\n  // Create the shader object\n  const shader = gl.createShader(shaderType);\n\n  // Remove the first end of line because WebGL 2.0 requires\n  // #version 300 es\n  // as the first line. No whitespace allowed before that line\n  // so\n  //\n  // <script>\n  // #version 300 es\n  // </script>\n  //\n  // Has one line before it which is invalid according to GLSL ES 3.00\n  //\n  let lineOffset = 0;\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  }\n\n  // Load the shader source\n  gl.shaderSource(shader, shaderSource);\n\n  // Compile the shader\n  gl.compileShader(shader);\n\n  // Check the compile status\n  const compiled = gl.getShaderParameter(shader, COMPILE_STATUS);\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    const lastError = gl.getShaderInfoLog(shader);\n    errFn(`${addLineNumbersWithError(shaderSource, lastError, lineOffset)}\\nError compiling ${glEnumToString(gl, shaderType)}: ${lastError}`);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>} [attribLocations] a attribute name to location map\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments passed in\n * @private\n */\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  let transformFeedbackVaryings;\n  let transformFeedbackMode;\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    // If we have an errorCallback we can just return this object\n    // Otherwise we need to construct one with default errorCallback\n    if (opt_attribs.errorCallback) {\n      return opt_attribs;\n    }\n    const opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n    transformFeedbackMode = opt.transformFeedbackMode;\n  }\n\n  const options = {\n    errorCallback: opt_errorCallback || error$1,\n    transformFeedbackVaryings: transformFeedbackVaryings,\n    transformFeedbackMode: transformFeedbackMode,\n  };\n\n  if (opt_attribs) {\n    let attribLocations = {};\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function(attrib,  ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs;\n    }\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nconst defaultShaderType = [\n  \"VERTEX_SHADER\",\n  \"FRAGMENT_SHADER\",\n];\n\nfunction getShaderTypeFromScriptType(gl, scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return VERTEX_SHADER;\n  }\n  return undefined;\n}\n\nfunction deleteShaders(gl, shaders) {\n  shaders.forEach(function(shader) {\n    gl.deleteShader(shader);\n  });\n}\n\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program and calls useProgram.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\nfunction createProgram(\n    gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const realShaders = [];\n  const newShaders = [];\n  for (let ndx = 0; ndx < shaders.length; ++ndx) {\n    let shader = shaders[ndx];\n    if (typeof (shader) === 'string') {\n      const elem = getElementById(shader);\n      const src = elem ? elem.text : shader;\n      let type = gl[defaultShaderType[ndx]];\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(gl, elem.type) || type;\n      }\n      shader = loadShader(gl, src, type, progOptions.errorCallback);\n      newShaders.push(shader);\n    }\n    if (isShader(gl, shader)) {\n      realShaders.push(shader);\n    }\n  }\n\n  if (realShaders.length !== shaders.length) {\n    progOptions.errorCallback(\"not enough shaders for program\");\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  const program = gl.createProgram();\n  realShaders.forEach(function(shader) {\n    gl.attachShader(program, shader);\n  });\n  if (progOptions.attribLocations) {\n    Object.keys(progOptions.attribLocations).forEach(function(attrib) {\n      gl.bindAttribLocation(program, progOptions.attribLocations[attrib], attrib);\n    });\n  }\n  let varyings = progOptions.transformFeedbackVaryings;\n  if (varyings) {\n    if (varyings.attribs) {\n      varyings = varyings.attribs;\n    }\n    if (!Array.isArray(varyings)) {\n      varyings = Object.keys(varyings);\n    }\n    gl.transformFeedbackVaryings(program, varyings, progOptions.transformFeedbackMode || SEPARATE_ATTRIBS);\n  }\n  gl.linkProgram(program);\n\n  // Check the link status\n  const linked = gl.getProgramParameter(program, LINK_STATUS);\n  if (!linked) {\n    // something went wrong with the link\n    const lastError = gl.getProgramInfoLog(program);\n    progOptions.errorCallback(`${\n      realShaders.map(shader => {\n        const src = addLineNumbersWithError(gl.getShaderSource(shader), '', 0);\n        const type = gl.getShaderParameter(shader, gl.SHADER_TYPE);\n        return `${glEnumToString(gl, type)}\\n${src}}`;\n      }).join('\\n')\n    }\\nError in program linking: ${lastError}`);\n\n    gl.deleteProgram(program);\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n  return program;\n}\n\n/**\n * Loads a shader from a script tag.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} scriptId The id of the script tag.\n * @param {number} [opt_shaderType] The type of shader. If not passed in it will\n *     be derived from the type of the script tag.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors.\n * @return {WebGLShader?} The created shader or null if error.\n * @private\n */\nfunction createShaderFromScript(\n    gl, scriptId, opt_shaderType, opt_errorCallback) {\n  let shaderSource = \"\";\n  const shaderScript = getElementById(scriptId);\n  if (!shaderScript) {\n    throw new Error(`unknown script element: ${scriptId}`);\n  }\n  shaderSource = shaderScript.text;\n\n  const shaderType = opt_shaderType || getShaderTypeFromScriptType(gl, shaderScript.type);\n  if (!shaderType) {\n    throw new Error('unknown shader type');\n  }\n\n  return loadShader(gl, shaderSource, shaderType, opt_errorCallback);\n}\n\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\nfunction createProgramFromScripts(\n    gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const shaders = [];\n  for (let ii = 0; ii < shaderScriptIds.length; ++ii) {\n    const shader = createShaderFromScript(\n        gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n    if (!shader) {\n      return null;\n    }\n    shaders.push(shader);\n  }\n  return createProgram(gl, shaders, progOptions);\n}\n\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\nfunction createProgramFromSources(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const shaders = [];\n  for (let ii = 0; ii < shaderSources.length; ++ii) {\n    const shader = loadShader(\n        gl, shaderSources[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n    if (!shader) {\n      return null;\n    }\n    shaders.push(shader);\n  }\n  return createProgram(gl, shaders, progOptions);\n}\n\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n * @private\n */\nfunction isBuiltIn(info) {\n  const name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n\nconst tokenRE = /(\\.|\\[|]|\\w+)/g;\nconst isDigit = s => s >= '0' && s <= '9';\nfunction addSetterToUniformTree(fullPath, setter, node, uniformSetters) {\n  const tokens = fullPath.split(tokenRE).filter(s => s !== '');\n  let tokenNdx = 0;\n  let path = '';\n\n  for (;;) {\n    const token = tokens[tokenNdx++];  // has to be name or number\n    path += token;\n    const isArrayIndex = isDigit(token[0]);\n    const accessor = isArrayIndex\n        ? parseInt(token)\n        : token;\n    if (isArrayIndex) {\n      path += tokens[tokenNdx++];  // skip ']'\n    }\n    const isLastToken = tokenNdx === tokens.length;\n    if (isLastToken) {\n      node[accessor] = setter;\n      break;\n    } else {\n      const token = tokens[tokenNdx++];  // has to be . or [\n      const isArray = token === '[';\n      const child = node[accessor] || (isArray ? [] : {});\n      node[accessor] = child;\n      node = child;\n      uniformSetters[path] = uniformSetters[path] || function(node) {\n        return function(value) {\n          setUniformTree(node, value);\n        };\n      }(child);\n      path += token;\n    }\n  }\n}\n\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\nfunction createUniformSetters(gl, program) {\n  let textureUnit = 0;\n\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n  function createUniformSetter(program, uniformInfo, location) {\n    const isArray = uniformInfo.name.endsWith(\"[0]\");\n    const type = uniformInfo.type;\n    const typeInfo = typeMap[type];\n    if (!typeInfo) {\n      throw new Error(`unknown type: 0x${type.toString(16)}`); // we should never get here.\n    }\n    let setter;\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      const unit = textureUnit;\n      textureUnit += uniformInfo.size;\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n    setter.location = location;\n    return setter;\n  }\n\n  const uniformSetters = {};\n  const uniformTree = {};\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    if (isBuiltIn(uniformInfo)) {\n      continue;\n    }\n    let name = uniformInfo.name;\n    // remove the array suffix.\n    if (name.endsWith(\"[0]\")) {\n      name = name.substr(0, name.length - 3);\n    }\n    const location = gl.getUniformLocation(program, uniformInfo.name);\n    // the uniform will have no location if it's in a uniform block\n    if (location) {\n      const setter = createUniformSetter(program, uniformInfo, location);\n      uniformSetters[name] = setter;\n      addSetterToUniformTree(name, setter, uniformTree, uniformSetters);\n    }\n  }\n\n  return uniformSetters;\n}\n\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\nfunction createTransformFeedbackInfo(gl, program) {\n  const info = {};\n  const numVaryings = gl.getProgramParameter(program, TRANSFORM_FEEDBACK_VARYINGS);\n  for (let ii = 0; ii < numVaryings; ++ii) {\n    const varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size,\n    };\n  }\n  return info;\n}\n\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n  for (const name in bufferInfo) {\n    const varying = transformFeedbackInfo[name];\n    if (varying) {\n      const buf = bufferInfo[name];\n      if (buf.offset) {\n        gl.bindBufferRange(TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  const tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(TRANSFORM_FEEDBACK, null);\n  return tf;\n}\n\n/**\n * @typedef {Object} UniformData\n * @property {string} name The name of the uniform\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanatory\n * @property {bool} usedByFragmentShader Self explanatory\n * @property {bool} used Self explanatory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec>} blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n  const uniformData = [];\n  const uniformIndices = [];\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [\n    [ \"UNIFORM_TYPE\", \"type\" ],\n    [ \"UNIFORM_SIZE\", \"size\" ],  // num elements\n    [ \"UNIFORM_BLOCK_INDEX\", \"blockNdx\" ],\n    [ \"UNIFORM_OFFSET\", \"offset\", ],\n  ].forEach(function(pair) {\n    const pname = pair[0];\n    const key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function(value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n\n  const blockSpecs = {};\n\n  const numUniformBlocks = gl.getProgramParameter(program, ACTIVE_UNIFORM_BLOCKS);\n  for (let ii = 0; ii < numUniformBlocks; ++ii) {\n    const name = gl.getActiveUniformBlockName(program, ii);\n    const blockSpec = {\n      index: gl.getUniformBlockIndex(program, name),\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES),\n    };\n    blockSpec.used = blockSpec.usedByVertexShader || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData,\n  };\n}\n\nconst arraySuffixRE = /\\[\\d+\\]\\.$/;  // better way to check?\n\nconst pad = (v, padding) => ((v + (padding - 1)) / padding | 0) * padding;\n\nfunction createUniformBlockUniformSetter(view, isArray, rows, cols) {\n  if (isArray || rows) {\n    cols = cols || 1;\n    const numElements = view.length;\n    const totalRows = numElements / 4;\n    return function(value) {\n      let dst = 0;\n      let src = 0;\n      for (let row = 0; row < totalRows; ++row) {\n        for (let col = 0; col < cols; ++col) {\n          view[dst++] = value[src++];\n        }\n        dst += 4 - cols;\n      }\n    };\n  } else {\n    return function(value) {\n      if (value.length) {\n        view.set(value);\n      } else {\n        view[0] = value;\n      }\n    };\n  }\n}\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @property {Object<string, function>} setters A setter for this uniform.\n *   The reason to use setters is elements of arrays are padded to vec4 sizes which\n *   means if you want to set an array of 4 floats you'd need to set 16 values\n *   (or set elements 0, 4, 8, 12). In other words\n *   `someBlockInfo.uniforms.some4FloatArrayUniform.set([0, , , , 1, , , , 2, , , , 3])`\n *   where as the setter handles just passing in [0, 1, 2, 3] either directly as in\n *   `someBlockInfo.setter.some4FloatArrayUniform.set([0, 1, 2, 3])` (not recommended)\n *   or via {@link module:twgl.setBlockUniforms}\n * @memberOf module:twgl\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uniformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n  const blockSpecs = uniformBlockSpec.blockSpecs;\n  const uniformData = uniformBlockSpec.uniformData;\n  const blockSpec = blockSpecs[blockName];\n  if (!blockSpec) {\n    warn$1(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {},\n    };\n  }\n  const array = new ArrayBuffer(blockSpec.size);\n  const buffer = gl.createBuffer();\n  const uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(UNIFORM_BUFFER, buffer);\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n\n  let prefix = blockName + \".\";\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n  const uniforms = {};\n  const setters = {};\n  const setterTree = {};\n  blockSpec.uniformIndices.forEach(function(uniformNdx) {\n    const data = uniformData[uniformNdx];\n    let name = data.name;\n    if (name.startsWith(prefix)) {\n      name = name.substr(prefix.length);\n    }\n    const isArray = name.endsWith('[0]');\n    if (isArray) {\n      name = name.substr(0, name.length - 3);\n    }\n    const typeInfo = typeMap[data.type];\n    const Type = typeInfo.Type;\n    const byteLength = isArray\n        ? pad(typeInfo.size, 16) * data.size\n        : typeInfo.size * data.size;\n    const uniformView = new Type(array, data.offset, byteLength / Type.BYTES_PER_ELEMENT);\n    uniforms[name] = uniformView;\n    // Note: I'm not sure what to do here. The original\n    // idea was to create TypedArray views into each part\n    // of the block. This is useful, for example if you have\n    // a block with { mat4: model; mat4 view; mat4 projection; }\n    // you'll get a Float32Array for each one suitable for\n    // passing to most JS math libraries including twgl's and glMatrix.js.\n    //\n    // But, if you have a an array of structures, especially if that\n    // array is large, you get a whole bunch of TypedArray views.\n    // Every one of them has overhead and switching between them all\n    // is probably a cache miss. In that case it would really be better\n    // to just have one view (asFloat) and have all the setters\n    // just reference the correct portion. But, then you can't easily\n    // treat a matrix, or a vec4, as a standalone thing like you can\n    // with all the views.\n    //\n    // Another problem with the views is they are not shared. With\n    // uniforms you have one set of setters. With UniformBlockInfo\n    // you have a set of setters *pre block instance*. That's because\n    // TypedArray views can't be mapped to different buffers.\n    //\n    // My gut right now is if you really want the speed and compactness\n    // then you should probably roll your own solution. TWGL's goal\n    // here is ease of use as AFAICT there is no simple generic efficient\n    // solution.\n    const setter = createUniformBlockUniformSetter(uniformView, isArray, typeInfo.rows, typeInfo.cols);\n    setters[name] = setter;\n    addSetterToUniformTree(name, setter, setterTree, setters);\n  });\n  return {\n    name: blockName,\n    array,\n    asFloat: new Float32Array(array),  // for debugging\n    buffer,\n    uniforms,\n    setters,\n  };\n}\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n}\n\n/**\n * Binds a uniform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the values into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  const uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  const blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n  if (blockSpec) {\n    const bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferData(UNIFORM_BUFFER, uniformBlockInfo.array, DYNAMIC_DRAW);\n  }\n}\n\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  You can also fill out structure and array values either via\n *  shortcut. Example\n *\n *     // -- in shader --\n *     struct Light {\n *       float intensity;\n *       vec4 color;\n *     };\n *     uniform Lights {\n *       Light lights[2];\n *     };\n *\n *     // in JavaScript\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       lights: [\n *         { intensity: 5.0, color: [1, 0, 0, 1] },\n *         { intensity: 2.0, color: [0, 0, 1, 1] },\n *       ],\n *     });\n *\n *     // or the more traditional way\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       \"lights[0].intensity\": 5.0,\n *       \"lights[0].color\": [1, 0, 0, 1],\n *       \"lights[1].intensity\": 2.0,\n *       \"lights[1].color\": [0, 0, 1, 1],\n *     });\n *\n *   You can also specify partial paths\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       'lights[1]: { intensity: 5.0, color: [1, 0, 0, 1] },\n *     });\n *\n *   But you can not specify leaf array indices.\n *\n *  **IMPORTANT!**, packing in a UniformBlock is unintuitive.\n *  For example the actual layout of `someVec3Array` above in memory\n *  is `1, 2, 3, unused, 4, 5, 6, unused`. twgl takes in 6 values\n *  as shown about and copies them, skipping the padding. This might\n *  be confusing if you're already familiar with Uniform blocks.\n *\n *  If you want to deal with the padding yourself you can access the array\n *  buffer views directly. eg:\n *\n *      someBlockInfo.someVec3Array.set([1, 2, 3, 0, 4, 5, 6, 0]);\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  const setters = uniformBlockInfo.setters;\n  for (const name in values) {\n    const setter = setters[name];\n    if (setter) {\n      const value = values[name];\n      setter(value);\n    }\n  }\n}\n\nfunction setUniformTree(tree, values) {\n  for (const name in values) {\n    const prop = tree[name];\n    if (typeof prop === 'function') {\n      prop(values[name]);\n    } else {\n      setUniformTree(tree[name], values[name]);\n    }\n  }\n}\n\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     var texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n *   You can also fill out structure and array values either via\n *   shortcut. Example\n *\n *     // -- in shader --\n *     struct Light {\n *       float intensity;\n *       vec4 color;\n *     };\n *     uniform Light lights[2];\n *\n *     // in JavaScript\n *\n *     twgl.setUniforms(programInfo, {\n *       lights: [\n *         { intensity: 5.0, color: [1, 0, 0, 1] },\n *         { intensity: 2.0, color: [0, 0, 1, 1] },\n *       ],\n *     });\n *\n *   or the more traditional way\n *\n *     twgl.setUniforms(programInfo, {\n *       \"lights[0].intensity\": 5.0,\n *       \"lights[0].color\": [1, 0, 0, 1],\n *       \"lights[1].intensity\": 2.0,\n *       \"lights[1].color\": [0, 0, 1, 1],\n *     });\n *\n *   You can also specify partial paths\n *\n *     twgl.setUniforms(programInfo, {\n *       'lights[1]: { intensity: 5.0, color: [1, 0, 0, 1] },\n *     });\n *\n *   But you can not specify leaf array indices\n *\n * @memberOf module:twgl/programs\n */\nfunction setUniforms(setters, ...args) {  // eslint-disable-line\n  const actualSetters = setters.uniformSetters || setters;\n  const numArgs = args.length;\n  for (let aNdx = 0; aNdx < numArgs; ++aNdx) {\n    const values = args[aNdx];\n    if (Array.isArray(values)) {\n      const numValues = values.length;\n      for (let ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, values[ii]);\n      }\n    } else {\n      for (const name in values) {\n        const setter = actualSetters[name];\n        if (setter) {\n          setter(values[name]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Alias for `setUniforms`\n * @function\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n * @memberOf module:twgl/programs\n */\nconst setUniformsAndBindTextures = setUniforms;\n\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\nfunction createAttributeSetters(gl, program) {\n  const attribSetters = {\n  };\n\n  const numAttribs = gl.getProgramParameter(program, ACTIVE_ATTRIBUTES);\n  for (let ii = 0; ii < numAttribs; ++ii) {\n    const attribInfo = gl.getActiveAttrib(program, ii);\n    if (isBuiltIn(attribInfo)) {\n      continue;\n    }\n    const index = gl.getAttribLocation(program, attribInfo.name);\n    const typeInfo = attrTypeMap[attribInfo.type];\n    const setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n */\nfunction setAttributes(setters, buffers) {\n  for (const name in buffers) {\n    const setter = setters[name];\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivalent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgramInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n    if (buffers.indices) {\n      gl.bindBuffer(ELEMENT_ARRAY_BUFFER$1, buffers.indices);\n    }\n  }\n}\n\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @property {module:twgl.UniformBlockSpec} [uniformBlockSpec] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfoFromProgram(gl, program) {\n  const uniformSetters = createUniformSetters(gl, program);\n  const attribSetters = createAttributeSetters(gl, program);\n  const programInfo = {\n    program,\n    uniformSetters,\n    attribSetters,\n  };\n\n  if (isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfo(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  let good = true;\n  shaderSources = shaderSources.map(function(source) {\n    // Lets assume if there is no \\n it's an id\n    if (source.indexOf(\"\\n\") < 0) {\n      const script = getElementById(source);\n      if (!script) {\n        progOptions.errorCallback(\"no element with id: \" + source);\n        good = false;\n      } else {\n        source = script.text;\n      }\n    }\n    return source;\n  });\n  if (!good) {\n    return null;\n  }\n  const program = createProgramFromSources(gl, shaderSources, progOptions);\n  if (!program) {\n    return null;\n  }\n  return createProgramInfoFromProgram(gl, program);\n}\n\nvar programs = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createAttributeSetters: createAttributeSetters,\n  createProgram: createProgram,\n  createProgramFromScripts: createProgramFromScripts,\n  createProgramFromSources: createProgramFromSources,\n  createProgramInfo: createProgramInfo,\n  createProgramInfoFromProgram: createProgramInfoFromProgram,\n  createUniformSetters: createUniformSetters,\n  createUniformBlockSpecFromProgram: createUniformBlockSpecFromProgram,\n  createUniformBlockInfoFromProgram: createUniformBlockInfoFromProgram,\n  createUniformBlockInfo: createUniformBlockInfo,\n  createTransformFeedback: createTransformFeedback,\n  createTransformFeedbackInfo: createTransformFeedbackInfo,\n  bindTransformFeedbackInfo: bindTransformFeedbackInfo,\n  setAttributes: setAttributes,\n  setBuffersAndAttributes: setBuffersAndAttributes,\n  setUniforms: setUniforms,\n  setUniformsAndBindTextures: setUniformsAndBindTextures,\n  setUniformBlock: setUniformBlock,\n  setBlockUniforms: setBlockUniforms,\n  bindUniformBlock: bindUniformBlock\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst TRIANGLES                      = 0x0004;\nconst UNSIGNED_SHORT$3                 = 0x1403;\n\n/**\n * Drawing related functions\n *\n * For backward compatibility they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {number} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? TRIANGLES : type;\n  const indices = bufferInfo.indices;\n  const elementType = bufferInfo.elementType;\n  const numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? UNSIGNED_SHORT$3 : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? UNSIGNED_SHORT$3 : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In other words `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\nfunction drawObjectList(gl, objectsToDraw) {\n  let lastUsedProgramInfo = null;\n  let lastUsedBufferInfo = null;\n\n  objectsToDraw.forEach(function(object) {\n    if (object.active === false) {\n      return;\n    }\n\n    const programInfo = object.programInfo;\n    const bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    let bindBuffers = false;\n    const type = object.type === undefined ? TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program);\n\n      // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n      bindBuffers = true;\n    }\n\n    // Setup all the needed attributes.\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n      lastUsedBufferInfo = bufferInfo;\n      setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    }\n\n    // Set the uniforms.\n    setUniforms(programInfo, object.uniforms);\n\n    // Draw\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\nvar draw = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  drawBufferInfo: drawBufferInfo,\n  drawObjectList: drawObjectList\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst FRAMEBUFFER                    = 0x8d40;\nconst RENDERBUFFER                   = 0x8d41;\nconst TEXTURE_2D$2                     = 0x0de1;\n\nconst UNSIGNED_BYTE$3                  = 0x1401;\n\n/* PixelFormat */\nconst DEPTH_COMPONENT$1                = 0x1902;\nconst RGBA$1                           = 0x1908;\nconst DEPTH_COMPONENT24$1              = 0x81a6;\nconst DEPTH_COMPONENT32F$1             = 0x8cac;\nconst DEPTH24_STENCIL8$1               = 0x88f0;\nconst DEPTH32F_STENCIL8$1              = 0x8cad;\n\n/* Framebuffer Object. */\nconst RGBA4$1                          = 0x8056;\nconst RGB5_A1$1                        = 0x8057;\nconst RGB565$1                         = 0x8D62;\nconst DEPTH_COMPONENT16$1              = 0x81A5;\nconst STENCIL_INDEX                  = 0x1901;\nconst STENCIL_INDEX8                 = 0x8D48;\nconst DEPTH_STENCIL$1                  = 0x84F9;\nconst COLOR_ATTACHMENT0              = 0x8CE0;\nconst DEPTH_ATTACHMENT               = 0x8D00;\nconst STENCIL_ATTACHMENT             = 0x8D20;\nconst DEPTH_STENCIL_ATTACHMENT       = 0x821A;\n\n/* TextureWrapMode */\nconst CLAMP_TO_EDGE$1                  = 0x812F;\n\n/* TextureMagFilter */\nconst LINEAR$1                         = 0x2601;\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attachmentPoint] The attachment point. Defaults\n *   to `gl.COLOR_ATTACHMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {number} [layer] layer for `gl.framebufferTextureLayer`. Defaults to undefined.\n *   If set then `gl.framebufferTextureLayer` is called, if not then `gl.framebufferTexture2D`\n * @property {(WebGLRenderbuffer | WebGLTexture)} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachments across framebuffers.\n * @memberOf module:twgl\n * @mixes module:twgl.TextureOptions\n */\n\nconst defaultAttachments = [\n  { format: RGBA$1, type: UNSIGNED_BYTE$3, min: LINEAR$1, wrap: CLAMP_TO_EDGE$1, },\n  { format: DEPTH_STENCIL$1, },\n];\n\nconst attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL$1] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT$1] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16$1] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT24$1] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT32F$1] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH24_STENCIL8$1] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH32F_STENCIL8$1] = DEPTH_STENCIL_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format, internalFormat) {\n  return attachmentsByFormat[format] || attachmentsByFormat[internalFormat];\n}\n\nconst renderbufferFormats = {};\nrenderbufferFormats[RGBA4$1] = true;\nrenderbufferFormats[RGB5_A1$1] = true;\nrenderbufferFormats[RGB565$1] = true;\nrenderbufferFormats[DEPTH_STENCIL$1] = true;\nrenderbufferFormats[DEPTH_COMPONENT16$1] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {Array.<(WebGLRenderbuffer | WebGLTexture)>} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @property {number} width The width of the framebuffer and its attachments\n * @property {number} height The width of the framebuffer and its attachments\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL1 only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  const target = FRAMEBUFFER;\n  const fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width  = width  || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  let colorAttachmentCount = 0;\n  const framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height,\n  };\n  attachments.forEach(function(attachmentOptions) {\n    let attachment = attachmentOptions.attachment;\n    const format = attachmentOptions.format;\n    let attachmentPoint = attachmentOptions.attachmentPoint || getAttachmentPointForFormat(format, attachmentOptions.internalFormat);\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + colorAttachmentCount++;\n    }\n    if (!attachment) {\n      if (isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(RENDERBUFFER, attachment);\n        gl.renderbufferStorage(RENDERBUFFER, format, width, height);\n      } else {\n        const textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || LINEAR$1;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || LINEAR$1;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || CLAMP_TO_EDGE$1;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || CLAMP_TO_EDGE$1;\n        }\n        attachment = createTexture(gl, textureOptions);\n      }\n    }\n    if (isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, RENDERBUFFER, attachment);\n    } else if (isTexture(gl, attachment)) {\n      if (attachmentOptions.layer !== undefined) {\n        gl.framebufferTextureLayer(\n          target,\n          attachmentPoint,\n          attachment,\n          attachmentOptions.level || 0,\n          attachmentOptions.layer);\n      } else {\n        gl.framebufferTexture2D(\n            target,\n            attachmentPoint,\n            attachmentOptions.target || TEXTURE_2D$2,\n            attachment,\n            attachmentOptions.level || 0);\n      }\n    } else {\n      throw new Error('unknown attachment type');\n    }\n    framebufferInfo.attachments.push(attachment);\n  });\n  return framebufferInfo;\n}\n\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width  = width  || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function(attachmentOptions, ndx) {\n    const attachment = framebufferInfo.attachments[ndx];\n    const format = attachmentOptions.format;\n    if (isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(RENDERBUFFER, attachment);\n      gl.renderbufferStorage(RENDERBUFFER, format, width, height);\n    } else if (isTexture(gl, attachment)) {\n      resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw new Error('unknown attachment type');\n    }\n  });\n}\n\n/**\n * Binds a framebuffer\n *\n * This function pretty much solely exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo|null} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If falsy will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || FRAMEBUFFER;\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\nvar framebuffers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  bindFramebufferInfo: bindFramebufferInfo,\n  createFramebufferInfo: createFramebufferInfo,\n  resizeFramebufferInfo: resizeFramebufferInfo\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\nconst ELEMENT_ARRAY_BUFFER$2           = 0x8893;\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n  programInfos.forEach(function(programInfo) {\n    setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao,\n  };\n}\n\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  setAttributes(setters, attribs);\n  if (indices) {\n    gl.bindBuffer(ELEMENT_ARRAY_BUFFER$2, indices);\n  }\n  // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n  gl.bindVertexArray(null);\n  return vao;\n}\n\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\nvar vertexArrays = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createVertexArrayInfo: createVertexArrayInfo,\n  createVAOAndSetAttributes: createVAOAndSetAttributes,\n  createVAOFromBufferInfo: createVAOFromBufferInfo\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nconst defaults$2 = {\n  addExtensionsToContext: true,\n};\n\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} [attribPrefix] The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n *   In other words I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} [textureColor] Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} [crossOrigin]\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} [addExtensionsToContext]\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\nfunction setDefaults$2(newDefaults) {\n  copyExistingProperties(newDefaults, defaults$2);\n  setDefaults(newDefaults);  // eslint-disable-line\n  setDefaults$1(newDefaults);  // eslint-disable-line\n}\n\nconst prefixRE = /^(.*?)_/;\nfunction addExtensionToContext(gl, extensionName) {\n  glEnumToString(gl, 0);\n  const ext = gl.getExtension(extensionName);\n  if (ext) {\n    const enums = {};\n    const fnSuffix = prefixRE.exec(extensionName)[1];\n    const enumSuffix = '_' + fnSuffix;\n    for (const key in ext) {\n      const value = ext[key];\n      const isFunc = typeof (value) === 'function';\n      const suffix = isFunc ? fnSuffix : enumSuffix;\n      let name = key;\n      // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          warn(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function(origFn) {\n            return function() {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    }\n    // pass the modified enums to glEnumToString\n    enums.constructor = {\n      name: ext.constructor.name,\n    };\n    glEnumToString(enums, 0);\n  }\n  return ext;\n}\n\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\nconst supportedExtensions = [\n  'ANGLE_instanced_arrays',\n  'EXT_blend_minmax',\n  'EXT_color_buffer_float',\n  'EXT_color_buffer_half_float',\n  'EXT_disjoint_timer_query',\n  'EXT_disjoint_timer_query_webgl2',\n  'EXT_frag_depth',\n  'EXT_sRGB',\n  'EXT_shader_texture_lod',\n  'EXT_texture_filter_anisotropic',\n  'OES_element_index_uint',\n  'OES_standard_derivatives',\n  'OES_texture_float',\n  'OES_texture_float_linear',\n  'OES_texture_half_float',\n  'OES_texture_half_float_linear',\n  'OES_vertex_array_object',\n  'WEBGL_color_buffer_float',\n  'WEBGL_compressed_texture_atc',\n  'WEBGL_compressed_texture_etc1',\n  'WEBGL_compressed_texture_pvrtc',\n  'WEBGL_compressed_texture_s3tc',\n  'WEBGL_compressed_texture_s3tc_srgb',\n  'WEBGL_depth_texture',\n  'WEBGL_draw_buffers',\n];\n\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existence of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\nfunction addExtensionsToContext(gl) {\n  for (let ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n * @private\n */\nfunction create3DContext(canvas, opt_attribs) {\n  const names = [\"webgl\", \"experimental-webgl\"];\n  let context = null;\n  for (let ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n    if (context) {\n      if (defaults$2.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n      break;\n    }\n  }\n  return context;\n}\n\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\nfunction getWebGLContext(canvas, opt_attribs) {\n  const gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\nfunction createContext(canvas, opt_attribs) {\n  const names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  let context = null;\n  for (let ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n    if (context) {\n      if (defaults$2.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n      break;\n    }\n  }\n  return context;\n}\n\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\nfunction getContext(canvas, opt_attribs) {\n  const gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  const width  = canvas.clientWidth  * multiplier | 0;\n  const height = canvas.clientHeight * multiplier | 0;\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n  return false;\n}\n\nexport { addExtensionsToContext, attributes, bindFramebufferInfo, bindTransformFeedbackInfo, bindUniformBlock, canFilter, canGenerateMipmap, createAttribsFromArrays, createAttributeSetters, createBufferFromArray, createBufferFromTypedArray, createBufferInfoFromArrays, createBuffersFromArrays, createFramebufferInfo, createProgram, createProgramFromScripts, createProgramFromSources, createProgramInfo, createProgramInfoFromProgram, createSampler, createSamplers, createTexture, createTextures, createTransformFeedback, createTransformFeedbackInfo, createUniformBlockInfo, createUniformBlockInfoFromProgram, createUniformBlockSpecFromProgram, createUniformSetters, createVAOAndSetAttributes, createVAOFromBufferInfo, createVertexArrayInfo, draw, drawBufferInfo, drawObjectList, framebuffers, getArray as getArray_, getBytesPerElementForInternalFormat, getContext, getFormatAndTypeForInternalFormat, getGLTypeForTypedArray, getGLTypeForTypedArrayType, getNumComponentsForFormat, getNumComponents as getNumComponents_, getTypedArrayTypeForGLType, getWebGLContext, glEnumToString, isArrayBuffer, isWebGL1, isWebGL2, loadTextureFromUrl, m4, primitives, programs, resizeCanvasToDisplaySize, resizeFramebufferInfo, resizeTexture, setAttribInfoBufferFromArray, setDefaults as setAttributeDefaults_, setAttributePrefix, setAttributes, setBlockUniforms, setBuffersAndAttributes, setDefaultTextureColor, setDefaults$2 as setDefaults, setEmptyTexture, setSamplerParameters, setDefaults$1 as setTextureDefaults_, setTextureFilteringForSize, setTextureFromArray, setTextureFromElement, setTextureParameters, setUniformBlock, setUniforms, setUniformsAndBindTextures, textures, typedarrays, utils, v3, vertexArrays };\n","import {\n  ProgramInfo,\n  BufferInfo,\n  setAttributes,\n  createProgramInfoFromProgram,\n  createBufferInfoFromArrays,\n  setUniforms,\n} from 'twgl.js';\n\nimport type { FlipnoteParserBase } from '../parsers';\nimport { assert, assertBrowserEnv, isBrowser } from '../utils';\nimport { CanvasInterface } from './CanvasInterface';\nimport quadShader from './shaders/quad.vert';\nimport drawFrame from './shaders/drawFrame.frag';\n\n/** \n * Keeps track of WebGl resources so they can be destroyed properly later\n * @internal\n */\ninterface ResourceMap {\n  programs: WebGLProgram[];\n  shaders: WebGLShader[];\n  textures: WebGLTexture[];\n  buffers: WebGLBuffer[];\n};\n\n/**\n * Settings for {@link WebGlCanvas}\n */\nexport interface WebglCanvasOptions {\n  /** Function to be called if the context is lost */\n  onlost: () => void;\n  /** Function to be called if the context is restored */\n  onrestored: () => void;\n  /** Use DPI scaling */\n  useDpi: boolean;\n};\n\n/**\n * Flipnote renderer for the {@link https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API WebGL} API\n * \n * Only available in browser contexts\n */\nexport class WebglCanvas implements CanvasInterface {\n\n  static defaultOptions: WebglCanvasOptions = {\n    onlost: () => {},\n    onrestored: () => {},\n    useDpi: true\n  };\n\n  static isSupported() {\n    if (!isBrowser) return false;\n    let testCanvas = document.createElement('canvas');\n    let testCtx = testCanvas.getContext('2d');\n    const supported = testCtx !== null;\n    testCanvas = null;\n    testCtx = null;\n    return supported;\n  }\n\n  /**  */\n  public note: FlipnoteParserBase;\n  /** Canvas HTML element being used as a rendering surface */\n  public canvas: HTMLCanvasElement;\n  /** Rendering context - see {@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext} */\n  public gl: WebGLRenderingContext;\n  /** View width (CSS pixels) */\n  public width: number;\n  /** View height (CSS pixels) */\n  public height: number;\n  /** */\n  public srcWidth: number;\n  /** */\n  public srcHeight: number;\n  /** \n   * Backing canvas width (real pixels)\n   * Note that this factors in device pixel ratio, so it may not reflect the size of the canvas in CSS pixels\n   */\n  public dstWidth: number;\n  /** \n   * Backing canvas height (real pixels)\n   * Note that this factors in device pixel ratio, so it may not reflect the size of the canvas in CSS pixels\n   */\n  public dstHeight: number;\n  /** */\n  public prevFrameIndex: number;\n\n  private options: WebglCanvasOptions;\n  private program: ProgramInfo; // for drawing renderbuffer w/ filtering\n  private quadBuffer: BufferInfo;\n  private paletteBuffer = new Uint32Array(16);\n  private frameBuffer: Uint32Array;\n  private frameBufferBytes: Uint8Array; // will be same memory as frameBuffer, just uint8 for webgl texture\n\n  private frameTexture: WebGLTexture;\n  private refs: ResourceMap = {\n    programs: [],\n    shaders: [],\n    textures: [],\n    buffers: []\n  };\n  private isCtxLost = false;\n\n  /**\n   * Creates a new WebGlCanvas instance\n   * @param el - Canvas HTML element to use as a rendering surface\n   * @param width - Canvas width in CSS pixels\n   * @param height - Canvas height in CSS pixels\n   * \n   * The ratio between `width` and `height` should be 3:4 for best results\n   */\n  constructor(parent: Element, width=640, height=480, options: Partial<WebglCanvasOptions> = {}) {\n    assertBrowserEnv();\n    this.options = { ...WebglCanvas.defaultOptions, ...options };\n    this.width = width;\n    this.height = height;\n    this.canvas = document.createElement('canvas');\n    this.canvas.addEventListener('webglcontextlost', this.handleContextLoss, false);\n    this.canvas.addEventListener('webglcontextrestored', this.handleContextRestored, false);\n    this.canvas.className = 'FlipnoteCanvas FlipnoteCanvas--webgl';\n    this.gl = this.canvas.getContext('webgl', {\n      antialias: false,\n      alpha: true\n    });\n    if (parent) parent.appendChild(this.canvas);\n    this.init();\n  }\n\n  private init() {\n    this.setCanvasSize(this.width, this.height);\n    const gl = this.gl;\n    if (this.checkContextLoss()) return;\n    this.program = this.createProgram(quadShader, drawFrame);\n    this.quadBuffer = this.createScreenQuad(-1, -1, 2, 2, 1, 1);\n    this.setBuffersAndAttribs(this.program, this.quadBuffer);\n    this.frameTexture = this.createTexture(gl.RGBA, gl.LINEAR, gl.CLAMP_TO_EDGE);\n    // set gl constants\n    gl.useProgram(this.program.program);\n    gl.bindTexture(gl.TEXTURE_2D, this.frameTexture);\n  }\n\n  private createProgram(vertexShaderSource: string, fragmentShaderSource: string) {\n    if(this.checkContextLoss()) return;\n    const gl = this.gl;\n    const vert = this.createShader(gl.VERTEX_SHADER, vertexShaderSource);\n    const frag = this.createShader(gl.FRAGMENT_SHADER, fragmentShaderSource);\n    const program = gl.createProgram();\n    // set up shaders\n    gl.attachShader(program, vert);\n    gl.attachShader(program, frag);\n    // link program\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const log = gl.getProgramInfoLog(program);\n      gl.deleteProgram(program);\n      throw new Error(log);\n    }\n    const programInfo = createProgramInfoFromProgram(gl, program);\n    this.refs.programs.push(program);\n    return programInfo;\n  }\n\n  private createShader(type: number, source: string) {\n    if(this.checkContextLoss()) return;\n    const gl = this.gl;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    // test if shader compilation was successful\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      const log = gl.getShaderInfoLog(shader);\n      gl.deleteShader(shader);\n      throw new Error(log);\n    }\n    this.refs.shaders.push(shader);\n    return shader;\n  }\n\n  // creating a subdivided quad seems to produce slightly nicer texture filtering\n  private createScreenQuad(x0: number, y0: number, width: number, height: number, xSubdivs: number, ySubdivs: number) {\n    if(this.checkContextLoss()) return;\n    const numVerts = (xSubdivs + 1) * (ySubdivs + 1);\n    const numVertsAcross = xSubdivs + 1;\n    const positions = new Float32Array(numVerts * 2);\n    const texCoords = new Float32Array(numVerts * 2);\n    let positionPtr = 0;\n    let texCoordPtr = 0;\n    for (let y = 0; y <= ySubdivs; y++) {\n      for (let x = 0; x <= xSubdivs; x++) {\n        const u = x / xSubdivs;\n        const v = y / ySubdivs;\n        positions[positionPtr++] = x0 + width * u;\n        positions[positionPtr++] = y0 + height * v;\n        texCoords[texCoordPtr++] = u;\n        texCoords[texCoordPtr++] = v;\n      }\n    }\n    const indices = new Uint16Array(xSubdivs * ySubdivs * 2 * 3);\n    let indicesPtr = 0;\n    for (let y = 0; y < ySubdivs; y++) {\n      for (let x = 0; x < xSubdivs; x++) {\n        // triangle 1\n        indices[indicesPtr++] = (y + 0) * numVertsAcross + x;\n        indices[indicesPtr++] = (y + 1) * numVertsAcross + x;\n        indices[indicesPtr++] = (y + 0) * numVertsAcross + x + 1;\n        // triangle 2\n        indices[indicesPtr++] = (y + 0) * numVertsAcross + x + 1;\n        indices[indicesPtr++] = (y + 1) * numVertsAcross + x;\n        indices[indicesPtr++] = (y + 1) * numVertsAcross + x + 1;\n      }\n    }\n    const bufferInfo = createBufferInfoFromArrays(this.gl, {\n      position: {\n        numComponents: 2,\n        data: positions\n      },\n      texcoord: {\n        numComponents: 2,\n        data: texCoords\n      },\n      indices: indices\n    });\n    // collect references to buffer objects\n    for (let name in bufferInfo.attribs)\n      this.refs.buffers.push(bufferInfo.attribs[name].buffer);\n    return bufferInfo;\n  }\n\n  private setBuffersAndAttribs(program: ProgramInfo, buffer: BufferInfo) {\n    if(this.checkContextLoss()) return;\n    const gl = this.gl;\n    setAttributes(program.attribSetters, buffer.attribs);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indices);\n  }\n\n  private createTexture(type: number, minMag: number, wrap: number, width = 1, height = 1) {\n    if(this.checkContextLoss()) return;\n    const gl = this.gl;\n    const tex = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, tex);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minMag);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, minMag);\n    gl.texImage2D(gl.TEXTURE_2D, 0, type, width, height, 0, type, gl.UNSIGNED_BYTE, null);\n    this.refs.textures.push(tex);\n    return tex;\n  }\n\n  /**\n   * Resize the canvas surface\n   * @param width - New canvas width, in CSS pixels\n   * @param height - New canvas height, in CSS pixels\n   * \n   * The ratio between `width` and `height` should be 3:4 for best results\n   */\n  public setCanvasSize(width: number, height: number) {\n    const dpi = this.options.useDpi ? (window.devicePixelRatio || 1) : 1;\n    const internalWidth = width * dpi;\n    const internalHeight = height * dpi;\n    this.width = width;\n    this.height = height;\n    this.canvas.width = internalWidth;\n    this.canvas.height = internalHeight;\n    this.dstWidth = internalWidth;\n    this.dstHeight = internalHeight;\n    this.canvas.style.width = `${ width }px`;\n    this.canvas.style.height = `${ height }px`;\n    const gl = this.gl;\n    if(this.checkContextLoss()) return;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n\n  /**\n   * Sets the note to use for this player\n   */\n  public setNote(note: FlipnoteParserBase) {\n    if(this.checkContextLoss()) return;\n    const gl = this.gl;\n    const width = note.imageWidth;\n    const height = note.imageHeight;\n    this.note = note;\n    this.srcWidth = width;\n    this.srcHeight = height;\n    // resize frame texture\n    gl.bindTexture(gl.TEXTURE_2D, this.frameTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.srcWidth, this.srcHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    this.frameBuffer = new Uint32Array(width * height);\n    this.frameBufferBytes = new Uint8Array(this.frameBuffer.buffer); // same memory buffer as rgbaData\n    this.prevFrameIndex = undefined;\n    // set canvas alt text\n    this.canvas.title = note.getTitle();\n  }\n\n  /**\n   * Clear the canvas\n   * @param color optional RGBA color to use as a background color\n   */\n  public clear(color?: [number, number, number, number]) {\n    if(this.checkContextLoss()) return;\n    if (color) {\n      const [r, g, b, a] = color;\n      this.gl.clearColor(r / 255, g / 255, b / 255, a /255);\n    }\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n  }\n\n  /**\n   * Draw a frame from the currently loaded Flipnote\n   * @param frameIndex \n   */\n  public drawFrame(frameIndex: number) {\n    if(this.checkContextLoss()) return;\n    const {\n      gl,\n      srcWidth: textureWidth,\n      srcHeight: textureHeight,\n    } = this;\n    // get frame pixels as RGBA buffer\n    this.note.getFramePixelsRgba(frameIndex, this.frameBuffer, this.paletteBuffer);\n    // clear whatever's already been drawn\n    // const paperColor = note.getFramePalette(frameIndex)[0];\n    // this.clear(paperColor);\n    gl.clear(this.gl.COLOR_BUFFER_BIT);\n    // update texture\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, textureWidth, textureHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.frameBufferBytes);\n    // prep uniforms\n    setUniforms(this.program, {\n      u_flipY: true,\n      u_tex: this.frameTexture,\n      u_textureSize: [this.srcWidth, this.srcHeight],\n      u_screenSize: [gl.drawingBufferWidth, gl.drawingBufferHeight],\n    });\n    // draw!\n    gl.drawElements(gl.TRIANGLES, this.quadBuffer.numElements, this.quadBuffer.elementType, 0);\n    this.prevFrameIndex = frameIndex;\n  }\n   \n  public forceUpdate() {\n    if (this.prevFrameIndex !== undefined)\n      this.drawFrame(this.prevFrameIndex);\n  }\n\n  /**\n   * Returns true if the webGL context has returned an error\n   */\n  public isErrorState() {\n    const gl = this.gl;\n    return gl === null || gl.getError() !== gl.NO_ERROR;\n  }\n\n  /**\n   * Only a certain number of WebGL contexts can be added to a single page before the browser will start culling old contexts. \n   * This method returns true if it has been culled, false if not\n   */\n  private checkContextLoss() {\n    const isLost = this.isCtxLost || this.isErrorState();\n    if (isLost) \n      this.handleContextLoss();\n    return isLost;\n  }\n\n  private handleContextLoss = (e?: Event) => {\n    if (e) e.preventDefault();\n    this.destroy();\n    if (!this.isCtxLost)\n      this.options.onlost();\n    this.isCtxLost = true;\n  }\n\n  private handleContextRestored = (e?: Event) => {\n    this.isCtxLost = false;\n    this.init();\n    this.options.onrestored();\n  }\n\n  /**\n   * \n   * @param type image mime type (`image/jpeg`, `image/png`, etc)\n   * @param quality image quality where supported, between 0 and 1\n   */\n  public getDataUrl(type?: string, quality?: any) {\n    return this.canvas.toDataURL(type, quality);\n  }\n\n  async getBlob(type?: string, quality?: any) {\n    return new Promise<Blob>((resolve, reject) => this.canvas.toBlob(resolve, type, quality));\n  }\n\n  /**\n   * Frees any resources used by this canvas instance\n   */\n  public destroy() {\n    const refs = this.refs;\n    const gl = this.gl;\n    const canvas = this.canvas;\n    refs.shaders.forEach((shader) => {\n      gl.deleteShader(shader);\n    });\n    refs.shaders = [];\n    refs.textures.forEach((texture) => {\n      gl.deleteTexture(texture);\n    });\n    refs.textures = [];\n    refs.buffers.forEach((buffer) => {\n      gl.deleteBuffer(buffer);\n    });\n    refs.buffers = [];\n    refs.programs.forEach((program) => {\n      gl.deleteProgram(program);\n    });\n    refs.programs = [];\n    this.paletteBuffer = null;\n    this.frameBuffer = null;\n    this.frameBufferBytes = null;\n    if (canvas && canvas.parentElement) {\n      // shrink the canvas to reduce memory usage until it is garbage collected\n      canvas.width = 1;\n      canvas.height = 1;\n      // remove canvas from dom\n      canvas.parentNode.removeChild(canvas);\n    }\n  }\n}","import type { FlipnoteParserBase } from '../parsers';\nimport { assert, assertBrowserEnv, isBrowser } from '../utils';\nimport { CanvasInterface } from './CanvasInterface';\n\n/**\n * Setup options for {@link Html5Canvas}\n */\nexport interface Html5CanvasOptions {\n  /** Use DPI scaling */\n  useDpi: boolean;\n  /** Use image smoothing */\n  useSmoothing: boolean;\n};\n\n/**\n * Flipnote renderer for the [HTML5 2D canvas API](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D)\n */\nexport class Html5Canvas implements CanvasInterface {\n\n  static defaultOptions: Html5CanvasOptions = {\n    useDpi: true,\n    useSmoothing: true,\n  };\n\n  static isSupported() {\n    if (!isBrowser) return false;\n    let testCanvas = document.createElement('canvas');\n    let testCtx = testCanvas.getContext('2d');\n    const supported = testCtx !== null;\n    testCanvas = null;\n    testCtx = null;\n    return supported;\n  }\n\n  /** */\n  public note: FlipnoteParserBase;\n  /** Canvas HTML element being used as a rendering surface */\n  public canvas: HTMLCanvasElement;\n  /** Rendering context */\n  public ctx: CanvasRenderingContext2D;\n  /** View width (CSS pixels) */\n  public width: number;\n  /** View height (CSS pixels) */\n  public height: number;\n  /** \n   * Backing canvas width (real pixels)\n   * Note that this factors in device pixel ratio, so it may not reflect the size of the canvas in CSS pixels\n  */\n  public dstWidth: number;\n  /** \n   * Backing canvas height (real pixels)\n   * Note that this factors in device pixel ratio, so it may not reflect the size of the canvas in CSS pixels\n  */\n  public dstHeight: number;\n  /**  */\n  public srcWidth: number;\n  /**  */\n  public srcHeight: number;\n  /** */\n  public prevFrameIndex: number;\n\n  private options: Html5CanvasOptions;\n  private srcCanvas: HTMLCanvasElement;\n  private srcCtx: CanvasRenderingContext2D;\n  private frameImage: ImageData;\n  private paletteBuffer = new Uint32Array(16);\n  private frameBuffer: Uint32Array;\n\n  constructor(parent: Element, width: number, height: number, options: Partial<Html5CanvasOptions> = {}) {\n    assertBrowserEnv();\n    this.options = { ...Html5Canvas.defaultOptions, ...options };\n    this.width = width;\n    this.height = height;\n    this.canvas = document.createElement('canvas');\n    this.canvas.className = 'FlipnoteCanvas FlipnoteCanvas--html5';\n    this.ctx = this.canvas.getContext('2d');\n    this.srcCanvas = document.createElement('canvas');\n    this.srcCtx = this.srcCanvas.getContext('2d');\n    assert(this.ctx !== null && this.srcCtx !== null, 'Could not create HTML5 canvas');\n    if (parent) parent.appendChild(this.canvas);\n    this.setCanvasSize(width, height);\n  }\n\n  /**\n   * Resize the canvas surface\n   * @param width - New canvas width, in CSS pixels\n   * @param height - New canvas height, in CSS pixels\n   * \n   * The ratio between `width` and `height` should be 3:4 for best results\n   */\n  public setCanvasSize(width: number, height: number) {\n    const canvas = this.canvas;\n    const useDpi = this.options.useDpi;\n    const dpi = useDpi ? (window.devicePixelRatio || 1) : 1;\n    const internalWidth = width * dpi;\n    const internalHeight = height * dpi;\n    this.width = width;\n    this.height = height;\n    this.dstWidth = internalWidth;\n    this.dstHeight = internalHeight;\n    canvas.style.width = `${ width }px`;\n    canvas.style.height = `${ height }px`;\n    canvas.width = internalWidth;\n    canvas.height = internalHeight;\n  }\n  \n  /**\n   */\n  public setNote(note: FlipnoteParserBase) {\n    const width = note.imageWidth;\n    const height = note.imageHeight;\n    this.note = note;\n    this.srcWidth = width;\n    this.srcHeight = height;\n    this.srcCanvas.width = width;\n    this.srcCanvas.height = height;\n    // create image data to fit note size\n    this.frameImage = this.srcCtx.createImageData(width, height);\n    // uint32 view of the img buffer memory\n    this.frameBuffer = new Uint32Array(this.frameImage.data.buffer);\n    this.prevFrameIndex = undefined;\n    // set canvas alt text\n    this.canvas.title = note.getTitle();\n  }\n  \n  /**\n   * Clear the canvas\n   * @param color optional RGBA color to use as a background color\n   */\n  public clear(color?: [number, number, number, number]) {\n    // clear framebuffer\n    this.frameBuffer.fill(0);\n    // clear canvas\n    this.ctx.clearRect(0, 0, this.dstWidth, this.dstHeight);\n    // fill canvas with paper color\n    if (color) {\n      const [r, g, b, a] = color;\n      this.ctx.fillStyle = `rgba(${ r }, ${ g }, ${ b }, ${ a })`;\n      this.ctx.fillRect(0, 0, this.dstWidth, this.dstHeight);\n    }\n  }\n\n  public drawFrame(frameIndex: number) {\n    // clear whatever's already been drawn\n    this.clear();\n    // optionally enable image smoothing\n    if (!this.options.useSmoothing)\n      this.ctx.imageSmoothingEnabled = false;\n    // get frame pixels as RGBA buffer\n    this.note.getFramePixelsRgba(frameIndex, this.frameBuffer, this.paletteBuffer);\n    // put framebuffer pixels into the src canvas\n    this.srcCtx.putImageData(this.frameImage, 0, 0);\n    // composite src canvas to dst (so image scaling can be handled)\n    this.ctx.drawImage(\n      this.srcCanvas, \n      0, 0, \n      this.srcWidth, \n      this.srcHeight,\n      0, 0,\n      this.dstWidth,\n      this.dstHeight\n    );\n    this.prevFrameIndex = frameIndex;\n  }\n\n  public forceUpdate() {\n    if (this.prevFrameIndex !== undefined)\n      this.drawFrame(this.prevFrameIndex);\n  }\n\n  public getDataUrl(type?: string, quality?: any) {\n    return this.canvas.toDataURL(type, quality);\n  }\n\n  async getBlob(type?: string, quality?: any) {\n    return new Promise<Blob>((resolve, reject) => this.canvas.toBlob(resolve, type, quality));\n  }\n\n  public destroy() {\n    this.frameImage = null;\n    this.paletteBuffer = null;\n    this.frameBuffer = null;\n    this.canvas.parentNode.removeChild(this.canvas);\n    this.canvas.width = 1;\n    this.canvas.height = 1;\n    this.canvas = null;\n    this.srcCanvas.width = 1;\n    this.srcCanvas.height = 1;\n    this.srcCanvas = null;\n  }\n\n}","import { CanvasInterface } from './CanvasInterface';\nimport { WebglCanvas, WebglCanvasOptions } from './WebGlCanvas';\nimport { Html5Canvas, Html5CanvasOptions } from './Html5Canvas';\nimport { FlipnoteParserBase } from '../parsers';\n\nexport type UniversalCanvasOptions = WebglCanvasOptions & Html5CanvasOptions;\n\nexport class UniversalCanvas implements CanvasInterface {\n\n  /** */\n  public subRenderer: CanvasInterface;\n  /** */\n  public note: FlipnoteParserBase;\n  /** View width (CSS pixels) */\n  public width: number;\n  /** View height (CSS pixels) */\n  public height: number;\n  /** \n   * Backing canvas width (real pixels)\n   * Note that this factors in device pixel ratio, so it may not reflect the size of the canvas in CSS pixels\n  */\n  public dstWidth: number;\n  /** \n   * Backing canvas height (real pixels)\n   * Note that this factors in device pixel ratio, so it may not reflect the size of the canvas in CSS pixels\n  */\n  public dstHeight: number;\n  /**  */\n  public srcWidth: number;\n  /**  */\n  public srcHeight: number;\n  /** */\n  public prevFrameIndex: number;\n\n  private parent: Element;\n  private options: Partial<UniversalCanvasOptions> = {};\n  private isReady = false;\n  private isHtml5 = false;\n  \n  constructor (parent: Element, width=640, height=480, options: Partial<UniversalCanvasOptions>={}) {\n    this.parent = parent;\n    this.options = options;\n    try {\n      this.subRenderer = new WebglCanvas(parent, width, height, {\n        ...options,\n        // attempt to switch renderer\n        onlost: () => {\n          console.warn('WebGL failed, attempting HTML5 fallback');\n          if (this.isReady && !this.isHtml5) // if the error happened after canvas creation\n            this.switchToHtml5();\n          else\n            throw '';\n        }\n      });\n    }\n    catch {\n      this.switchToHtml5();\n    }\n    this.isReady = true;\n  }\n\n  public switchToHtml5() {\n    const renderer = new Html5Canvas(this.parent, this.width, this.height, this.options);\n    if (this.note) {\n      renderer.setNote(this.note);\n      renderer.prevFrameIndex = this.subRenderer?.prevFrameIndex;\n      renderer.forceUpdate();\n    }\n    if (this.subRenderer)\n      this.subRenderer.destroy();\n    this.isHtml5 = true;\n    this.subRenderer = renderer;\n  }\n\n  public setCanvasSize(width: number, height: number) {\n    const renderer = this.subRenderer;\n    renderer.setCanvasSize(width, height);\n    this.width = width;\n    this.width = height;\n    this.dstWidth = renderer.dstWidth;\n    this.dstHeight = renderer.dstHeight;\n  }\n\n  public setNote(note: FlipnoteParserBase) {\n    this.note = note;\n    this.subRenderer.setNote(note);\n    this.prevFrameIndex = undefined;\n    this.srcWidth = this.subRenderer.srcWidth;\n    this.srcHeight = this.subRenderer.srcHeight;\n  }\n\n  public clear(color?: [number, number, number, number]) {\n    this.subRenderer.clear(color);\n  }\n\n  public drawFrame(frameIndex: number) {\n    this.subRenderer.drawFrame(frameIndex);\n    this.prevFrameIndex = frameIndex;\n  }\n\n  public forceUpdate() {\n    this.subRenderer.forceUpdate();\n  }\n\n  public getDataUrl(type?: string, quality?: any) {\n    return this.subRenderer.getDataUrl();\n  }\n\n  async getBlob(type?: string, quality?: any) {\n    return this.subRenderer.getBlob();\n  }\n\n  public destroy() {\n    this.subRenderer.destroy();\n    this.note = null;\n  }\n\n}","import { isBrowser, assertBrowserEnv } from '../utils';\n\n/** @internal */\nconst _AudioContext = (() => {\n  if (isBrowser)\n    return (window.AudioContext || (window as any).webkitAudioContext);\n  return null;\n})();\n\n/** PCM audio buffer types. Supports s16_le, or float32_le with a range of -1.0 to 1.0 */\nexport type PcmAudioBuffer = Int16Array | Float32Array;\n\n/**\n * Audio player built around the {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API | Web Audio API}\n * \n * Capable of playing PCM streams, with volume adjustment and an optional equalizer. Only available in browser contexts\n */\nexport class WebAudioPlayer {\n\n  /** Audio context, see {@link https://developer.mozilla.org/en-US/docs/Web/API/AudioContext | AudioContext} */\n  ctx: AudioContext;\n  /** Audio sample rate */\n  sampleRate: number;\n  /** Whether the audio is being run through an equalizer or not */\n  useEq = false;\n  /** Whether to connect the output to an audio analyser (see {@link analyser}) */\n  useAnalyser = false;\n  /** Default equalizer settings. Credit to {@link https://www.sudomemo.net/ | Sudomemo} for these */\n  eqSettings: [number, number][] = [\n    [31.25, 4.1],\n    [62.5, 1.2],\n    [125, 0],\n    [250, -4.1],\n    [500, -2.3],\n    [1000, 0.5],\n    [2000, 6.5],\n    [8000, 5.1],\n    [16000, 5.1]\n  ];\n  /** If enabled, provides audio analysis for visualisation etc - https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Visualizations_with_Web_Audio_API */\n  analyser: AnalyserNode;\n\n  private _volume = 1;\n  private _loop = false;\n  private _startTime = 0;\n  private _ctxStartTime = 0;\n  private nodeRefs: AudioNode[] = [];\n  private buffer: AudioBuffer;\n  private gainNode: GainNode;\n  private source: AudioBufferSourceNode;\n\n  constructor() {\n    assertBrowserEnv();\n  }\n\n  /** The audio output volume. Range is 0 to 1 */\n  set volume(value: number) {\n    this.setVolume(value);\n  }\n\n  get volume() {\n    return this._volume;\n  }\n\n  /** Whether the audio should loop after it has ended */\n  set loop(value: boolean) {\n    this._loop = value;\n    if (this.source)\n      this.source.loop = value;\n  }\n\n  get loop() {\n    return this._loop;\n  }\n\n  private getCtx() {\n    if (!this.ctx)\n      this.ctx = new _AudioContext();\n    return this.ctx;\n  }\n\n  /**\n   * Set the audio buffer to play\n   * @param inputBuffer \n   * @param sampleRate - For best results, this should be a multiple of 16364\n   */\n  setBuffer(inputBuffer: PcmAudioBuffer, sampleRate: number) {\n    const ctx = this.getCtx();\n    const numSamples = inputBuffer.length;\n    const audioBuffer = ctx.createBuffer(1, numSamples, sampleRate);\n    const channelData = audioBuffer.getChannelData(0);\n    if (inputBuffer instanceof Float32Array)\n      channelData.set(inputBuffer, 0);\n    else if (inputBuffer instanceof Int16Array) {\n      for (let i = 0; i < numSamples; i++) {\n        channelData[i] = inputBuffer[i] / 32768;\n      }\n    }\n    this.buffer = audioBuffer;\n    this.sampleRate = sampleRate;\n  }\n\n  private connectEqNodesTo(inNode: AudioNode) {\n    const ctx = this.getCtx();\n    const eqSettings = this.eqSettings;\n    let lastNode = inNode;\n    eqSettings.forEach(([ frequency, gain ], index) => {\n      const node = ctx.createBiquadFilter();\n      this.nodeRefs.push(node);\n      node.frequency.value = frequency;\n      node.gain.value = gain;\n      if (index === 0)\n        node.type = 'lowshelf';\n      else if (index === eqSettings.length - 1)\n        node.type = 'highshelf';\n      else\n        node.type = 'peaking';\n      lastNode.connect(node);\n      lastNode = node;\n    });\n    return lastNode;\n  }\n\n  private initNodes() {\n    const ctx = this.getCtx();\n    this.nodeRefs = [];\n    const source = ctx.createBufferSource();\n    this.nodeRefs.push(source);\n    source.buffer = this.buffer;\n\n    const gainNode = ctx.createGain();\n    this.nodeRefs.push(gainNode);\n\n    if (this.useEq) {\n      const eq = this.connectEqNodesTo(source);\n      eq.connect(gainNode);\n    }\n    else {\n      source.connect(gainNode);\n    }\n\n    if (this.useAnalyser) {\n      const analyserNode = ctx.createAnalyser();\n      this.nodeRefs.push(analyserNode);\n      this.analyser = analyserNode;\n      gainNode.connect(analyserNode);\n      analyserNode.connect(ctx.destination);\n    }\n    else {\n      this.analyser = undefined;\n      gainNode.connect(ctx.destination);\n    }\n\n    this.source = source;\n    this.gainNode = gainNode;\n    this.setVolume(this._volume);\n  }\n  \n  setAnalyserEnabled(on: boolean) {\n    this.useAnalyser = on;\n    this.initNodes();\n  }\n\n  /**\n   * Sets the audio volume level\n   * @param value - range is 0 to 1\n   */\n  setVolume(value: number) {\n    this._volume = value;\n    if (this.gainNode) {\n      // human perception of loudness is logarithmic, rather than linear\n      // https://www.dr-lex.be/info-stuff/volumecontrols.html\n      this.gainNode.gain.value = Math.pow(value, 2);\n    }\n  }\n\n  /**\n   * Begin playback from a specific point\n   * \n   * Note that the WebAudioPlayer doesn't keep track of audio playback itself. We rely on the {@link Player} API for that.\n   * @param currentTime initial playback position, in seconds\n   */\n  playFrom(currentTime: number) {\n    this.initNodes();\n    this._startTime = currentTime;\n    this._ctxStartTime = this.ctx.currentTime;\n    this.source.loop = this._loop;\n    this.source.start(0, currentTime);\n  }\n\n  /**\n   * Stops the audio playback\n   */\n  stop() {\n    if (this.source)\n      this.source.stop(0);\n  }\n\n  /**\n   * Get the current playback time, in seconds\n   */\n  getCurrentTime() {\n    return this._startTime + (this.ctx.currentTime - this._ctxStartTime);\n  }\n\n  /**\n   * Frees any resources used by this canvas instance\n   */\n  async destroy() {\n    this.stop();\n    const ctx = this.getCtx();\n    this.nodeRefs.forEach(node => node.disconnect());\n    this.nodeRefs = [];\n    this.analyser = undefined;\n    if (ctx.state !== 'closed' && typeof ctx.close === 'function')\n      await ctx.close();\n    this.buffer = null;\n  }\n}","import type { Flipnote, FlipnoteFormat, FlipnoteMeta, FlipnoteParserSettings } from '../parsers';\nimport type { FlipnoteSource, FlipnoteSourceParser } from '../parseSource';\nimport type { LoaderDefinitionList } from '../loaders';\nimport { PlayerEvent, PlayerEventMap, supportedEvents } from './PlayerEvent';\nimport { createTimeRanges, padNumber, formatTime } from './playerUtils';\nimport { UniversalCanvas } from '../renderers';\nimport { WebAudioPlayer } from '../webaudio';\nimport { assert, assertRange, assertBrowserEnv, until } from '../utils';\n\ntype PlayerLayerVisibility = Record<number, boolean>;\n\n/**\n * Flipnote Player API (exported as `flipnote.Player`) - provides a {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement | MediaElement}-like interface for loading Flipnotes and playing them. \n * This is intended for cases where you want to implement your own player UI, if you just want a pre-built player with some nice UI controls, check out the {@page Web Components} page instead!\n * \n * ### Create a new player\n * \n * You'll need an element in your page's HTML to act as a wrapper for the player:\n * \n * ```html\n *  <div id=\"player-wrapper\"></div>\n * ```\n * \n * Then you can create a new `Player` instance by passing a CSS selector that matches the wrapper element, plus the desired width and height.\n * \n * ```js\n *  const player = new flipnote.Player('#player-wrapper', 320, 240);\n * ```\n * \n * ### Load a Flipnote\n * \n * Load a Flipnote from a valid {@link FlipnoteSource}:\n * \n * ```js\n * player.load('./path/to/flipnote.ppm');\n * ```\n * \n * ### Listen to events\n * \n * Use the {@link on} method to register event listeners:\n * \n * ```js\n *  player.on('play', function() {\n *    // do something when the Flipnote starts playing...\n *  });\n * ```\n */\nexport class Player {\n\n  /** Frame renderer */\n  renderer: UniversalCanvas;\n  /** Audio player */\n  audio: WebAudioPlayer;\n  /** Root element */\n  el: Element;\n  /** Canvas HTML element */\n  canvasEl: HTMLCanvasElement;\n  /** Currently loaded Flipnote */\n  note: Flipnote;\n  /** Flipnote parser settings */\n  parserSettings: FlipnoteParserSettings;\n  /** Format of the currently loaded Flipnote */\n  noteFormat: FlipnoteFormat;\n  /** Metadata for the currently loaded Flipnote */\n  meta: FlipnoteMeta;\n  /** Animation duration, in seconds */\n  duration: number = 0;\n  /** Animation layer visibility */\n  layerVisibility: PlayerLayerVisibility;\n  /** Automatically begin playback after a Flipnote is loaded */\n  autoplay: boolean = false;\n  /** Array of events supported by this player */\n  supportedEvents = supportedEvents;\n\n  /** @internal */\n  _src: FlipnoteSource = null;\n  /** @internal */\n  _loop: boolean = false;\n  /** @internal */\n  _volume: number = 1;\n  /** @internal */\n  _muted: boolean = false;\n  /** @internal */\n  _frame: number = null;\n  /** @internal */\n  _hasEnded: boolean = false;\n  /** @internal */\n  isNoteLoaded: boolean = false;\n  /** @internal */\n  events: PlayerEventMap = new Map();\n  /** @internal */\n  playbackStartTime: number = 0;\n  /** @internal */\n  playbackTime: number = 0;\n  /** @internal */\n  playbackLoopId: number = null;\n  /** @internal */\n  showThumbnail: boolean = true;\n  /** @internal */\n  hasPlaybackStarted: boolean = false;\n  /** @internal */\n  isPlaying: boolean = false;\n  /** @internal */\n  wasPlaying: boolean = false;\n  /** @internal */\n  isSeeking: boolean = false;\n  /** @internal */\n  lastParser: FlipnoteSourceParser = undefined;\n  /** @internal */\n  lastLoaders: LoaderDefinitionList = undefined;\n\n  /**\n   * Create a new Player instance\n   * \n   * @param parent - Element to mount the rendering canvas to\n   * @param width - Canvas width (pixels)\n   * @param height - Canvas height (pixels)\n   * \n   * The ratio between `width` and `height` should be 3:4 for best results\n   */\n  constructor(parent: string | Element, width: number, height: number, parserSettings: FlipnoteParserSettings = {}) {\n    assertBrowserEnv();\n    // if parent is a string, use it to select an Element, else assume it's an Element\n    const mountPoint = ('string' == typeof parent) ? <Element>document.querySelector(parent) : parent;\n    this.parserSettings = parserSettings;\n    this.renderer = new UniversalCanvas(mountPoint, width, height, {\n      onlost: () => this.emit(PlayerEvent.Error),\n      onrestored: () => this.reload()\n    });\n    this.audio = new WebAudioPlayer();\n    this.el = mountPoint;\n    // this.canvasEl = this.renderer.el;\n  }\n\n  /** The currently loaded Flipnote source, if there is one */\n  get src() {\n    return this._src;\n  }\n  set src(source: FlipnoteSource) {\n    throw new Error('Setting a Player source has been deprecated, please use the load() method instead');\n  }\n\n  /** Indicates whether playback is currently paused */\n  get paused() {\n    return !this.isPlaying;\n  }\n  set paused(isPaused: boolean) {\n    if (isPaused)\n      this.pause();\n    else\n      this.play();\n  }\n\n  /** Current animation frame index */\n  get currentFrame() {\n    return this._frame;\n  }\n  set currentFrame(frameIndex: number) {\n    this.setCurrentFrame(frameIndex);\n  }\n\n  /** Current animation playback position, in seconds */\n  get currentTime() {\n    return this.isNoteLoaded ? this.playbackTime : null;\n  }\n  set currentTime(value) {\n    this.setCurrentTime(value);\n  }\n\n  /** Current animation playback progress, as a percentage out of 100 */\n  get progress() {\n    return this.isNoteLoaded ? (this.playbackTime / this.duration) * 100 : null;\n  }\n  set progress(value) {\n    this.setProgress(value);\n  }\n\n  /** Audio volume, range `0` to `1` */\n  get volume() {\n    return this.getVolume();\n  }\n\n  set volume(value) {\n    this.setVolume(value);\n  }\n\n  /** Audio mute state */\n  get muted() {\n    return this.getMuted();\n  }\n\n  set muted(value: boolean) {\n    this.setMuted(value);\n  }\n\n  /** Indicates whether playback should loop once the end is reached */\n  get loop() {\n    return this.getLoop();\n  }\n\n  set loop(value: boolean) {\n    this.setLoop(value);\n  }\n\n  /** Animation frame rate, measured in frames per second */\n  get framerate() {\n    return this.note.framerate;\n  }\n\n  /** Animation frame count */\n  get frameCount() {\n    return this.note.frameCount;\n  }\n\n  /** Animation frame speed */\n  get frameSpeed() {\n    return this.note.frameSpeed;\n  }\n\n  /**\n   * Implementation of the `HTMLMediaElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/buffered | buffered } property\n   * @category HTMLVideoElement compatibility\n   */\n  get buffered() {\n    return createTimeRanges([[0, this.duration]]);\n  }\n\n  /**\n   * Implementation of the `HTMLMediaElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seekable | seekable} property\n   * @category HTMLVideoElement compatibility\n   */\n  get seekable() {\n    return createTimeRanges([[0, this.duration]]);\n  }\n\n  /**\n   * Implementation of the `HTMLMediaElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/currentSrc | currentSrc} property\n   * @category HTMLVideoElement compatibility\n   */\n  get currentSrc() {\n    return this._src;\n  }\n\n  /**\n   * Implementation of the `HTMLVideoElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/videoWidth | videoWidth} property\n   * @category HTMLVideoElement compatibility\n   */\n  get videoWidth() {\n    return this.isNoteLoaded ? this.note.imageWidth : 0;\n  }\n\n  /**\n   * Implementation of the `HTMLVideoElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/videoHeight | videoHeight} property\n   * @category HTMLVideoElement compatibility\n   */\n  get videoHeight() {\n    return this.isNoteLoaded ? this.note.imageHeight : 0;\n  }\n\n  /** \n   * Open a Flipnote from a source\n   * @category Lifecycle\n   */\n  async load(source: any, getParser: FlipnoteSourceParser, loaders?: LoaderDefinitionList) {\n    // close currently open note first\n    if (this.isNoteLoaded) \n      this.closeNote();\n    // keep track of source\n    this._src = source;\n    // if no source specified, just reset everything\n    if (!source)\n      return this.openNote(this.note);\n    // otherwise do a normal load\n    this.emit(PlayerEvent.LoadStart);\n\n    const [err, note] = await until(() => getParser(source, this.parserSettings, loaders));\n\n    if (err) {\n      this.emit(PlayerEvent.Error, err);\n      throw new Error(`Error loading Flipnote: ${ err.message }`);\n    }\n\n    this.lastParser = getParser;\n    this.lastLoaders = loaders;\n    this.openNote(note);\n  }\n\n  /**\n   * Reload the current Flipnote\n   */\n  async reload() {\n    if (this.note && this.lastParser) \n      return await this.load(this.note.buffer, this.lastParser, this.lastLoaders);\n  }\n\n  /**\n   * Reload the current Flipnote\n   */\n  async updateSettings(settings: FlipnoteParserSettings) {\n    this.parserSettings = settings;\n    return await this.reload();\n  }\n\n  /** \n   * Close the currently loaded Flipnote\n   * @category Lifecycle\n   */\n  closeNote() {\n    this.pause();\n    this.note = null;\n    this.isNoteLoaded = false;\n    this.meta = null;\n    this._src = null;\n    this._frame = 0;\n    // this.playbackFrame = null;\n    this.playbackTime = 0;\n    this.duration = 0;\n    this.loop = false;\n    this.isPlaying = false;\n    this.wasPlaying = false;\n    this.hasPlaybackStarted = false;\n    this.showThumbnail = true;\n    this.renderer.clear();\n  }\n\n  /** \n   * Open a Flipnote into the player\n   * @category Lifecycle\n   */\n  openNote(note: Flipnote) {\n    if (this.isNoteLoaded)\n      this.closeNote();\n    this.note = note;\n    this.meta = note.meta;\n    this.emit(PlayerEvent.LoadedMeta);\n    this.noteFormat = note.format;\n    this.duration = note.duration;\n    this.playbackTime = 0;\n    this._frame = 0;\n    this.isNoteLoaded = true;\n    this.isPlaying = false;\n    this.wasPlaying = false;\n    this.hasPlaybackStarted = false;\n    this.layerVisibility = note.layerVisibility;\n    this.showThumbnail = true;\n    this.audio.setBuffer(note.getAudioMasterPcm(), note.sampleRate);\n    this.emit(PlayerEvent.CanPlay);\n    this.emit(PlayerEvent.CanPlayThrough);\n    this.setLoop(note.meta.loop);\n    this.renderer.setNote(note);\n    this.drawFrame(note.thumbFrameIndex);\n    this.emit(PlayerEvent.LoadedData);\n    this.emit(PlayerEvent.Load);\n    this.emit(PlayerEvent.Ready);\n    if (this.autoplay)\n      this.play();\n  }\n\n  /**\n   * Playback animation loop\n   * @internal\n   * @category Playback Control \n   */\n  playbackLoop = (timestamp: DOMHighResTimeStamp) => {\n    if (!this.isPlaying)\n      return;\n    const now = timestamp / 1000;\n    const duration = this.duration;\n    const currAudioTime = this.audio.getCurrentTime();\n    let currPlaybackTime = now - this.playbackStartTime;\n    // try to keep playback time in sync with the audio if there's any slipping\n    if (Math.abs((currPlaybackTime % duration) - (currAudioTime % duration)) > 0.01)\n      currPlaybackTime = currAudioTime;\n    // handle playback end, if reached\n    if (currPlaybackTime >= duration) {\n      if (this.loop) {\n        this.playbackStartTime = now;\n        this.emit(PlayerEvent.Loop);\n      }\n      else {\n        this.pause();\n        this._hasEnded = true;\n        this.emit(PlayerEvent.Ended);\n        return;\n      }\n    }\n    this.setCurrentTime(currPlaybackTime % duration);\n    this.playbackLoopId = requestAnimationFrame(this.playbackLoop);\n  }\n\n  /**\n   * Set the current playback time\n   * @category Playback Control \n   */\n  setCurrentTime(value: number) {\n    this.assertNoteLoaded();\n    const i = Math.floor(value / (1 / this.framerate));\n    this.setCurrentFrame(i);\n    this.playbackTime = value;\n    this.emit(PlayerEvent.Progress, this.progress);\n  }\n\n  /**\n   * Get the current playback time\n   * @category Playback Control \n   */\n  getCurrentTime() {\n    return this.currentTime;\n  }\n\n  /**\n   * Get the current time as a counter string, like `\"0:00 / 1:00\"`\n   * @category Playback Control\n   */\n  getTimeCounter() {\n    const currentTime = formatTime(Math.max(this.currentTime, 0));\n    const duration = formatTime(this.duration);\n    return `${ currentTime } / ${ duration }`;\n  }\n\n  /**\n   * Get the current frame index as a counter string, like `\"001 / 999\"`\n   * @category Playback Control\n   */\n  getFrameCounter() {\n    const frame = padNumber(this.currentFrame + 1, 3);\n    const total = padNumber(this.frameCount, 3);\n    return `${ frame } / ${ total }`;\n  }\n\n  /**\n   * Set the current playback progress as a percentage (`0` to `100`)\n   * @category Playback Control\n   */\n  setProgress(value: number) {\n    this.assertNoteLoaded();\n    assertRange(value, 0, 100, 'progress');\n    this.currentTime = this.duration * (value / 100);\n  }\n\n  /**\n   * Get the current playback progress as a percentage (0 to 100)\n   * @category Playback Control \n   */\n  getProgress() {\n    return this.progress;\n  }\n\n  /** \n   * Begin animation playback starting at the current position\n   * @category Playback Control \n   */\n  async play() {\n    this.assertNoteLoaded();\n    if (this.isPlaying)\n      return;\n    // if the flipnote hasn't looped and is at the end, rewind it to 0\n    if (this._hasEnded) {\n      this.playbackTime = 0;\n      this._hasEnded = false;\n    }\n    const now = performance.now();\n    this.playbackStartTime = (now / 1000) - this.playbackTime;\n    this.isPlaying = true;\n    this.hasPlaybackStarted = true;\n    this.playAudio();\n    this.playbackLoop(now);\n    this.emit(PlayerEvent.Play);\n  }\n\n  /** \n   * Pause animation playback at the current position\n   * @category Playback Control \n   */\n  pause() {\n    if (!this.isPlaying)\n      return;\n    this.isPlaying = false;\n    if (this.playbackLoopId !== null) \n      cancelAnimationFrame(this.playbackLoopId);\n    this.stopAudio();\n    this.emit(PlayerEvent.Pause);\n  }\n\n  /** \n   * Resumes animation playback if paused, otherwise pauses\n   * @category Playback Control \n   */\n  togglePlay() {\n    if (!this.isPlaying)\n      this.play();\n    else\n      this.pause();\n  }\n\n  /** \n   * Determines if playback is currently paused\n   * @category Playback Control \n   */\n  getPaused() {\n    return !this.isPlaying;\n  }\n\n  /** \n   * Get the duration of the Flipnote in seconds\n   * @category Playback Control \n   */\n  getDuration() {\n    return this.duration;\n  }\n\n  /** \n   * Determines if playback is looped\n   * @category Playback Control \n   */\n  getLoop() {\n    return this._loop;\n  }\n\n  /** \n   * Set the playback loop\n   * @category Playback Control \n   */\n  setLoop(loop: boolean) {\n    this._loop = loop;\n    this.audio.loop = loop;\n  }\n\n  /** \n   * Switch the playback loop between on and off\n   * @category Playback Control \n   */\n  toggleLoop() {\n    this.setLoop(!this._loop);\n  }\n\n  /** \n   * Jump to a given animation frame\n   * @category Frame Control \n   */\n  setCurrentFrame(newFrameValue: number) {\n    this.assertNoteLoaded();\n    const newFrameIndex = Math.max(0, Math.min(Math.floor(newFrameValue), this.frameCount - 1));\n    if (newFrameIndex === this.currentFrame && !this.showThumbnail)\n      return;\n    this._frame = newFrameIndex;\n    this.drawFrame(newFrameIndex);\n    this.showThumbnail = false;\n    if (!this.isPlaying) {\n      this.playbackTime = newFrameIndex * (1 / this.framerate);\n      this.emit(PlayerEvent.SeekEnd);\n    } \n    this.emit(PlayerEvent.FrameUpdate, this.currentFrame);\n    this.emit(PlayerEvent.Progress, this.progress);\n    this.emit(PlayerEvent.TimeUpdate, this.currentFrame);\n  }\n\n  /** \n   * Jump to the next animation frame\n   * If the animation loops, and is currently on its last frame, it will wrap to the first frame\n   * @category Frame Control \n   */\n  nextFrame() {\n    if ((this.loop) && (this.currentFrame === this.frameCount -1))\n      this.currentFrame = 0;\n    else\n      this.currentFrame += 1;\n    this.emit(PlayerEvent.FrameNext);\n  }\n\n  /** \n   * Jump to the next animation frame\n   * If the animation loops, and is currently on its first frame, it will wrap to the last frame\n   * @category Frame Control \n   */\n  prevFrame() {\n    if ((this.loop) && (this.currentFrame === 0))\n      this.currentFrame = this.frameCount - 1;\n    else\n      this.currentFrame -= 1;\n    this.emit(PlayerEvent.FramePrev);\n  }\n\n  /** \n   * Jump to the last animation frame\n   * @category Frame Control \n   */\n  lastFrame() {\n    this.currentFrame = this.frameCount - 1;\n    this.emit(PlayerEvent.FrameLast);\n  }\n\n  /** \n   * Jump to the first animation frame\n   * @category Frame Control \n   */\n  firstFrame() {\n    this.currentFrame = 0;\n    this.emit(PlayerEvent.FrameFirst);\n  }\n\n  /** \n   * Jump to the thumbnail frame\n   * @category Frame Control \n   */\n  thumbnailFrame() {\n    this.currentFrame = this.note.thumbFrameIndex;\n  }\n\n  /** \n   * Begins a seek operation\n   * @category Playback Control \n   */\n  startSeek() {\n    if (!this.isSeeking) {\n      this.emit(PlayerEvent.SeekStart);\n      this.wasPlaying = this.isPlaying;\n      this.pause();\n      this.isSeeking = true;\n    }\n  }\n\n  /** \n   * Seek the playback progress to a different position\n   * @param position - animation playback position, range `0` to `1`\n   * @category Playback Control \n   */\n  seek(position: number) {\n    if (this.isSeeking)\n      this.progress = position * 100;\n  }\n\n  /** \n   * Ends a seek operation\n   * @category Playback Control \n   */\n  endSeek() {\n    if (this.isSeeking && this.wasPlaying === true)\n      this.play();\n    this.wasPlaying = false;\n    this.isSeeking = false;\n  }\n\n  /**\n   * Draws the specified animation frame to the canvas. Note that this doesn't update the playback time or anything, it simply decodes a given frame and displays it.\n   * @param frameIndex \n   * @category Display Control \n   */\n  drawFrame(frameIndex: number) {\n    this.renderer.drawFrame(frameIndex);\n  }\n\n  /**\n   * Forces the current animation frame to be redrawn\n   * @category Display Control \n   */\n  forceUpdate() {\n    this.renderer.forceUpdate();\n  }\n\n  /**\n   * Resize the playback canvas to a new size\n   * @param width - new canvas width (pixels)\n   * @param height - new canvas height (pixels)\n   * \n   * The ratio between `width` and `height` should be 3:4 for best results\n   * \n   * @category Display Control \n   */\n  resize(width: number, height: number) {\n    if (height !== width * .75)\n      console.warn(`Canvas width to height ratio should be 3:4 for best results (got ${width}x${height})`);\n    this.renderer.setCanvasSize(width, height);\n    this.forceUpdate();\n  }\n\n  /**\n   * Sets whether an animation layer should be visible throughout the entire animation\n   * @param layer - layer index, starting at 1\n   * @param value - `true` for visible, `false` for invisible\n   * \n   * @category Display Control \n   */\n  setLayerVisibility(layer: number, value: boolean) {\n    this.note.layerVisibility[layer] = value;\n    this.layerVisibility[layer] = value;\n    this.forceUpdate();\n  }\n\n  /**\n   * Returns the visibility state for a given layer\n   * @param layer - layer index, starting at 1\n   * \n   * @category Display Control\n   */\n  getLayerVisibility(layer: number) {\n    return this.layerVisibility[layer];\n  }\n\n  /**\n   * Toggles whether an animation layer should be visible throughout the entire animation\n   * \n   * @category Display Control \n   */\n  toggleLayerVisibility(layerIndex: number) {\n    this.setLayerVisibility(layerIndex, !this.layerVisibility[layerIndex]);\n  }\n\n  playAudio() {\n    this.audio.playFrom(this.currentTime);\n  }\n\n  stopAudio() {\n    this.audio.stop();\n  }\n\n  /** \n   * Toggle audio Sudomemo equalizer filter\n   * @category Audio Control\n   */\n  toggleAudioEq() {\n    this.setAudioEq(!this.audio.useEq);\n  }\n\n  /** \n   * Turn audio Sudomemo equalizer filter on or off\n   * @category Audio Control\n   */\n  setAudioEq(state: boolean) {\n    if (this.isPlaying) {\n      this.wasPlaying = true;\n      this.stopAudio();\n    }\n    this.audio.useEq = state;\n    if (this.wasPlaying) {\n      this.wasPlaying = false;\n      this.playAudio();\n    }\n  }\n\n  /**\n   * Turn the audio off\n   * @category Audio Control\n   */\n  mute() {\n    this.setMuted(true);\n  }\n\n  /**\n   * Turn the audio on\n   * @category Audio Control\n   */\n  unmute() {\n    this.setMuted(false);\n  }\n\n  /**\n   * Turn the audio on or off\n   * @category Audio Control\n   */\n  setMuted(isMute: boolean) {\n    if (isMute)\n      this.audio.volume = 0;\n    else\n      this.audio.volume = this._volume;\n    this._muted = isMute;\n    this.emit(PlayerEvent.VolumeChange, this.audio.volume);\n  }\n\n  /**\n   * Get the audio mute state\n   * @category Audio Control\n   */\n  getMuted() {\n    return this.volume === 0 ? true : this._muted;\n  }\n\n  /** \n   * Switch the audio between muted and unmuted\n   * @category Audio Control\n   */\n  toggleMuted() {\n    this.setMuted(!this._muted);\n  }\n\n  /**\n   * Set the audio volume\n   * @category Audio Control\n   */\n  setVolume(volume: number) {\n    assertRange(volume, 0, 1, 'volume');\n    this._volume = volume;\n    this.audio.volume = volume;\n    this.emit(PlayerEvent.VolumeChange, this.audio.volume);\n  }\n\n  /**\n   * Get the current audio volume\n   * @category Audio Control\n   */\n  getVolume() {\n    return this._muted ? 0 : this._volume;\n  }\n\n  /**\n   * Implementation of the `HTMLVideoElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/seekToNextFrame | seekToNextFrame} method\n   * @category HTMLVideoElement compatibility\n   */\n  seekToNextFrame() {\n    this.nextFrame();\n  }\n\n  /**\n   * Implementation of the `HTMLMediaElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/fastSeek | fastSeek} method\n   * @category HTMLVideoElement compatibility\n   */\n  fastSeek(time: number) {\n    this.currentTime = time;\n  }\n\n  /**\n   * Implementation of the `HTMLVideoElement` {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality | getVideoPlaybackQuality } method\n   * @category HTMLVideoElement compatibility\n   */\n  canPlayType(mediaType: string) {\n    switch (mediaType) {\n      case 'application/x-ppm':\n      case 'application/x-kwz':\n      case 'video/x-ppm':\n      case 'video/x-kwz':\n      // lauren is planning on registering these officially\n      case 'video/vnd.nintendo.ugomemo.ppm':\n      case 'video/vnd.nintendo.ugomemo.kwz':\n        return 'probably';\n      case 'application/octet-stream':\n        return 'maybe';\n      // and koizumi is planning his revenge\n      case 'video/vnd.nintendo.ugomemo.fykt':\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Implementation of the `HTMLVideoElement` [https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality](getVideoPlaybackQuality) method\n   * @category HTMLVideoElement compatibility\n   */\n  getVideoPlaybackQuality() {\n    const quality: VideoPlaybackQuality = {\n      creationTime: 0,\n      droppedVideoFrames: 0,\n      // @ts-ignore\n      corruptedVideoFrames: 0,\n      totalVideoFrames: this.frameCount\n    };\n    return quality;\n  }\n\n  /**\n   * Implementation of the `HTMLVideoElement` [https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/requestPictureInPicture](requestPictureInPicture) method. Not currently working, only a stub.\n   * @category HTMLVideoElement compatibility\n   */\n  requestPictureInPicture() {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Implementation of the `HTMLVideoElement` [https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/captureStream](captureStream) method. Not currently working, only a stub.\n   * @category HTMLVideoElement compatibility\n   */\n  captureStream() {\n    throw new Error('Not implemented');\n  }\n\n\n  /**\n   * Fired when animation playback begins or is resumed\n   * @category playback\n   * @event play\n   */\n  onplay: () => void;\n\n  /**\n   * Fired when animation playback is paused\n   * @category playback\n   * @event pause \n   */\n  onpause: () => void;\n\n  /**\n   * Fired when the Flipnote has loaded enough to begin animation play\n   * @category HTMLVideoElement compatibility\n   * @event canplay\n   */\n  oncanplay: () => void;\n\n  /**\n   *Fired when the Flipnote has loaded enough to play successfully\n   * @category HTMLVideoElement compatibility\n   * @event canplaythrough\n   */\n  oncanplaythrough: () => void;\n\n  /**\n   * Fired when a seek operation begins\n   * @category playback\n   * @event seeking\n   */\n  onseeking: () => void;\n\n  /**\n   * Fired when a seek operation completes\n   * @category playback\n   * @event seeked\n   */\n  onseeked: () => void;\n\n  /**\n   * Fired when the animation duration has changed\n   * @category HTMLVideoElement compatibility\n   * @event durationchange\n   */\n  ondurationchange: () => void;\n\n  /**\n   * Fired when playback has looped after reaching the end\n   * @category playback\n   * @event loop\n   */\n  onloop: () => void;\n\n  /**\n   * Fired when playback has ended\n   * @category playback\n   * @event ended\n   */\n  onended: () => void;\n\n  /**\n   * Fired when the player audio volume or muted state has changed\n   * @category audio\n   * @event volumechange\n   */\n  onvolumechange: (volume: number) => void;\n\n  /**\n   * Fired when playback progress has changed\n   * @category playback\n   * @event progress\n   */\n  onprogress: (progress: number) => void;\n\n  /**\n   * Fired when the playback time has changed\n   * @category playback\n   * @event timeupdate\n   */\n  ontimeupdate: (time: number) => void;\n\n  /**\n   * Fired when the current frame index has changed\n   * @category frame\n   * @event frameupdate\n   */\n  onframeupdate: (frameIndex: number) => void;\n\n  /**\n   * Fired when {@link nextFrame} has been called\n   * @category frame\n   * @event framenext\n   */\n  onframenext: () => void;\n\n  /**\n   * Fired when {@link prevFrame} has been called\n   * @category frame\n   * @event frameprev\n   */\n  onframeprev: () => void;\n\n  /**\n   * Fired when {@link firstFrame} has been called\n   * @category frame\n   * @event framefirst\n   */\n  onframefirst: () => void;\n\n  /**\n   * Fired when {@link lastFrame} has been called\n   * @category frame\n   * @event framelast\n   */\n  onframelast: () => void;\n\n  /**\n   * Fired when a Flipnote is ready for playback\n   * @category lifecycle\n   * @event ready\n   */\n  onready: () => void;\n\n  /**\n   * Fired when a Flipnote has finished loading\n   * @category lifecycle\n   * @event load\n   */\n  onload: () => void;\n\n  /**\n   * Fired when a Flipnote has begun loading\n   * @category lifecycle\n   * @event loadstart\n   */\n  onloadstart: () => void;\n\n  /**\n   * Fired when the Flipnote data has been loaded; implementation of the `HTMLMediaElement` [https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadeddata_event](loadeddata) event.\n   * @category HTMLVideoElement compatibility\n   * @event loadeddata\n   */\n  onloadeddata: () => void;\n\n  /**\n   * Fired when the Flipnote metadata has been loaded; implementation of the `HTMLMediaElement` [https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadedmetadata_event](loadedmetadata) event.\n   * @category HTMLVideoElement compatibility\n   * @event loadedmetadata\n   */\n  onloadedmetadata: () => void;\n\n  /**\n   * Fired when the media has become empty; implementation of the `HTMLMediaElement` [https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/emptied_event](emptied) event.\n   * @category HTMLVideoElement compatibility\n   * @event emptied\n   */\n  onemptied: () => void;\n\n  /**\n   * Fired after the Flipnote has been closed with {@link close}\n   * @category lifecycle\n   * @event close\n   */\n  onclose: () => void;\n\n  /**\n   * Fired after a loading, parsing or playback error occurs\n   * @category lifecycle\n   * @event error\n   */\n  onerror: (err?: Error) => void;\n\n  /**\n   * Fired just before the player has been destroyed, after calling {@link destroy}\n   * @category lifecycle\n   * @event destroy\n   */\n  ondestroy: () => void;\n\n  /** \n   * Add an event callback\n   * @category Event API\n   */\n  on(eventType: PlayerEvent | PlayerEvent[], listener: Function) {\n    const events = this.events;\n    const eventList = Array.isArray(eventType) ? eventType : [eventType];\n    eventList.forEach(eventType => {\n      if (!events.has(eventType))\n        events.set(eventType, [listener]);\n      else\n        events.get(eventType).push(listener);\n    });\n  }\n\n  /** \n   * Remove an event callback\n   * @category Event API\n   */\n  off(eventType: PlayerEvent | PlayerEvent[], callback: Function) {\n    const events = this.events;\n    const eventList = Array.isArray(eventType) ? eventType : [eventType];\n    eventList.forEach(eventType => {\n      if (!events.has(eventType))\n        return;\n      const callbackList = events.get(eventType);\n      events.set(eventType, callbackList.splice(callbackList.indexOf(callback), 1));\n    });\n  }\n\n  /** \n   * Emit an event - mostly used internally\n   * @category Event API\n   */\n  emit(eventType: PlayerEvent, ...args: any) {\n    const events = this.events;\n    if (eventType !== PlayerEvent.__Any && events.has(eventType)) {\n      const callbackList = events.get(eventType);\n      callbackList.forEach(callback => callback.apply(null, args));\n      // call onwhatever() function for this event, if one has been added\n      const listenerName = `on${ eventType }`;\n      const thisAsAny = this as any;\n      if (typeof thisAsAny[listenerName] === 'function')\n        thisAsAny[listenerName].apply(null, args);\n    }\n    // \"any\" event listeners fire for all events, and receive eventType as their first param\n    if (events.has(PlayerEvent.__Any)) {\n      const callbackList = events.get(PlayerEvent.__Any);\n      callbackList.forEach(callback => callback.apply(null, [eventType, ...args]));\n    }\n  }\n\n  /** \n   * Remove all registered event callbacks\n   * @category Event API\n   */\n  clearEvents() {\n    this.events.clear();\n  }\n\n  /** \n   * Destroy a Player instance\n   * @category Lifecycle\n   */\n  async destroy() {\n    this.clearEvents();\n    this.emit(PlayerEvent.Destroy);\n    this.closeNote();\n    await this.renderer.destroy();\n    await this.audio.destroy();\n  }\n\n  /** \n   * Returns true if the player supports a given event or method name\n   */\n  supports(name: string) {\n    const isEvent = this.supportedEvents.includes(name as PlayerEvent);\n    const isMethod = typeof (this as any)[name] === 'function';\n    return isEvent || isMethod;\n  }\n\n  /** @internal */\n  assertNoteLoaded() {\n    assert(this.isNoteLoaded, 'No Flipnote is currently loaded in this player');\n  }\n\n}","import { Player } from '../player';\n\n/** @internal */\ntype Constructor<T = {}> = new (...args: any[]) => T;\n\n/** \n * This is a bit of a hack to get a player component class to wrap a Player instance, \n * while also inheriting all of the Player API's methods and properties.\n * \n * The resulting PlayerMixinClass will get a Player instance on this.player, \n * and all of the Player API methods and properties applied as wrappers.\n * \n * e.g. \n * - PlayerMixinClass.play() will have the same behaviour as Player.play(), but will call this.player.play() internally.\n * - PlayerMixinClass.paused will have getters and setters to match it to this.player.paused.\n * @internal\n */\nexport function PlayerMixin<TargetBase extends Constructor>(Target: TargetBase) {\n  class PlayerMixinClass extends Target {\n    // the player instance that Mixin will be wrapping\n    player: Player;\n\n    // Mixin needs to re-define all the normal player properties, but most should be made readonly anyway...\n\n    get renderer() {\n      return this.player.renderer;\n    }\n\n    get audio() {\n      return this.player.audio;\n    }\n\n    get canvasEl() {\n      return this.player.canvasEl;\n    }\n\n    get note() {\n      return this.player.note;\n    }\n\n    get noteFormat() {\n      return this.player.noteFormat;\n    }\n\n    get meta() {\n      return this.player.meta;\n    }\n\n    get duration() {\n      return this.player.duration;\n    }\n\n    get layerVisibility() {\n      return this.player.layerVisibility;\n    }\n\n    get autoplay() {\n      return this.player.autoplay;\n    }\n  \n    set autoplay(value: boolean) {\n      this.player.autoplay = value;\n    }\n  };\n\n  // make sure mixin class gets the player types\n  interface PlayerMixinClass extends Player {}\n\n  // add all Player API methods and getter/setter props to target\n  for (let key of Reflect.ownKeys(Player.prototype)) {\n    let desc = Object.getOwnPropertyDescriptor(Player.prototype, key);\n\n    // don't override stuff that already exists, and ignore JS prototype junk\n    if (key in Target.prototype || key === 'constructor' || key === 'name' || key === 'prototype') {\n      continue;\n    }\n    // override methods to call e.g. `this.player.methodName()` when `methodName()` is called\n    else if (desc.value && typeof desc.value === 'function') {\n      Object.defineProperty(PlayerMixinClass.prototype, key, {\n        ...desc,\n        value: function(...args: any[]) {\n          return this.player[key](...args);\n        }\n      });\n    }\n    // override getters and setters so that e.g. `property` will always reflect `this.player.property`\n    else if (desc.get || desc.set) {\n      Object.defineProperty(PlayerMixinClass.prototype, key, {\n        ...desc,\n        set: function(value: any) {\n          this.player[key] = value;\n        },\n        get: function() {\n          return this.player[key];\n        }\n      });\n    }\n  }\n\n  return PlayerMixinClass;\n}","import { assertNodeEnv, assertBrowserEnv } from '../utils';\n\nexport abstract class EncoderBase {\n\n  mimeType: string;\n  dataUrl: string = null;\n\n  /**\n   * Returns the file data as an {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer | ArrayBuffer}\n   */\n  abstract getArrayBuffer(): ArrayBuffer;\n  \n  /**\n   * Returns the file data as a NodeJS {@link https://nodejs.org/api/buffer.html | Buffer}\n   * \n   * Note: This method does not work outside of NodeJS environments\n   */\n  getBuffer(): Buffer {\n    assertNodeEnv();\n    return Buffer.from(this.getArrayBuffer());\n  }\n\n  /**\n   * Returns the file data as a {@link https://developer.mozilla.org/en-US/docs/Web/API/Blob | Blob}\n   */\n  getBlob(): Blob {\n    assertBrowserEnv();;\n    return new Blob([this.getArrayBuffer()], {\n      type: this.mimeType\n    });\n  }\n\n  /**\n   * Returns the file data as an {@link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL | Object URL}\n   * \n   * Note: This method does not work outside of browser environments\n   */\n  getUrl(): string {\n    assertBrowserEnv();\n    if (this.dataUrl)\n      return this.dataUrl;\n    return window.URL.createObjectURL(this.getBlob());\n  }\n\n  /**\n   * Revokes this file's {@link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL | Object URL} if one has been created, use this when the url created with {@link getUrl} is no longer needed, to preserve memory.\n   * \n   * Note: This method does not work outside of browser environments\n   */\n  revokeUrl(): void {\n    assertBrowserEnv();\n    if (this.dataUrl)\n      window.URL.revokeObjectURL(this.dataUrl);\n  }\n\n\n}","import { ByteArray } from '../utils/byteArray';\n\n/*\n  LZWEncoder.js\n\n  Authors\n  Kevin Weiner (original Java version - kweiner@fmsware.com)\n  Thibault Imbert (AS3 version - bytearray.org)\n  Johan Nordberg (JS version - code@johan-nordberg.com)\n  James Daniel (ES6/TS version)\n\n  Acknowledgements\n  GIFCOMPR.C - GIF Image compression routines\n  Lempel-Ziv compression based on 'compress'. GIF modifications by\n  David Rowley (mgardi@watdcsu.waterloo.edu)\n  GIF Image compression - modified 'compress'\n  Based on: compress.c - File compression ala IEEE Computer, June 1984.\n  By Authors: Spencer W. Thomas (decvax!harpo!utah-cs!utah-gr!thomas)\n  Jim McKie (decvax!mcvax!jim)\n  Steve Davies (decvax!vax135!petsd!peora!srd)\n  Ken Turkowski (decvax!decwrl!turtlevax!ken)\n  James A. Woods (decvax!ihnp4!ames!jaw)\n  Joe Orost (decvax!vax135!petsd!joe)\n*/\n\n/** @internal */\nconst EOF = -1;\n/** @internal */\nconst BITS = 12;\n/** @internal */\nconst HSIZE = 5003; // 80% occupancy\n/** @internal */\nconst masks = [\n  0x0000, 0x0001, 0x0003, 0x0007, 0x000F, 0x001F,\n  0x003F, 0x007F, 0x00FF, 0x01FF, 0x03FF, 0x07FF,\n  0x0FFF, 0x1FFF, 0x3FFF, 0x7FFF, 0xFFFF\n];\n\n/** @internal */\nexport class LzwCompressor {\n  width: number;\n  height: number;\n  pixels: Uint8Array;\n  colorDepth: number;\n\n  private initCodeSize: number;\n  private accum = new Uint8Array(256);\n  private htab = new Int32Array(HSIZE);\n  private codetab = new Int32Array(HSIZE);\n  private cur_accum = 0;\n  private cur_bits = 0;\n  private n_bits: number;\n  private a_count: number;\n  private remaining: number;\n  private curPixel = 0;\n  private free_ent = 0; // first unused entry\n  private maxcode: number;\n  // block compression parameters -- after all codes are used up,\n  // and compression rate changes, start over.\n  private clear_flg: boolean = false;\n  // Algorithm: use open addressing double hashing (no chaining) on the\n  // prefix code / next character combination. We do a variant of Knuth's\n  // algorithm D (vol. 3, sec. 6.4) along with G. Knott's relatively-prime\n  // secondary probe. Here, the modular division first probe is gives way\n  // to a faster exclusive-or manipulation. Also do block compression with\n  // an adaptive reset, whereby the code table is cleared when the compression\n  // ratio decreases, but after the table fills. The variable-length output\n  // codes are re-sized at this point, and a special CLEAR code is generated\n  // for the decompressor. Late addition: construct the table according to\n  // file size for noticeable speed improvement on small files. Please direct\n  // questions about this implementation to ames!jaw.\n  private g_init_bits: number = undefined;\n  private ClearCode: number = undefined;\n  private EOFCode: number = undefined;\n\n  constructor(width: number, height: number, colorDepth: number) {\n    this.width = width;\n    this.height = height;\n    this.colorDepth = colorDepth;\n    this.reset();\n  }\n\n  reset() {\n    this.initCodeSize = Math.max(2, this.colorDepth);\n    this.accum.fill(0);\n    this.htab.fill(0);\n    this.codetab.fill(0);\n    this.cur_accum = 0;\n    this.cur_bits = 0;\n    this.curPixel = 0;\n    this.free_ent = 0; // first unused entry\n    this.maxcode;\n    // block compression parameters -- after all codes are used up,\n    // and compression rate changes, start over.\n    this.clear_flg = false;\n    // Algorithm: use open addressing double hashing (no chaining) on the\n    // prefix code / next character combination. We do a variant of Knuth's\n    // algorithm D (vol. 3, sec. 6.4) along with G. Knott's relatively-prime\n    // secondary probe. Here, the modular division first probe is gives way\n    // to a faster exclusive-or manipulation. Also do block compression with\n    // an adaptive reset, whereby the code table is cleared when the compression\n    // ratio decreases, but after the table fills. The variable-length output\n    // codes are re-sized at this point, and a special CLEAR code is generated\n    // for the decompressor. Late addition: construct the table according to\n    // file size for noticeable speed improvement on small files. Please direct\n    // questions about this implementation to ames!jaw.\n    this.g_init_bits = undefined;\n    this.ClearCode = undefined;\n    this.EOFCode = undefined;\n  }\n\n  // Add a character to the end of the current packet, and if it is 254\n  // characters, flush the packet to disk.\n  char_out(c: number, outs: ByteArray) {\n    this.accum[this.a_count++] = c;\n    if (this.a_count >= 254) this.flush_char(outs);\n  }\n\n  // Clear out the hash table\n  // table clear for block compress\n  cl_block(outs: ByteArray) {\n    this.cl_hash(HSIZE);\n    this.free_ent = this.ClearCode + 2;\n    this.clear_flg = true;\n    this.output(this.ClearCode, outs);\n  }\n\n  // Reset code table\n  cl_hash(hsize: number) {\n    for (var i = 0; i < hsize; ++i) this.htab[i] = -1;\n  }\n\n  compress(init_bits: number, outs: ByteArray) {\n    var fcode, c, i, ent, disp, hsize_reg, hshift;\n\n    // Set up the globals: this.g_init_bits - initial number of bits\n    this.g_init_bits = init_bits;\n\n    // Set up the necessary values\n    this.clear_flg = false;\n    this.n_bits = this.g_init_bits;\n    this.maxcode = this.get_maxcode(this.n_bits);\n\n    this.ClearCode = 1 << (init_bits - 1);\n    this.EOFCode = this.ClearCode + 1;\n    this.free_ent = this.ClearCode + 2;\n\n    this.a_count = 0; // clear packet\n\n    ent = this.nextPixel();\n\n    hshift = 0;\n    for (fcode = HSIZE; fcode < 65536; fcode *= 2) ++hshift;\n    hshift = 8 - hshift; // set hash code range bound\n    hsize_reg = HSIZE;\n    this.cl_hash(hsize_reg); // clear hash table\n\n    this.output(this.ClearCode, outs);\n\n    outer_loop: while ((c = this.nextPixel()) != EOF) {\n      fcode = (c << BITS) + ent;\n      i = (c << hshift) ^ ent; // xor hashing\n      if (this.htab[i] === fcode) {\n        ent = this.codetab[i];\n        continue;\n      } \n      else if (this.htab[i] >= 0) { // non-empty slot\n        disp = hsize_reg - i; // secondary hash (after G. Knott)\n        if (i === 0) {\n          disp = 1;\n        }\n        do {\n          if ((i -= disp) < 0) {\n            i += hsize_reg;\n          }\n          if (this.htab[i] === fcode) {\n            ent = this.codetab[i];\n            continue outer_loop;\n          }\n        } while (this.htab[i] >= 0);\n      }\n      this.output(ent, outs);\n      ent = c;\n      if (this.free_ent < 1 << BITS) {\n        this.codetab[i] = this.free_ent++; // code -> hasthis.htable\n        this.htab[i] = fcode;\n      } else {\n        this.cl_block(outs);\n      }\n    }\n\n    // Put out the final code.\n    this.output(ent, outs);\n    this.output(this.EOFCode, outs);\n  }\n\n  encode(pixels: Uint8Array, outs: ByteArray) {\n    this.pixels = pixels;\n    outs.writeByte(this.initCodeSize); // write 'initial code size' byte\n    this.remaining = this.width * this.height; // reset navigation variables\n    this.curPixel = 0;\n    this.compress(this.initCodeSize + 1, outs); // compress and write the pixel data\n    outs.writeByte(0); // write block terminator\n  }\n\n  // Flush the packet to disk, and reset the this.accumulator\n  flush_char(outs: ByteArray) {\n    if (this.a_count > 0) {\n      outs.writeByte(this.a_count);\n      outs.writeBytes(this.accum, 0, this.a_count);\n      this.a_count = 0;\n    }\n  }\n\n  get_maxcode(n_bits: number) {\n    return (1 << n_bits) - 1;\n  }\n\n  // Return the next pixel from the image\n  nextPixel() {\n    if (this.remaining === 0) return EOF;\n    --this.remaining;\n    var pix = this.pixels[this.curPixel++];\n    return pix & 0xff;\n  }\n\n  output(code: number, outs: ByteArray) {\n    this.cur_accum &= masks[this.cur_bits];\n\n    if (this.cur_bits > 0) this.cur_accum |= (code << this.cur_bits);\n    else this.cur_accum = code;\n\n    this.cur_bits += this.n_bits;\n\n    while (this.cur_bits >= 8) {\n      this.char_out((this.cur_accum & 0xff), outs);\n      this.cur_accum >>= 8;\n      this.cur_bits -= 8;\n    }\n\n    // If the next entry is going to be too big for the code size,\n    // then increase it, if possible.\n    if (this.free_ent > this.maxcode || this.clear_flg) {\n      if (this.clear_flg) {\n        this.maxcode = this.get_maxcode(this.n_bits = this.g_init_bits);\n        this.clear_flg = false;\n      } else {\n        ++this.n_bits;\n        if (this.n_bits == BITS) this.maxcode = 1 << BITS;\n        else this.maxcode = this.get_maxcode(this.n_bits);\n      }\n    }\n\n    if (code == this.EOFCode) {\n      // At EOF, write the rest of the buffer.\n      while (this.cur_bits > 0) {\n        this.char_out((this.cur_accum & 0xff), outs);\n        this.cur_accum >>= 8;\n        this.cur_bits -= 8;\n      }\n      this.flush_char(outs);\n    }\n  }\n}\n","import { Flipnote } from '../parsers';\nimport { ByteArray } from '../utils/index';\nimport { assertBrowserEnv } from '../utils';\nimport { EncoderBase } from './EncoderBase';\nimport { LzwCompressor } from './LwzCompressor';\n\n/**\n * GIF RGBA palette color definition\n */\nexport type GifPaletteColor = [\n   /** Red (0 to 255) */\n   number,\n   /** Green (0 to 255) */\n   number,\n   /** Blue (0 to 255) */\n   number,\n   /** Alpha (0 to 255) */\n   number\n];\n\n/**\n * Optional GIF encoder settings\n */\nexport interface GifImageSettings {\n  /** Use transparency */\n  /** Delay between animated GIF frames, measured in milliseconds */\n  delay: number;\n  /** Color depth as bits per pixel. Defaults to 8 */\n  colorDepth: number;\n  /** -1 = no repeat, 0 = repeat forever. Anything else is repeat count */\n  repeat: number;\n};\n\n/** \n * GIF image encoder\n * \n * Supports static single-frame GIF export as well as animated GIF\n * @category File Encoder\n */\nexport class GifImage extends EncoderBase {\n\n  /**\n   * Default GIF encoder settings\n   */\n  static defaultSettings: GifImageSettings = {\n    // transparentBg: false,\n    delay: 100,\n    repeat: -1,\n    colorDepth: 8\n  };\n\n  mimeType = 'gif/image';\n  /** Image width */\n  width: number;\n  /** Image height */\n  height: number;\n  /** GIF global RGBA color palette. Max 256 colors, alpha channel is ignored */\n  palette: GifPaletteColor[];\n  /** GIF image settings, such as whether it should loop, the delay between frames, etc */\n  settings: GifImageSettings;\n  /** Number of current GIF frames */\n  frameCount: number = 0;\n\n  private data: ByteArray;\n  private compressor: LzwCompressor;\n\n  /**\n   * Create a new GIF image object\n   * @param width image width\n   * @param height image height\n   * @param settings whether the gif should loop, the delay between frames, etc. See {@link GifEncoderSettings}\n   */\n  constructor(width: number, height: number, settings: Partial<GifImageSettings> = {}) {\n    super();\n    this.width = width;\n    this.height = height;\n    this.data = new ByteArray();\n    this.settings = { ...GifImage.defaultSettings, ...settings };\n    this.compressor = new LzwCompressor(width, height, settings.colorDepth);\n  }\n\n  /**\n   * Create an animated GIF image from a Flipnote\n   * \n   * This will encode the entire animation, so depending on the number of frames it could take a while to return.\n   * @param flipnote {@link Flipnote} object ({@link PpmParser} or {@link KwzParser} instance)\n   * @param settings whether the gif should loop, the delay between frames, etc. See {@link GifEncoderSettings}\n   */\n  static fromFlipnote(flipnote: Flipnote, settings: Partial<GifImageSettings> = {}) {\n    const gif = new GifImage(flipnote.imageWidth, flipnote.imageHeight, {\n      delay: 100 / flipnote.framerate,\n      repeat: flipnote.meta?.loop ? -1 : 0,\n      ...settings\n    });\n\n    gif.palette = flipnote.globalPalette;\n\n    for (let frameIndex = 0; frameIndex < flipnote.frameCount; frameIndex++)\n      gif.writeFrame(flipnote.getFramePixels(frameIndex));\n\n    gif.finish();\n    return gif;\n  }\n\n  /**\n   * Create an GIF image from a single Flipnote frame\n   * @param flipnote\n   * @param frameIndex animation frame index to encode\n   * @param settings whether the gif should loop, the delay between frames, etc. See {@link GifEncoderSettings}\n   */\n  static fromFlipnoteFrame(flipnote: Flipnote, frameIndex: number, settings: Partial<GifImageSettings> = {}) {\n    const gif = new GifImage(flipnote.imageWidth, flipnote.imageHeight, {\n      delay: 0,\n      repeat: 0,\n      ...settings,\n    });\n    gif.palette = flipnote.globalPalette;\n    gif.writeFrame(flipnote.getFramePixels(frameIndex));\n    gif.finish();\n    return gif;\n  }\n\n  /**\n   * Add a frame to the GIF image\n   * @param pixels Raw pixels to encode, must be an uncompressed 8bit array of palette indices with a size matching image width * image height\n   */\n  writeFrame(pixels: Uint8Array) {\n    if (this.frameCount === 0)\n      this.writeFirstFrame(pixels);\n    else\n      this.writeAdditionalFrame(pixels);\n    this.frameCount += 1;\n  }\n\n  finish() {\n    this.data.writeByte(0x3B);\n  }\n\n  private writeFirstFrame(pixels: Uint8Array) {\n    this.writeHeader();\n    this.writeLogicalScreenDescriptor();\n    this.writeColorTable();\n    this.writeNetscapeExt();\n    this.writeGraphicControlExt();\n    this.writeImageDescriptor();\n    this.writePixels(pixels);\n  }\n\n  private writeAdditionalFrame(pixels: Uint8Array) {\n    this.writeGraphicControlExt();\n    this.writeImageDescriptor();\n    this.writePixels(pixels);\n  }\n\n  private writeHeader() {\n    this.data.writeChars('GIF89a');\n  }\n\n  private writeGraphicControlExt() {\n    this.data.writeByte(0x21); // extension introducer\n    this.data.writeByte(0xf9); // GCE label\n    this.data.writeByte(4); // data block size\n    // packed fields\n    this.data.writeByte(0);\n    this.data.writeU16(this.settings.delay); // delay x 1/100 sec\n    this.data.writeByte(0); // transparent color index\n    this.data.writeByte(0); // block terminator\n  }\n\n  private writeLogicalScreenDescriptor() {\n    const palette = this.palette;\n    const colorDepth = this.settings.colorDepth;\n    const globalColorTableFlag = 1;\n    const sortFlag = 0;\n    const globalColorTableSize = this.colorTableSize(palette.length) - 1;\n    const fields =\n      (globalColorTableFlag << 7) |\n      ((colorDepth - 1) << 4) |\n      (sortFlag << 3) |\n      globalColorTableSize;\n    const backgroundColorIndex = 0;\n    const pixelAspectRatio = 0;\n    this.data.writeU16(this.width);\n    this.data.writeU16(this.height);\n    this.data.writeBytes([fields, backgroundColorIndex, pixelAspectRatio]);\n  }\n\n  private writeNetscapeExt() {\n    this.data.writeByte(0x21); // extension introducer\n    this.data.writeByte(0xff); // app extension label\n    this.data.writeByte(11); // block size\n    this.data.writeChars('NETSCAPE2.0'); // app id + auth code\n    this.data.writeByte(3); // sub-block size\n    this.data.writeByte(1); // loop sub-block id\n    this.data.writeU16(this.settings.repeat); // loop count (extra iterations, 0=repeat forever)\n    this.data.writeByte(0); // block terminator\n  }\n\n  private writeColorTable() {\n    const palette = this.palette;\n    const colorTableLength = 1 << this.colorTableSize(palette.length);\n    for (let i = 0; i < colorTableLength; i++) {\n      let color = [0, 0, 0];\n      if (i < palette.length) {\n        color = palette[i];\n      }\n      this.data.writeByte(color[0]);\n      this.data.writeByte(color[1]);\n      this.data.writeByte(color[2]);\n    }\n  }\n\n  private writeImageDescriptor() {\n    this.data.writeByte(0x2c); // image separator\n    this.data.writeU16(0); // x position\n    this.data.writeU16(0); // y position\n    this.data.writeU16(this.width); // image size\n    this.data.writeU16(this.height);\n    this.data.writeByte(0); // global palette\n  }\n\n  private colorTableSize(length: number) {\n    return Math.max(Math.ceil(Math.log2(length)), 1);\n  }\n\n  private writePixels(pixels: Uint8Array) {\n    this.compressor.colorDepth = this.settings.colorDepth;\n    this.compressor.reset();\n    this.compressor.encode(pixels, this.data);\n  }\n\n  /**\n   * Returns the GIF image data as an {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer | ArrayBuffer}\n   */\n  getArrayBuffer() {\n    return this.data.getBuffer();\n  }\n\n /**\n   * Returns the GIF image data as an {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/Image | Image} object\n   * \n   * Note: This method does not work outside of browser environments\n   */\n  getImage(): HTMLImageElement {\n    assertBrowserEnv();\n    const img = new Image(this.width, this.height);\n    img.src = this.getUrl();\n    return img;\n  }\n}","import { Flipnote, FlipnoteAudioTrack } from '../parsers';\nimport { DataStream } from '../utils';\nimport { EncoderBase } from './EncoderBase';\n\nexport type WavSampleBuffer = Int16Array | Float32Array;\n\n/** \n * Wav audio object. Used to create a {@link https://en.wikipedia.org/wiki/WAV | WAV} file from a PCM audio stream or a {@link Flipnote} object. \n * \n * Currently only supports PCM s16_le audio encoding.\n * \n * @category File Encoder\n */\nexport class WavAudio extends EncoderBase {\n\n  mimeType: 'audio/wav';\n\n  /** Audio samplerate */\n  sampleRate: number;\n  /** Number of audio channels */\n  channels: number;\n  /** Number of bits per sample */\n  bitsPerSample: number;\n\n  private header: DataStream;\n  private pcmData: Int16Array;\n\n  /**\n   * Create a new WAV audio object\n   * @param sampleRate audio samplerate\n   * @param channels number of audio channels\n   * @param bitsPerSample number of bits per sample\n   */\n  constructor(sampleRate: number, channels=1, bitsPerSample=16) {\n    super();\n    this.sampleRate = sampleRate;\n    this.channels = channels;\n    this.bitsPerSample = bitsPerSample;\n    // Write WAV file header\n    // Reference: http://www.topherlee.com/software/pcm-tut-wavformat.html\n    const headerBuffer = new ArrayBuffer(44);\n    const header = new DataStream(headerBuffer);\n    // 'RIFF' indent\n    header.writeChars('RIFF');\n    // filesize (set later)\n    header.writeUint32(0);\n    // 'WAVE' indent\n    header.writeChars('WAVE');\n    // 'fmt ' section header\n    header.writeChars('fmt ');\n    // fmt section length\n    header.writeUint32(16);\n    // specify audio format is pcm (type 1)\n    header.writeUint16(1);\n    // number of audio channels\n    header.writeUint16(this.channels);\n    // audio sample rate\n    header.writeUint32(this.sampleRate);\n    // byterate = (sampleRate * bitsPerSample * channelCount) / 8\n    header.writeUint32((this.sampleRate * this.bitsPerSample * this.channels) / 8);\n    // blockalign = (bitsPerSample * channels) / 8\n    header.writeUint16((this.bitsPerSample * this.channels) / 8);\n    // bits per sample\n    header.writeUint16(this.bitsPerSample);\n    // 'data' section header\n    header.writeChars('data');\n    // data section length (set later)\n    header.writeUint32(0);\n    this.header = header;\n    this.pcmData = null;\n  }\n\n  /**\n   * Create a WAV audio file from a Flipnote's master audio track\n   * @param flipnote\n   * @param trackId\n   */\n  static fromFlipnote(note: Flipnote) {\n    const sampleRate = note.sampleRate;\n    const wav = new WavAudio(sampleRate, 1, 16);\n    const pcm = note.getAudioMasterPcm(sampleRate);\n    wav.writeSamples(pcm);\n    return wav;\n  }\n\n  /**\n   * Create a WAV audio file from a given Flipnote audio track\n   * @param flipnote\n   * @param trackId\n   */\n  static fromFlipnoteTrack(flipnote: Flipnote, trackId: FlipnoteAudioTrack) {\n    const sampleRate = flipnote.sampleRate;\n    const wav = new WavAudio(sampleRate, 1, 16);\n    const pcm = flipnote.getAudioTrackPcm(trackId, sampleRate);\n    wav.writeSamples(pcm);\n    return wav;\n  }\n\n  /**\n   * Add PCM audio frames to the WAV\n   * @param pcmData signed int16 PCM audio samples\n   */\n  writeSamples(pcmData: Int16Array) {\n    let header = this.header;\n    // fill in filesize\n    header.seek(4);\n    header.writeUint32(header.byteLength + pcmData.byteLength);\n    // fill in data section length\n    header.seek(40);\n    header.writeUint32(pcmData.byteLength);\n    this.pcmData = pcmData;\n  }\n  \n  /**\n   * Returns the WAV audio data as an {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer | ArrayBuffer}\n   */\n  getArrayBuffer() {\n    const headerBytes = this.header.bytes;\n    const pcmBytes = new Uint8Array(this.pcmData.buffer);\n    const resultBytes = new Uint8Array(this.header.byteLength + this.pcmData.byteLength);\n    resultBytes.set(headerBytes);\n    resultBytes.set(pcmBytes, headerBytes.byteLength);\n    return resultBytes.buffer;\n  }\n}","// Entrypoint for web and node\n\nexport {\n  Flipnote,\n  FlipnoteFormat,\n  FlipnoteVersion,\n  FlipnoteRegion,\n  FlipnoteMeta,\n  FlipnotePaletteColor,\n  FlipnotePaletteDefinition,\n  FlipnoteLayerVisibility,\n  FlipnoteAudioTrack,\n  FlipnoteAudioTrackInfo,\n  FlipnoteSoundEffectTrack,\n  FlipnoteSoundEffectFlags,\n  FlipnoteParserSettings,\n  KwzParserSettings,\n  PpmParserSettings,\n  KwzParser,\n  PpmParser\n} from './parsers';\n\nexport * as utils from './utils/fsid';\n\nexport * from './loaders';\n\nexport * from './parseSource';\n\nexport {\n  Player,\n  PlayerEvent,\n} from './player';\n\nexport {\n  PlayerMixin\n} from './components/PlayerMixin';\n\nexport {\n  GifImage,\n  WavAudio,\n} from './encoders';\n\nexport {\n  CanvasInterface,\n  WebglCanvas,\n  Html5Canvas,\n  UniversalCanvas\n} from './renderers';\n\nexport {\n  WebAudioPlayer\n} from './webaudio';\n\n/** \n * flipnote.js library version (exported as `flipnote.version`). You can find the latest version on the project's [NPM](https://www.npmjs.com/package/flipnote.js) page.\n */\nexport const version = FLIPNOTEJS_VERSION; // replaced by @rollup/plugin-replace; see rollup.config.js\n"],"names":[],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uBAAuB,CAAC,EAAE,EAAE,MAAM,EAAE;AAC7C,EAAE,MAAM,OAAO,GAAG,EAAE,CAAC;AACrB,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,SAAS,EAAE;AAClD,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;AAC/B,MAAM,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AACtC,MAAM,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,UAAU,KAAK,QAAQ,CAAC,YAAY,GAAG,SAAS,CAAC,CAAC;AAC/G,MAAM,IAAI,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,I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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,OAAO,EAAE,GAAG,IAAI,EAAE;AACvC,EAAE,MAAM,aAAa,GAAG,OAAO,CAAC,cAAc,IAAI,OAAO,CAAC;AAC1D,EAAE,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;AAC9B,EAAE,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,OAAO,EAAE,EAAE,IAAI,EAAE;AAC7C,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9B,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAC/B,MAAM,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;AACtC,MAAM,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,EAAE,EAAE,EAAE,EAAE;AAC7C,QAAQ,WAAW,CAAC,aAAa,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/C,OAAO;AA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"}