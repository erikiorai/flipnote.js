{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3f8785fa68748bbb7f2a","webpack:///./webgl/canvas.js","webpack:///./flipnote.js","webpack:///./player/index.js","webpack:///./webgl/captureCanvas.js","webpack:///./decoder/index.js","webpack:///./decoder/fileReader.js","webpack:///./decoder/adpcm.js","webpack:///./loader/index.js","webpack:///./loader/urlLoader.js","webpack:///./loader/fileLoader.js","webpack:///./loader/arrayBufferLoader.js","webpack:///./player/audio.js"],"names":["webglCanvas","el","width","height","params","gl","getContext","antialias","program","createProgram","_createShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","useProgram","vertBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","_createTexture","TEXTURE0","TEXTURE1","type","source","shader","createShader","shaderSource","compileShader","attachShader","name","index","texture","uniform1i","getUniformLocation","activeTexture","bindTexture","TEXTURE_2D","createTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","color","value","uniform4f","colors","setColor","buffers","texImage2D","ALPHA","UNSIGNED_BYTE","viewport","drawArrays","TRIANGLES","clear","COLOR_BUFFER_BIT","module","exports","version","player","FRAMERATES","ppmPlayer","document","querySelector","canvas","_imgCanvas","_isOpen","_events","loop","currentFrame","paused","audioTracks","buffer","ppm","meta","frameCount","frameSpeed","soundMeta","se1","length","set","decodeAudio","se2","se3","bgm","_audiorate","_seFlags","decodeSoundFlags","_playbackFrameTime","_lastFrameTime","_hasPlaybackStarted","setFrame","thumbFrameIndex","emit","close","then","_load","catch","err","console","error","pause","_frame","i","unset","flags","active","start","currentTime","stop","now","dt","frame","framerate","_playFrameSe","nextFrame","_stopAudio","firstFrame","_playBgm","requestAnimationFrame","_playbackLoop","bind","performance","encoderOptions","Math","max","min","setPalette","getFramePalette","setBitmaps","decodeFrame","refresh","toImage","getFrameImage","resize","eventType","callback","events","push","callbackList","splice","indexOf","args","apply","duration","round","audio","volume","muted","bgmSpeed","captureCanvas","createElement","preserveDrawingBuffer","toDataURL","WIDTH","HEIGHT","BLACK","WHITE","BLUE","RED","ppmDecoder","arrayBuffer","seek","_frameDataLength","readUint32","_soundDataLength","readUint16","offsetTableLength","_frameOffsets","Uint32Array","map","_decodeMeta","_decodeSoundHeader","_layers","Uint8Array","_prevLayers","_prevFrameIndex","track","offset","str","terminated","char","String","fromCharCode","reverse","ret","readUint8","toString","padStart","join","toUpperCase","_readHex","unpacked","byteOffset","byte","bitOffset","lock","thumbIndex","readInt16","rootAuthorName","_readUtf16","parentAuthorName","currentAuthorName","parentAuthorId","currentAuthorId","parentFilename","_readFilename","currentFilename","rootAuthorId","timestamp","Date","frame_count","thumb_index","spinoff","root","username","fsid","parent","filename","current","bgmLen","se1Len","se2Len","se3Len","_seekToFrame","header","backTrack","isNew","_isFrameNew","paperColor","pen","decodePrev","isNewFrame","isTranslated","translateX","translateY","_decodePrevFrames","fill","readInt8","layerEncoding","_readLineEncoding","layer","layerBitmap","line","chunkOffset","lineType","lineHeader","chunk","pixel","dest","src","srcOutOfBounds","y","x","_seekToAudio","arr","Array","fileReader","_data","DataView","_offset","whence","byteLength","val","getUint8","getInt8","littleEndian","getUint16","getInt16","getUint32","getInt32","decodeAdpcm","indexTable","stepSizeTable","statePrevSample","statePrevIndex","inputBuffer","outputBuffer","Int16Array","outputOffset","inputOffset","decodeSample","sample","predSample","step","difference","clamp","num","load","loaders","Promise","resolve","reject","loader","matches","xhr","XMLHttpRequest","open","responseType","onreadystatechange","e","readyState","status","response","statusText","send","ArrayBuffer","audioTrack","id","channelCount","bitsPerSample","sampleRate","playbackRate","preload","pcmData","setUint32","setUint16","url","window","URL","createObjectURL","Blob","revokeObjectURL","play"],"mappings":"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","file":"flipnote.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flipnote\"] = factory();\n\telse\n\t\troot[\"flipnote\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3f8785fa68748bbb7f2a","import vertexShader from \"./vertexShader.glsl.js\";\nimport fragmentShader from \"./fragmentShader.glsl.js\";\n\n/** webgl canvas wrapper class */\nexport default class webglCanvas {\n  /**\n  * Create a rendering canvas\n  * @param {HTMLCanvasElement} el - The HTML canvas element\n  * @param {number} width - width of the canvas in pixels\n  * @param {number} height - height of the canvas in pixels\n  * @param {Object} params - optional params to pass to web gl context\n  */\n  constructor(el, width, height, params) {\n    el.width = width || 256;\n    el.height = height || 192; \n    var gl = el.getContext(\"webgl\", params || {antialias: false});\n    var program = gl.createProgram();\n    this.program = program;\n    this.el = el;\n    this.gl = gl;\n    this._createShader(gl.VERTEX_SHADER, vertexShader);\n    this._createShader(gl.FRAGMENT_SHADER, fragmentShader);\n    gl.linkProgram(program);\n    gl.useProgram(program);\n    // create quad that fills the screen, this will be our drawing surface\n    var vertBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1,  1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n    // create textures for each layer\n    this._createTexture(\"u_layer1Bitmap\", 0, gl.TEXTURE0);\n    this._createTexture(\"u_layer2Bitmap\", 1, gl.TEXTURE1);\n  }\n\n  /**\n  * Util to compile and attach a new shader\n  * @param {shader type} type - gl.VERTEX_SHADER | gl.FRAGMENT_SHADER\n  * @param {string} source - GLSL code for the shader\n  * @access protected \n  */\n  _createShader(type, source) {\n    var gl = this.gl;\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    gl.attachShader(this.program, shader);\n  }\n\n  /**\n  * Util to set up a texture\n  * @param {string} name - name of the texture's uniform variable\n  * @param {number} index - texture index\n  * @param {texture} texture - webgl texture unit, gl.TEXTURE0, gl.TEXTURE1, etc\n  * @access protected \n  */\n  _createTexture(name, index, texture) {\n    var gl = this.gl;\n    gl.uniform1i(gl.getUniformLocation(this.program, name), index);\n    gl.activeTexture(texture);\n    gl.bindTexture(gl.TEXTURE_2D, gl.createTexture());\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  }\n\n  /**\n  * Set an palette individual color\n  * @param {string} color - name of the color's uniform variable\n  * @param {array} value - r,g,b,a color, each channel's value should be between 0.0 and 1.0\n  */\n  setColor(color, value) {\n    this.gl.uniform4f(this.gl.getUniformLocation(this.program, color), value[0]/255, value[1]/255, value[2]/255, value[3]/255);\n  }\n\n  /**\n  * Set the palette\n  * @param {array} colors - array of r,g,b,a colors with channel values from 0.0 to 1.0, in order of paper, layer1, layer2\n  */\n  setPalette(colors) {\n    this.setColor(\"u_paperColor\", colors[0]);\n    this.setColor(\"u_layer1Color\", colors[1]);\n    this.setColor(\"u_layer2Color\", colors[2]);\n  }\n\n  /**\n  * Set layer bitmaps\n  * @param {array} buffers - array of two uint8 buffers, one for each layer\n  */\n  setBitmaps(buffers) {\n    var gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, 256, 192, 0, gl.ALPHA, gl.UNSIGNED_BYTE, buffers[0]);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, 256, 192, 0, gl.ALPHA, gl.UNSIGNED_BYTE, buffers[1]);\n  }\n\n  /**\n  * Resize canvas\n  * @param {number} width - width of the canvas in pixels\n  * @param {number} height - height of the canvas in pixels\n  */\n  resize(width=256, height=192) {\n    this.el.width = width;\n    this.el.height = height; \n    this.gl.viewport(0, 0, width, height);\n  }\n\n  /**\n  * Redraw canvas\n  */\n  refresh() {\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n  }\n\n  /**\n  * Clear canvas\n  */\n  clear() {\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./webgl/canvas.js","import ppmPlayer from \"./player\";\n// import decoder from \"./decoder\";\n\nmodule.exports = {\n  version: VERSION,\n  player: ppmPlayer,\n  // decoder: decoder,\n};\n\n\n// WEBPACK FOOTER //\n// ./flipnote.js","import canvas from \"webgl/canvas\";\nimport captureCanvas from \"webgl/captureCanvas\";\nimport ppmDecoder from \"decoder\";\nimport loader from \"loader\";\nimport audioTrack from \"./audio\";\n\n// internal framerate value -> FPS table\nconst FRAMERATES = {\n  1: 0.5,\n  2: 1,\n  3: 2,\n  4: 4,\n  5: 6,\n  6: 12,\n  7: 20,\n  8: 30,\n};\n\n/** flipnote player API, based on HTMLMediaElement (https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement) */ \nexport default class ppmPlayer {\n  /**\n  * Create new flipnote player\n  * @param {string | HTMLCanvasElement} el - HTML Canvas Element to use, or CSS selector for one\n  * @param {number} width - canvas width in pixels\n  * @param {number} height - canvas height in pixels\n  */\n  constructor(el, width, height) {\n    // if `el` is a string, use it to select an Element, else assume it's an element\n    el = (\"string\" == typeof el) ? document.querySelector(el) : el;\n    this.canvas = new canvas(el, width, height);\n    this._imgCanvas = new captureCanvas();\n    this._isOpen = false;\n    this._events = {};\n    this.loop = false;\n    this.currentFrame = 0;\n    this.paused = true;\n    this.audioTracks = [\n      new audioTrack(\"bgm\"),\n      new audioTrack(\"se1\"),\n      new audioTrack(\"se2\"),\n      new audioTrack(\"se3\"),\n    ];\n  }\n\n  /**\n  * Get the index of the current frame \n  */\n  get currentFrame() {\n    return this._frame;\n  }\n\n  /**\n  * Set the current frame\n  */\n  set currentFrame(index) {\n    this.setFrame(index);\n  }\n\n  /**\n  * Get current playback time in seconds\n  */\n  get currentTime() {\n    return this._isOpen ? this.currentFrame * (1 / this.framerate) : null;\n  }\n\n  /**\n  * Set current playback time in seconds\n  */\n  set currentTime(value) {\n    if ((this._isOpen) && (value < this.duration) && (value > 0)) {\n      this.setFrame(Math.round(value / (1 / this.framerate)));\n      this._playbackFrameTime = 0;\n    }\n  }\n\n  /**\n  * Get audio volume\n  */\n  get volume() {\n    return this.audioTracks[3].audio.volume;\n  }\n\n  /**\n  * Set audio volume\n  */\n  set volume(value) {\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].audio.volume = value;\n    }\n  }\n\n  /**\n  * Get audio mute\n  */\n  get muted() {\n    return this.audioTracks[3].audio.muted;\n  }\n\n  /**\n  * Set audio mute\n  */\n  set muted(value) {\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].audio.muted = value;\n    }\n  }\n\n  /**\n  * Get the duration of the Flipnote in seconds\n  */\n  get duration() {\n    return this._isOpen ? this.frameCount * (1 / this.framerate) : null;\n  }\n\n  /**\n  * Get the Flipnote framerate in frames-per-second\n  */\n  get framerate() {\n    return FRAMERATES[this.frameSpeed];\n  }\n\n  /**\n  * Get the audio playback rate by comparing audio and frame speeds\n  * @access protected\n  */\n  get _audiorate() {\n    return (1 / FRAMERATES[this.ppm.bgmSpeed]) / (1 / FRAMERATES[this.frameSpeed]);\n  }\n\n  /**\n  * Load a Flipnote into the player\n  * @param {ArrayBuffer} buffer - ppm data\n  * @access protected\n  */\n  _load(buffer) {\n    var ppm = new ppmDecoder(buffer);\n    var meta = ppm.meta;\n    this.ppm = ppm;\n    this.meta = meta;\n    this.frameCount = ppm.frameCount;\n    this.frameSpeed = ppm.frameSpeed;\n    this.loop = meta.loop == 1;\n    this.paused = true;\n    this._isOpen = true;\n    if (ppm.soundMeta.se1.length) this.audioTracks[0].set(this.ppm.decodeAudio(\"se1\"), 1);\n    if (ppm.soundMeta.se2.length) this.audioTracks[1].set(this.ppm.decodeAudio(\"se2\"), 1);\n    if (ppm.soundMeta.se3.length) this.audioTracks[2].set(this.ppm.decodeAudio(\"se3\"), 1);\n    if (ppm.soundMeta.bgm.length) this.audioTracks[3].set(this.ppm.decodeAudio(\"bgm\"), this._audiorate);\n    this._seFlags = this.ppm.decodeSoundFlags();\n    this._playbackFrameTime = 0;\n    this._lastFrameTime = 0;\n    this._hasPlaybackStarted = false;\n    this.setFrame(this.ppm.thumbFrameIndex);\n    this.emit(\"load\");\n  }\n\n  /**\n  * Load a Flipnote into the player\n  * @param {String} source - ppm url\n  */\n  open(source) {\n    if (this._isOpen) this.close();\n    return loader(source)\n      .then((buffer) => {\n        this._load(buffer);\n      })\n      .catch((err) => {\n        console.error(\"Error loading Flipnote:\", err);\n      });\n  }\n\n  /**\n  * Close the currently loaded Flipnote and clear the player canvas\n  */\n  close() {\n    this.pause();\n    this.ppm = null;\n    this._isOpen = false;\n    this.paused = true;\n    this.loop = null;\n    this.meta = null;\n    this.frameCount = null;\n    this.frameSpeed = null;\n    this._frame = 0;\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].unset();\n    }\n    this._seFlags = null;\n    this._hasPlaybackStarted = null;\n    this.canvas.clear();\n  }\n\n  /**\n  * Play the sound effects for a given frame\n  * @param {number} index - zero-based frame index\n  * @access protected\n  */\n  _playFrameSe(index) {\n    var flags = this._seFlags[index];\n    for (let i = 0; i < flags.length; i++) {\n      if (flags[i] && this.audioTracks[i].active) this.audioTracks[i].start();\n    }\n  }\n\n  /**\n  * Play the Flipnote BGM\n  * @access protected\n  */\n  _playBgm() {\n    this.audioTracks[3].start(this.currentTime);\n  }\n\n  /**\n  * Stop all audio tracks\n  * @access protected\n  */\n  _stopAudio() {\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].stop();\n    }\n  }\n\n  /**\n  * Internal requestAnimationFrame handler\n  * @param {number} now - current time\n  * @access protected\n  */\n  _playbackLoop(now) {\n    var dt = (now - this._lastFrameTime) / (1000 / 60);\n    var frame = this.currentFrame;\n    if (this._playbackFrameTime >= 60 / this.framerate) {\n      this._playFrameSe(frame);\n      this.nextFrame();\n      this._playbackFrameTime = 0;\n    }\n    if (frame >= this.frameCount -1) {\n      this._stopAudio();\n      if (this.loop) {\n        this.firstFrame();\n        this._playBgm(0);\n        this.emit(\"playback:loop\");\n      } else {\n        this.pause();\n        this.emit(\"playback:end\");\n      }\n    }\n    this._playbackFrameTime += dt;\n    this._lastFrameTime = now;\n    if (!this.paused) requestAnimationFrame(this._playbackLoop.bind(this));\n  }\n\n  /**\n  * Begin Flipnote playback\n  */\n  play() {\n    if ((!this._isOpen) || (!this.paused)) return null;\n    this.paused = false;\n    if ((!this._hasPlaybackStarted) || ((!this.loop) && (this.currentFrame == this.frameCount - 1))) this._frame = 0;\n    this._lastFrameTime = performance.now();\n    this._playBgm();\n    this._playbackLoop(this._lastFrameTime);\n    this._hasPlaybackStarted = true;\n    this.emit(\"playback:start\");\n  }\n\n  /**\n  * Pause Flipnote playback\n  */\n  pause() {\n    if ((!this._isOpen) || (this.paused)) return null;\n    // break the playback loop\n    this.paused = true;\n    this._stopAudio();\n    this.emit(\"playback:stop\");\n  }\n\n  /**\n  * Get a specific frame as an image data URL\n  * @param {number} index - zero-based frame index\n  * @param {string} type - image MIME type, default is image/png\n  * @param {number} encoderOptions - number between 0 and 1 indicating image quality if type is image/jpeg or image/webp\n  */\n  getFrameImage(index, type, encoderOptions) {\n    if (!this._isOpen) return null;\n    // clamp frame index\n    index = Math.max(0, Math.min(index, this.frameCount - 1));\n    this._imgCanvas.setPalette(this.ppm.getFramePalette(index));\n    this._imgCanvas.setBitmaps(this.ppm.decodeFrame(index));\n    this._imgCanvas.refresh();\n    return this._imgCanvas.toImage(type, encoderOptions);\n  }\n\n  /**\n  * Get a Flipnote thumbnail as an image data URL\n  * @param {string} type - image MIME type, default is image/png\n  * @param {number} encoderOptions - number between 0 and 1 indicating image quality if type is image/jpeg or image/webp\n  */\n  getThumbImage(type, encoderOptions) {\n    return this.getFrameImage(this.ppm.thumbFrameIndex, type, encoderOptions);\n  }\n\n  /**\n  * Jump to a specific frame\n  * @param {number} index - zero-based frame index\n  */\n  setFrame(index) {\n    if ((!this._isOpen) || (index === this.currentFrame)) return null;\n    // clamp frame index\n    index = Math.max(0, Math.min(index, this.frameCount - 1));\n    this._frame = index;\n    this._playbackFrameTime = 0;\n    this.canvas.setPalette(this.ppm.getFramePalette(index));\n    this.canvas.setBitmaps(this.ppm.decodeFrame(index));\n    this.canvas.refresh();\n    this.emit(\"frame:update\", this.currentFrame);\n  }\n\n  /**\n  * Jump to the thumbnail frame\n  */\n  thumbnailFrame() {\n    this.currentFrame = this.ppm.thumbFrameIndex;\n  }\n\n  /**\n  * Jump to the next frame in the animation\n  */\n  nextFrame() {\n    if ((this.loop) && (this.currentFrame >= this.frameCount -1)) {\n      this.currentFrame = 0;\n    } else {\n      this.currentFrame += 1;\n    }\n  }\n\n  /**\n  * Jump to the previous frame in the animation\n  */\n  prevFrame() {\n    if ((this.loop) && (this.currentFrame <= 0)) {\n      this.currentFrame = this.frameCount - 1;\n    } else {\n      this.currentFrame -= 1;\n    }\n  }\n\n  /**\n  * Jump to the last frame in the animation\n  */\n  lastFrame() {\n    this.currentFrame = this.frameCount - 1;\n  }\n\n  /**\n  * Jump to the first frame in the animation\n  */\n  firstFrame() {\n    this.currentFrame = 0;\n  }\n\n  /**\n  * Resize player canvas\n  * @param {number} width - canvas width in pixels\n  * @param {number} height - canvas height in pixels\n  */\n  resize(width, height) {\n    this.canvas.resize(width, height);\n  }\n\n  /**\n  * Register an event callback\n  * @param {string} eventType - event type\n  * @param {function} callback - event callback function\n  */\n  on(eventType, callback) {\n    var events = this._events;\n    (events[eventType] || (events[eventType] = [])).push(callback);\n  }\n\n  /**\n  * Remove an event callback\n  * @param {string} eventType - event type\n  * @param {function} callback - event callback function\n  */\n  off(eventType, callback) {\n    var callbackList = this._events[eventType];\n    if (callbackList) callbackList.splice(callbackList.indexOf(callback), 1);\n  }\n\n  /**\n  * Emit an event (used internally)\n  * @param {string} eventType - event type\n  * @param {...} args - arguments to be passed to event callback\n  */\n  emit(eventType, ...args) {\n    var callbackList = this._events[eventType] || [];\n    for (var i = 0; i < callbackList.length; i++) {\n      callbackList[i].apply(null, args); \n    }\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./player/index.js","import canvas from \"./canvas\";\n\n/** \n * offscreen webgl canvas for capturing frame images\n * this is kept seperate since preserveDrawingBuffer makes drawing slightly slower\n */\nexport default class captureCanvas extends canvas {\n  constructor() {\n    super(document.createElement(\"canvas\"), 256, 192, {\n      antialias: false,\n      preserveDrawingBuffer: true,\n    });\n  }\n\n  /**\n  * get the canvas content as an image\n  * @param {string} type - image MIME type, default is image/png\n  * @param {number} encoderOptions - number between 0 and 1 indicating image quality if type is image/jpeg or image/webp\n  */\n  toImage(type, encoderOptions) {\n    return this.el.toDataURL(type, encoderOptions);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./webgl/captureCanvas.js","/**\n * PPM decoder\n * Reads frames, audio, and metadata from Flipnote Studio PPM files \n * Based on my Python PPM decoder implementation (https://github.com/jaames/flipnote-tools)\n *  \n * Credits:\n *  PPM format reverse-engineering and documentation:\n *   - bricklife (http://ugomemo.g.hatena.ne.jp/bricklife/20090307/1236391313)\n *   - mirai-iro (http://mirai-iro.hatenablog.jp/entry/20090116/ugomemo_ppm)\n *   - harimau_tigris (http://ugomemo.g.hatena.ne.jp/harimau_tigris)\n *   - steven (http://www.dsibrew.org/wiki/User:Steven)\n *   - yellows8 (http://www.dsibrew.org/wiki/User:Yellows8)\n *   - PBSDS (https://github.com/pbsds)\n *   - jaames (https://github.com/jaames)\n *  Identifying the PPM sound codec:\n *   - Midmad from Hatena Haiku\n *   - WDLMaster from hcs64.com\n *  Helping me to identify issues with the Python decoder that this is based on:\n *   - Austin Burk (https://sudomemo.net)\n * \n *  Lastly, a huge thanks goes to Nintendo for creating Flipnote Studio, \n *  and to Hatena for providing the Flipnote Hatena online service, both of which inspired so many c:\n*/\n\nimport fileReader from \"./fileReader\";\nimport {decodeAdpcm} from \"./adpcm\";\n\nconst WIDTH = 256;\nconst HEIGHT = 192;\nconst BLACK = [14, 14, 14, 255];\nconst WHITE = [255, 255, 255, 255];\nconst BLUE = [10, 57, 255, 255];\nconst RED = [255, 42, 42, 255];\n\nexport default class ppmDecoder extends fileReader {\n  /**\n  * Create a ppmDecoder instance\n  * @param {ArrayBuffer} arrayBuffer - data to read from\n  */\n  constructor(arrayBuffer) {\n    super(arrayBuffer);\n    this.seek(4);\n    // decode header\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#file-header\n    this._frameDataLength = this.readUint32();\n    this._soundDataLength = this.readUint32();\n    this.frameCount = Math.min(this.readUint16() + 1, 999);\n    this.seek(18);\n    this.thumbFrameIndex = this.readUint16();\n    // jump to the start of the animation data section\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#animation-data-section\n    this.seek(0x06A0);\n    var offsetTableLength = this.readUint16();\n    // skip padding + flags\n    this.seek(0x06A8);\n    // read frame offsets and build them into a table\n    this._frameOffsets = new Uint32Array(offsetTableLength / 4).map(value => {\n      return 0x06A8 + offsetTableLength + this.readUint32();\n    });\n    this.meta = this._decodeMeta();\n    this._decodeSoundHeader();\n    // create image buffers\n     this._layers = [\n      new Uint8Array(WIDTH * HEIGHT),\n      new Uint8Array(WIDTH * HEIGHT)\n    ];\n    this._prevLayers = [\n      new Uint8Array(WIDTH * HEIGHT),\n      new Uint8Array(WIDTH * HEIGHT)\n    ];\n    this._prevFrameIndex = 0;\n  }\n  \n  /**\n  * Seek the buffer position to the start of a given frame\n  * @param {number} index - zero-based frame index to jump to\n  * @access protected\n  */\n  _seekToFrame(index) {\n    this.seek(this._frameOffsets[index]);\n  }\n\n  /**\n  * Seek the buffer position to the start of a given audio track\n  * @param {string} track - track name, \"bgm\" | \"se1\" | \"se2\" | \"se3\"\n  * @access protected\n  */\n  _seekToAudio(track) {\n    this.seek(this.soundMeta[track].offset);\n  }\n\n  /**\n  * Read an UTF-16 little-endian string (for usernames)\n  * @param {number} length - max length of the string in bytes (including padding)\n  * @returns {string}\n  * @access protected\n  */\n  _readUtf16(length) {\n    var str = \"\";\n    var terminated = false;\n    for (var i = 0; i < length / 2; i++) {\n      var char = this.readUint16();\n      // utf16 stings in flipnotes are terminated with null bytes (0x00) \n      if ((terminated) || (char == 0)) { \n        terminated = true;\n        continue;\n      }\n      str += String.fromCharCode(char);\n    }\n    return str;\n  }\n\n  /**\n  * Read a hex string (for FSIDs and filenames)\n  * @param {number} length - max length of the string in bytes\n  * @param {boolean} reverse - defaults to false, if true, the string will be read in reverse byte order\n  * @returns {string}\n  * @access protected\n  */\n  _readHex(length, reverse=false) {\n    var ret = [];\n    for (var i = 0; i < length; i++) {\n      ret.push(this.readUint8().toString(16).padStart(2, \"0\"));\n    }\n    if (reverse) ret.reverse();\n    return ret.join(\"\").toUpperCase();\n  }\n\n  /**\n  * Read a HEX string \n  * @returns {string}\n  * @access protected\n  */\n  _readFilename() {\n    var str = \"\";\n    // filename starts with 3 hex bytes\n    str += this._readHex(3) + \"_\";\n    // then 13 byte utf8 string\n    for (var i = 0; i < 13; i++) {\n      str += String.fromCharCode(this.readUint8());\n    }\n    str += \"_\";\n    // then 2-byte edit count padded to 3 chars\n    str += this.readUint16().toString().padStart(3, \"0\");\n    return str;\n  }\n\n  /**\n  * Unpack the line encoding flags for all 192 lines in a layer\n  * @returns {array}\n  * @access protected\n  */\n  _readLineEncoding() {\n    var unpacked = new Uint8Array(HEIGHT);\n    for (var byteOffset = 0; byteOffset < 48; byteOffset ++) {\n      var byte = this.readUint8();\n      // each line's encoding type is stored as a 2-bit value\n      for (var bitOffset = 0; bitOffset < 8; bitOffset += 2) {\n        unpacked[byteOffset * 4 + bitOffset / 2] = (byte >> bitOffset) & 0x03;\n      }\n    }\n    return unpacked;\n  }\n\n  /**\n  * Decode the main PPM metadata, like username, timestamp, etc\n  * @returns {object}\n  * @access protected\n  */\n  _decodeMeta() {\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#file-header\n    this.seek(0x10);\n    var lock = this.readUint16(),\n        thumbIndex = this.readInt16(),\n        rootAuthorName = this._readUtf16(22),\n        parentAuthorName = this._readUtf16(22),\n        currentAuthorName = this._readUtf16(22),\n        parentAuthorId = this._readHex(8, true),\n        currentAuthorId = this._readHex(8, true),\n        parentFilename = this._readFilename(),\n        currentFilename = this._readFilename(),\n        rootAuthorId = this._readHex(8, true);\n    this.seek(0x9A);\n    var timestamp = new Date((this.readUint32() + 946684800) * 1000);\n    this.seek(0x6A60);\n    var flags = this.readUint16();\n    return {\n      lock: lock,\n      loop: flags >> 1 & 0x01,\n      frame_count: this.frameCount,\n      thumb_index: thumbIndex,\n      timestamp: timestamp,\n      spinoff: currentAuthorId !== parentAuthorId,\n      root: {\n        username: rootAuthorName,\n        fsid: rootAuthorId,\n      },\n      parent: {\n        username: parentAuthorName,\n        fsid: parentAuthorId,\n        filename: parentFilename\n      },\n      current: {\n        username: currentAuthorName,\n        fsid: currentAuthorId,\n        filename: currentFilename\n      },\n    };\n  }\n\n  /**\n  * Decode the sound header to get audio track lengths and frame/bgm sppeds\n  * @access protected\n  */\n  _decodeSoundHeader() {\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#sound-data-section\n    // offset = frame data offset + frame data length + sound effect flags\n    var offset = 0x06A0 + this._frameDataLength + this.frameCount;\n    // account for multiple-of-4 padding\n    if (offset % 4 != 0) offset += 4 - (offset % 4);\n    this.seek(offset);\n    var bgmLen = this.readUint32();\n    var se1Len = this.readUint32();\n    var se2Len = this.readUint32();\n    var se3Len = this.readUint32();\n    this.frameSpeed = 8 - this.readUint8();\n    this.bgmSpeed = 8 - this.readUint8();\n    offset += 32;\n    this.soundMeta = {\n      \"bgm\": {offset: offset,           length: bgmLen},\n      \"se1\": {offset: offset += bgmLen, length: se1Len},\n      \"se2\": {offset: offset += se1Len, length: se2Len},\n      \"se3\": {offset: offset += se2Len, length: se3Len},\n    };\n  }\n\n  /**\n  * Check whether or not a given frame is based on the previous one\n  * @param {number} index - zero-based frame index \n  * @returns {boolean}\n  */\n  _isFrameNew(index) {\n    this._seekToFrame(index);\n    var header = this.readUint8();\n    return (header >> 7) & 0x1;\n  }\n\n  /**\n  * Helper to decode necessary previous frames if the current frame is difference-based\n  * @param {number} index - zero-based frame index \n  */\n  _decodePrevFrames(index) {\n    var backTrack = 0;\n    var isNew = 0;\n    while (!isNew) {\n      backTrack += 1;\n      isNew = this._isFrameNew(index - backTrack);\n    }\n    backTrack = index - backTrack;\n    while (backTrack < index) {\n      this.decodeFrame(backTrack, false);\n      backTrack += 1;\n    }\n    // jump back to where we were and skip flag byte\n    this._seekToFrame(index);\n    this.seek(1, 1);\n  }\n\n  /**\n  * Get the color palette for a given frame\n  * @param {number} index - zero-based frame index \n  * @returns {array} rgba palette in order of paper, layer1, layer2\n  */\n  getFramePalette(index) {\n    this._seekToFrame(index);\n    var header = this.readUint8();\n    var paperColor = header & 0x1;\n    var pen = [\n      null,\n      paperColor == 1 ? BLACK : WHITE,\n      RED,\n      BLUE,\n    ];\n    return [\n      paperColor == 1 ? WHITE : BLACK,\n      pen[(header >> 1) & 0x3], // layer 1 color\n      pen[(header >> 3) & 0x3], // layer 2 color\n    ];\n  }\n\n  /**\n  * Decode a frame\n  * @param {number} index - zero-based frame index \n  * @param {boolean} decodePrev - defaults to true, set to false to not bother decoding previous frames\n  */\n  decodeFrame(index, decodePrev=true) {\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#animation-frame\n    this._seekToFrame(index);\n    var header = this.readUint8();\n    var isNewFrame = (header >> 7) & 0x1;\n    var isTranslated = (header >> 5) & 0x3;\n    var translateX = 0;\n    var translateY = 0;\n\n    if ((decodePrev) && (!isNewFrame) && (index !== this._prevFrameIndex + 1)) {\n      this._decodePrevFrames(index);\n    }\n    // copy the current layer buffers to the previous ones\n    this._prevLayers[0].set(this._layers[0]);\n    this._prevLayers[1].set(this._layers[1]);\n    this._prevFrameIndex = index;\n    // reset current layer buffers\n    this._layers[0].fill(0);\n    this._layers[1].fill(0);\n\n    if (isTranslated) {\n      translateX = this.readInt8();\n      translateY = this.readInt8();\n    }\n\n    var layerEncoding = [\n      this._readLineEncoding(),\n      this._readLineEncoding()\n    ];\n     // start decoding layer bitmaps\n    for (var layer = 0; layer < 2; layer++) {\n      var layerBitmap = this._layers[layer];\n      for (var line = 0; line < HEIGHT; line++) {\n        var chunkOffset = line * WIDTH;\n        var lineType = layerEncoding[layer][line];\n        switch(lineType) {\n          // line type 0 = blank line, decode nothing\n          case 0:\n            break;\n          // line types 1 + 2 = compressed bitmap line\n          case 1:\n          case 2:\n            var lineHeader = this.readUint32(false);\n            // line type 2 starts as an inverted line\n            if (lineType == 2) layerBitmap.fill(1, chunkOffset, chunkOffset + WIDTH);\n            // loop through each bit in the line header\n            while (lineHeader & 0xFFFFFFFF) {\n              // if the bit is set, this 8-pix wide chunk is stored\n              // else we can just leave it blank and move on to the next chunk\n              if (lineHeader & 0x80000000) {\n                var chunk = this.readUint8();\n                // unpack chunk bits\n                for (var pixel = 0; pixel < 8; pixel++) {\n                  layerBitmap[chunkOffset + pixel] = chunk >> pixel & 0x1;\n                }\n              }\n              chunkOffset += 8;\n              // shift lineheader to the left by 1 bit, now on the next loop cycle the next bit will be checked\n              lineHeader <<= 1;\n            }\n            break;\n          // line type 3 = raw bitmap line\n          case 3:\n            while(chunkOffset < (line + 1) * WIDTH) {\n              var chunk = this.readUint8();\n              for (var pixel = 0; pixel < 8; pixel++) {\n                layerBitmap[chunkOffset + pixel] = chunk >> pixel & 0x1;\n              }\n              chunkOffset += 8;\n            }\n            break;\n        }\n      }\n    }\n    // Merge this frame with the previous frame if needed\n    if (!isNewFrame) {\n      var dest, src, srcOutOfBounds;\n      for (var y = 0; y < HEIGHT; y++) {\n        for (var x = 0; x < WIDTH; x++) {\n          dest = x + y * WIDTH;\n          src = dest - (translateX + translateY * WIDTH);\n          srcOutOfBounds = (x - translateX > WIDTH) || (x - translateX < 0);\n          // if the current frame is based on changes from the preivous one, merge them by XORing their values\n          this._layers[0][dest] = srcOutOfBounds ? this._layers[0][dest] : this._layers[0][dest] ^ this._prevLayers[0][src];\n          this._layers[1][dest] = srcOutOfBounds ? this._layers[1][dest] : this._layers[1][dest] ^ this._prevLayers[1][src];\n        }\n      }\n    }\n    return this._layers;\n  }\n\n  /**\n  * Decode an audio track to 32-bit adpcm\n  * @param {string} track - track name, \"bgm\" | \"se1\" | \"se2\" | \"se3\"\n  * @returns {Int16Array}\n  */\n  decodeAudio(track) {\n    this._seekToAudio(track);\n    var buffer = new Uint8Array(this.soundMeta[track].length).map(value => {\n      return this.readUint8();\n    });\n    return decodeAdpcm(buffer);\n  }\n\n  /**\n  * Decode the sound effect usage for each frame\n  * @returns {array}\n  */\n  decodeSoundFlags() {\n    this.seek(0x06A0 + this._frameDataLength);\n    // per msdn docs - the array map callback is only invoked for array indicies that have assigned values\n    // so when we create an array, we need to fill it with something before we can map over it\n    var arr = new Array(this.frameCount).fill([]);\n    return arr.map(value => {\n      var byte = this.readUint8();\n      return [byte & 0x1, (byte >> 1) & 0x1, (byte >> 2) & 0x1];\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./decoder/index.js","/** file reader serves as a wrapper around the DataView API to help keep track of the offset into the file */\nexport default class fileReader {\n  /**\n  * Create a fileReader instance\n  * @param {ArrayBuffer} arrayBuffer - data to read from\n  */\n  constructor(arrayBuffer) {\n    this._data = new DataView(arrayBuffer);\n    this._offset = 0;\n  }\n\n  /**\n  * Get the length of the file\n  * @returns {number}\n  */\n  get fileLength() {\n    return this._data.byteLength;\n  }\n\n  /**\n  * based on the seek method from Python's file objects - https://www.tutorialspoint.com/python/file_seek.htm\n  * @param {number} offset - position of the read pointer within the file\n  * @param {number} whence - (optional) defaults to absolute file positioning,\n  *                          1 = offset is relative to the current position\n  *                          2 = offset is relative to the file's end\n  */\n  seek(offset, whence) {\n    switch (whence) {\n      case 2:\n        this._offset = this._data.byteLength + offset;\n        break;\n      case 1:\n        this._offset += offset;\n        break;\n      case 0:\n      default:\n        this._offset = offset;\n        break;\n    }\n  }\n\n  /**\n  * Read an unsigned 8-bit integer from the file, and automatically increment the offset\n  * @returns {number}\n  */\n  readUint8() {\n    var val = this._data.getUint8(this._offset);\n    this._offset += 1;\n    return val;\n  }\n\n  /**\n  * Read a signed 8-bit integer from the file, and automatically increment the offset\n  * @returns {number}\n  */\n  readInt8() {\n    var val = this._data.getInt8(this._offset);\n    this._offset += 1;\n    return val;\n  }\n\n  /**\n  * Read an unsigned 16-bit integer from the file, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readUint16(littleEndian=true) {\n    var val = this._data.getUint16(this._offset, littleEndian);\n    this._offset += 2;\n    return val;\n  }\n\n  /**\n  * Read a signed 16-bit integer from the file, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readInt16(littleEndian=true) {\n    var val = this._data.getInt16(this._offset, littleEndian);\n    this._offset += 2;\n    return val;\n  }\n\n  /**\n  * Read an unsigned 32-bit integer from the file, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readUint32(littleEndian=true) {\n    var val = this._data.getUint32(this._offset, littleEndian);\n    this._offset += 4;\n    return val;\n  }\n\n  /**\n  * Read a signed 32-bit integer from the file, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readInt32(littleEndian=true) {\n    var val = this._data.getInt32(this._offset, littleEndian);\n    this._offset += 4;\n    return val;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./decoder/fileReader.js","/** convert 4-bit adpcm to 16-bit pcm\n *  implementation based on http://www.cs.columbia.edu/~gskc/Code/AdvancedInternetServices/SoundNoiseRatio/dvi_adpcm.c\n*/\n\nconst indexTable = [\n  -1, -1, -1, -1, 2, 4, 6, 8,\n  -1, -1, -1, -1, 2, 4, 6, 8\n];\n\nconst stepSizeTable = [\n  7, 8, 9, 10, 11, 12, 13, 14, 16, 17,\n  19, 21, 23, 25, 28, 31, 34, 37, 41, 45,\n  50, 55, 60, 66, 73, 80, 88, 97, 107, 118,\n  130, 143, 157, 173, 190, 209, 230, 253, 279, 307,\n  337, 371, 408, 449, 494, 544, 598, 658, 724, 796,\n  876, 963, 1060, 1166, 1282, 1411, 1552, 1707, 1878, 2066,\n  2272, 2499, 2749, 3024, 3327, 3660, 4026, 4428, 4871, 5358,\n  5894, 6484, 7132, 7845, 8630, 9493, 10442, 11487, 12635, 13899,\n  15289, 16818, 18500, 20350, 22385, 24623, 27086, 29794, 32767\n];\n\nlet statePrevSample = 0,\n    statePrevIndex = 0;\n\n/**\n* Convert 4-bit adpcm to 16-bit pcm\n* @param {Uint8Array} inputBuffer - adpcm buffer\n* @returns {Int16Array}\n*/\nexport function decodeAdpcm(inputBuffer) {\n  statePrevSample = 0;\n  statePrevIndex = 0;\n  var outputBuffer = new Int16Array(inputBuffer.length * 2);\n  var outputOffset = 0;\n  for (var inputOffset = 0; inputOffset < inputBuffer.length; inputOffset++) {\n    var byte = inputBuffer[inputOffset];\n    // note - Flipnote Studio's adpcm data uses reverse nibble order\n    outputBuffer[outputOffset] = decodeSample(byte & 0xF);\n    outputBuffer[outputOffset + 1] = decodeSample((byte >> 4) & 0xF);\n    outputOffset += 2;\n  }\n  return outputBuffer;\n};\n\n/**\n* Unpack a single adpcm 4-bit sample\n* @param {number} sample - sample value\n* @returns {number}\n* @access protected\n*/\nfunction decodeSample(sample) {\n  var predSample = statePrevSample;\n  var index = statePrevIndex;\n  var step = stepSizeTable[index];\n  var difference = step >> 3;\n\n  // compute difference and new predicted value\n  if (sample & 0x4) difference += step;\n  if (sample & 0x2) difference += (step >> 1);\n  if (sample & 0x1) difference += (step >> 2);\n  // handle sign bit\n  predSample += (sample & 0x8) ? -difference : difference;\n\n  // find new index value\n  index += indexTable[sample];\n  index = clamp(index, 0, 88);\n\n  // clamp output value\n  predSample = clamp(predSample, -32767, 32767);\n  statePrevSample = predSample;\n  statePrevIndex = index;\n  return predSample;\n};\n\n/**\n* Util to clamp a number within a given range\n* @param {number} num - input value\n* @param {number} min - minimun value\n* @param {number} max - maximum value\n* @returns {number}\n* @access protected\n*/\nfunction clamp(num, min, max) {\n  return num <= min ? min : num >= max ? max : num;\n};\n\n\n// WEBPACK FOOTER //\n// ./decoder/adpcm.js","import urlLoader from \"./urlLoader\";\nimport fileLoader from \"./fileLoader\";\nimport arrayBufferLoader from \"./arrayBufferLoader\";\n\nconst loaders = [\n  urlLoader,\n  fileLoader,\n  arrayBufferLoader\n];\n\nexport default function load(source) {\n  return new Promise(function (resolve, reject) {\n    for (var i = 0; i < loaders.length; i++) {\n      var loader = loaders[i];\n      if (loader.matches(source)) {\n        loader.load(source, resolve, reject);\n        break;\n      }\n    }\n  });\n}\n\n\n// WEBPACK FOOTER //\n// ./loader/index.js","export default {\n\n  matches: function(source) {\n    return typeof source === \"string\";\n  },\n\n  load: function(source, resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", source, true);\n    xhr.responseType = \"arraybuffer\"; \n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4) {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          resolve(xhr.response);\n        } else {\n          reject({\n            type: \"httpError\",\n            status: xhr.status,\n            statusText: xhr.statusText\n          });\n        }\n      }\n    };\n    xhr.send(null);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./loader/urlLoader.js","// fileloader is stubbed for now\n\nexport default {\n\n  matches: function(source) {\n    return false\n  },\n\n  load: function(source, resolve, reject) {\n    reject();\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./loader/fileLoader.js","export default {\n\n  matches: function(source) {\n    return (source instanceof ArrayBuffer);\n  },\n\n  load: function(source, resolve, reject) {\n    resolve(source);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./loader/arrayBufferLoader.js","export default class audioTrack {\n  /**\n  * Create a new audio player\n  */\n  constructor (id) {\n    this.id = id;\n    this.channelCount = 1;\n    this.bitsPerSample = 16;\n    this.sampleRate = 8192;\n    this.playbackRate = 1;\n    this.audio = document.createElement(\"audio\");\n    this.audio.preload = true;\n    this.active = false;\n  }\n\n  /**\n  * Set the audio track\n  * @param {Int16Array} pcmData - mono-channel 16-bit PCM audio\n  * @param {number} playbackRate - audio playback rate (1 = default)\n  */\n  set(pcmData, playbackRate) {\n    // the HTML5 audio element supports PCM audio if it's in a WAV wrapper\n    // to do this we write a WAV header and prepend it to the raw PCM data\n    // WAV header reference: http://www.topherlee.com/software/pcm-tut-wavformat.html\n    var header = new DataView(new ArrayBuffer(44));\n    // \"RIFF\" indent\n    header.setUint32(0, 1179011410, true);\n    // filesize\n    header.setUint32(4, header.byteLength + pcmData.byteLength, true);\n    // \"WAVE\" indent\n    header.setUint32(8, 1163280727, true);\n    // \"fmt \" section header\n    header.setUint32(12, 544501094, true);\n    // fmt section length\n    header.setUint32(16, 16, true);\n    // specify audio format is pcm (type 1)\n    header.setUint16(20, 1, true);\n    // number of audio channels\n    header.setUint16(22, this.channelCount, true);\n    // audio sample rate\n    header.setUint32(24, this.sampleRate * playbackRate, true);\n    // byterate = (sampleRate * bitsPerSample * channelCount) / 8\n    header.setUint32(28, ((this.sampleRate * playbackRate) * this.bitsPerSample * this.channelCount) / 8, true);\n    // blockalign = (bitsPerSample * channels) / 8\n    header.setUint16(32, (this.bitsPerSample * this.channelCount) / 8, true);\n    // bits per sample\n    header.setUint16(34, this.bitsPerSample, true);\n    // \"data\" section header\n    header.setUint32(36, 1635017060, true);\n    // data section length\n    header.setUint32(40, pcmData.byteLength, true);\n    // create blob from joining the wav header and pcm data\n    this.url = window.URL.createObjectURL(new Blob([header.buffer, pcmData.buffer], {type: \"audio/wav\"}));\n    // use the blob url for the audio element\n    this.audio.src = this.url;\n    this.active = true;\n    this.playbackRate = playbackRate;\n  }\n\n  /**\n  * Clear the audio track\n  */\n  unset() {\n    if (this.active) {\n      window.URL.revokeObjectURL(this.url);\n      this.audio.src = \"\";\n      this.audio.load();\n      this.active = false;\n      this.playbackRate = 1;\n    }\n  }\n\n  /**\n  * Start audio playback\n  * @param {number} offset - offset to begin playback at\n  */\n  start(offset) {\n    if (this.active) {\n      this.audio.currentTime = offset || 0;\n      this.audio.play();\n    }\n  }\n\n  /**\n  * Stop audio playback\n  */\n  stop() {\n    if (this.active) {\n      this.audio.pause();\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./player/audio.js"],"sourceRoot":""}