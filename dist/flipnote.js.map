{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 8d85ba5a9eb4f34e54b6","webpack:///./flipnote.js","webpack:///./player/index.js","webpack:///./webgl/webglCanvas.js","webpack:///./webgl/vertexShader.glsl.js","webpack:///./webgl/fragmentShader.glsl.js","webpack:///./decoder/index.js","webpack:///./decoder/fileReader.js","webpack:///./decoder/adpcm.js","webpack:///./player/audio.js"],"names":["module","exports","version","player","FRAMERATES","ppmPlayer","el","width","height","document","querySelector","canvas","_isOpen","loop","currentFrame","paused","source","close","buffer","ppm","meta","frameCount","frameSpeed","_bgmAudio","soundMeta","bgm","length","decodeAudio","playbackRate","_audiorate","_seAudio","se1","se2","se3","_seFlags","decodeSoundFlags","_playbackFrameTime","_lastFrameTime","_events","_hasPlaybackStarted","setFrame","thumbFrameIndex","emit","_frame","Array","clear","index","flags","i","start","currentTime","now","dt","frame","framerate","_playFrameSe","nextFrame","firstFrame","_playBgm","pause","requestAnimationFrame","_playbackLoop","bind","performance","stop","Math","max","min","setPalette","getFramePalette","setBitmaps","decodeFrame","refresh","resize","eventType","callback","events","push","callbackList","splice","indexOf","args","apply","value","duration","round","bgmSpeed","webglCanvas","gl","getContext","antialias","program","createProgram","_createShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","useProgram","vertBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","_createTexture","TEXTURE0","TEXTURE1","type","shader","createShader","shaderSource","compileShader","attachShader","name","texture","uniform1i","getUniformLocation","activeTexture","bindTexture","TEXTURE_2D","createTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","color","uniform4f","colors","setColor","buffers","texImage2D","ALPHA","UNSIGNED_BYTE","viewport","drawArrays","TRIANGLES","COLOR_BUFFER_BIT","join","WIDTH","HEIGHT","BLACK","WHITE","BLUE","RED","ppmDecoder","arrayBuffer","seek","_frameDataLength","readUint32","_soundDataLength","readUint16","offsetTableLength","_frameOffsets","Uint32Array","map","_decodeMeta","_decodeSoundHeader","_layers","Uint8Array","_prevLayers","_prevFrameIndex","track","offset","str","terminated","char","String","fromCharCode","reverse","ret","readUint8","toString","padStart","toUpperCase","_readHex","unpacked","byteOffset","byte","bitOffset","lock","thumbIndex","readInt16","rootAuthorName","_readUtf16","parentAuthorName","currentAuthorName","parentAuthorId","currentAuthorId","parentFilename","_readFilename","currentFilename","rootAuthorId","timestamp","Date","frame_count","thumb_index","spinoff","root","username","fsid","parent","filename","current","bgmLen","se1Len","se2Len","se3Len","_seekToFrame","header","backTrack","isNew","_isFrameNew","paperColor","pen","decodePrev","isNewFrame","isTranslated","translateX","translateY","_decodePrevFrames","set","fill","readInt8","layerEncoding","_readLineEncoding","layer","layerBitmap","line","chunkOffset","lineType","lineHeader","chunk","pixel","dest","src","srcOutOfBounds","y","x","_seekToAudio","arr","fileReader","_data","DataView","_offset","whence","byteLength","val","getUint8","getInt8","littleEndian","getUint16","getInt16","getUint32","getInt32","decodeAdpcm","indexTable","stepSizeTable","statePrevSample","statePrevIndex","inputBuffer","outputBuffer","outputOffset","inputOffset","decodeSample","sample","predSample","step","difference","clamp","num","audioTrack","audioData","ctx","AudioContext","audioBuffer","channel","copyToChannel","createBufferSource","connect","destination","onended"],"mappings":"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","file":"flipnote.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flipnote\"] = factory();\n\telse\n\t\troot[\"flipnote\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8d85ba5a9eb4f34e54b6","import ppmPlayer from \"./player\";\n// import decoder from \"./decoder\";\n\nmodule.exports = {\n  version: VERSION,\n  player: ppmPlayer,\n  // decoder: decoder,\n};\n\n\n// WEBPACK FOOTER //\n// ./flipnote.js","import webglCanvas from \"webgl/webglCanvas\";\nimport ppmDecoder from \"decoder\";\nimport audioTrack from \"./audio\";\n\n// internal framerate value -> FPS table\nconst FRAMERATES = {\n  1: 0.5,\n  2: 1,\n  3: 2,\n  4: 4,\n  5: 6,\n  6: 12,\n  7: 20,\n  8: 30,\n};\n\n/** flipnote player API, based on HTMLMediaElement (https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement) */ \nexport default class ppmPlayer {\n  /**\n  * Create new flipnote player\n  * @param {string | HTMLCanvasElement} el - HTML Canvas Element to use, or CSS selector for one\n  * @param {number} width - canvas width in pixels\n  * @param {number} height - canvas height in pixels\n  */\n  constructor(el, width, height) {\n    // if `el` is a string, use it to select an Element, else assume it's an element\n    el = (\"string\" == typeof el) ? document.querySelector(el) : el;\n    this.canvas = new webglCanvas(el, width, height);\n    this._isOpen = false;\n    this.loop = false;\n    this.currentFrame = 0;\n    this.paused = true;\n  }\n\n  /**\n  * Get the index of the current frame \n  */\n  get currentFrame() {\n    return this._frame;\n  }\n\n  /**\n  * Set the current frame\n  */\n  set currentFrame(index) {\n    this.setFrame(index);\n  }\n\n  /**\n  * Get current playback time in seconds\n  */\n  get currentTime() {\n    return this._isOpen ? this.currentFrame * (1 / this.framerate) : null;\n  }\n\n  /**\n  * Set current playback time in seconds\n  */\n  set currentTime(value) {\n    if ((this._isOpen) && (value < this.duration) && (value > 0)) {\n      this.setFrame(Math.round(value / (1 / this.framerate)));\n      this._playbackFrameTime = 0;\n    }\n  }\n\n  /**\n  * Get the duration of the Flipnote in seconds\n  */\n  get duration() {\n    return this._isOpen ? this.frameCount * (1 / this.framerate) : null;\n  }\n\n  /**\n  * Get the Flipnote framerate in frames-per-second\n  */\n  get framerate() {\n    return FRAMERATES[this.frameSpeed];\n  }\n\n  /**\n  * Get the audio playback rate by comparing audio and frame speeds\n  * @access protected\n  */\n  get _audiorate() {\n    return (1 / FRAMERATES[this.ppm.bgmSpeed]) / (1 / FRAMERATES[this.frameSpeed]);\n  }\n\n  /**\n  * Load a Flipnote into the player\n  * @param {ArrayBuffer} source - ppm data\n  */\n  open(source) {\n    if (this._isOpen) this.close();\n    var buffer = source;\n    var ppm = new ppmDecoder(buffer);\n    var meta = ppm.meta;\n    this.ppm = ppm;\n    this.meta = meta;\n    this.frameCount = ppm.frameCount;\n    this.frameSpeed = ppm.frameSpeed;\n    this.loop = meta.loop == 1;\n    this._bgmAudio = ppm.soundMeta.bgm.length > 0 ? new audioTrack(this.ppm.decodeAudio(\"bgm\")) : null;\n    if (this._bgmAudio) this._bgmAudio.playbackRate = this._audiorate;\n    this._seAudio = [\n      ppm.soundMeta.se1.length > 0 ? new audioTrack(this.ppm.decodeAudio(\"se1\")) : null,\n      ppm.soundMeta.se2.length > 0 ? new audioTrack(this.ppm.decodeAudio(\"se2\")) : null,\n      ppm.soundMeta.se3.length > 0 ? new audioTrack(this.ppm.decodeAudio(\"se3\")) : null,\n    ];\n    this._seFlags = this.ppm.decodeSoundFlags();\n    this._isOpen = true;\n    this.paused = true;\n    this._playbackFrameTime = 0;\n    this._lastFrameTime = 0;\n    this._events = {};\n    this._hasPlaybackStarted = false;\n    this.setFrame(this.ppm.thumbFrameIndex);\n    this.emit(\"load\");\n  }\n\n  /**\n  * Close the currently loaded Flipnote and clear the player canvas\n  */\n  close() {\n    this.ppm = null;\n    this._isOpen = false;\n    this.paused = true;\n    this.loop = null;\n    this.meta = null;\n    this.frameCount = null;\n    this.frameSpeed = null;\n    this._frame = 0;\n    this._bgmAudio = null;\n    this._seAudio = new Array(3);\n    this._seFlags = null;\n    this._hasPlaybackStarted = null;\n    this.canvas.clear();\n  }\n\n  /**\n  * Play the sound effects for a given frame\n  * @param {number} index - zero-based frame index\n  * @access protected\n  */\n  _playFrameSe(index) {\n    var flags = this._seFlags[index];\n    for (let i = 0; i < flags.length; i++) {\n      if (flags[i] && this._seAudio[i]) this._seAudio[i].start();\n    }\n  }\n\n  /**\n  * Play the Flipnote BGM\n  * @access protected\n  */\n  _playBgm() {\n    if (this._bgmAudio) this._bgmAudio.start(this.currentTime);\n  }\n\n  /**\n  * Internal requestAnimationFrame handler\n  * @param {number} now - current time\n  * @access protected\n  */\n  _playbackLoop(now) {\n    var dt = (now - this._lastFrameTime) / (1000 / 60);\n    var frame = this.currentFrame;\n    if (this._playbackFrameTime >= 60 / this.framerate) {\n      this._playFrameSe(frame);\n      this.nextFrame();\n      this._playbackFrameTime = 0;\n    }\n    if (frame == this.frameCount -1) {\n      if (this.loop) {\n        this.firstFrame();\n        this._playBgm();\n        this.emit(\"playback:loop\");\n      } else {\n        this.pause();\n        this.emit(\"playback:end\");\n      }\n    }\n    this._playbackFrameTime += dt;\n    this._lastFrameTime = now;\n    if (!this.paused) requestAnimationFrame(this._playbackLoop.bind(this));\n  }\n\n  /**\n  * Begin Flipnote playback\n  */\n  play() {\n    if (!this._isOpen) return null;\n    this.paused = false;\n    if ((!this._hasPlaybackStarted) || ((!this.loop) && (this.currentFrame == this.frameCount - 1))) this._frame = 0;\n    this._lastFrameTime = performance.now();\n    this._playBgm();\n    this._playbackLoop(this._lastFrameTime);\n    this._hasPlaybackStarted = true;\n    this.emit(\"playback:start\");\n  }\n\n  /**\n  * Pause Flipnote playback\n  */\n  pause() {\n    if (!this._isOpen) return null;\n    // break the playback loop\n    this.paused = true;\n    if (this._bgmAudio) this._bgmAudio.stop();\n    this.emit(\"playback:stop\");\n  }\n\n  /**\n  * Jump to a specific frame\n  * @param {number} index - zero-based frame index\n  */\n  setFrame(index) {\n    if (!this._isOpen) return null;\n    // clamp frame index\n    index = Math.max(0, Math.min(index, this.frameCount - 1));\n    this._frame = index;\n    this._playbackFrameTime = 0;\n    this.canvas.setPalette(this.ppm.getFramePalette(index));\n    this.canvas.setBitmaps(this.ppm.decodeFrame(index));\n    this.canvas.refresh();\n  }\n\n  /**\n  * Jump to the next frame in the animation\n  */\n  nextFrame() {\n    if ((this.loop) && (this.currentFrame >= this.frameCount -1)) {\n      this.currentFrame = 0;\n    } else {\n      this.currentFrame += 1;\n    }\n  }\n\n  /**\n  * Jump to the previous frame in the animation\n  */\n  prevFrame() {\n    if ((this.loop) && (this.currentFrame <= 0)) {\n      this.currentFrame = this.frameCount - 1;\n    } else {\n      this.currentFrame -= 1;\n    }\n  }\n\n  /**\n  * Jump to the last frame in the animation\n  */\n  lastFrame() {\n    this.currentFrame = this.frameCount - 1;\n  }\n\n  /**\n  * Jump to the first frame in the animation\n  */\n  firstFrame() {\n    this.currentFrame = 0;\n  }\n\n  /**\n  * Jump to the thumbnail frame\n  */\n  thumbnailFrame() {\n    this.currentFrame = this.ppm.thumbFrameIndex;\n  }\n\n  /**\n  * Resize player canvas\n  * @param {number} width - canvas width in pixels\n  * @param {number} height - canvas height in pixels\n  */\n  resize(width, height) {\n    this.canvas.resize(width, height);\n  }\n\n  /**\n  * Register an event callback\n  * @param {string} eventType - event type\n  * @param {function} callback - event callback function\n  */\n  on(eventType, callback) {\n    var events = this._events;\n    (events[eventType] || (events[eventType] = [])).push(callback);\n  }\n\n  /**\n  * Remove an event callback\n  * @param {string} eventType - event type\n  * @param {function} callback - event callback function\n  */\n  off(eventType, callback) {\n    var callbackList = this._events[eventType];\n    if (callbackList) callbackList.splice(callbackList.indexOf(callback), 1);\n  }\n\n  /**\n  * Emit an event (used internally)\n  * @param {string} eventType - event type\n  * @param {...} args - arguments to be passed to event callback\n  */\n  emit(eventType, ...args) {\n    var callbackList = this._events[eventType] || [];\n    for (var i = 0; i < callbackList.length; i++) {\n      callbackList[i].apply(null, args); \n    }\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./player/index.js","import vertexShader from \"./vertexShader.glsl.js\";\nimport fragmentShader from \"./fragmentShader.glsl.js\";\n\n/** webgl canvas wrapper class */\nexport default class webglCanvas {\n  /**\n  * Create a rendering canvas\n  * @param {HTMLCanvasElement} el - The HTML canvas element\n  * @param {number} width - width of the canvas in pixels\n  * @param {number} height - height of the canvas in pixels\n  */\n  constructor(el, width, height) {\n    el.width = width || 256;\n    el.height = height || 192; \n    var gl = el.getContext(\"webgl\", {antialias: false,});\n    var program = gl.createProgram();\n    this.program = program;\n    this.el = el;\n    this.gl = gl;\n    this._createShader(gl.VERTEX_SHADER, vertexShader);\n    this._createShader(gl.FRAGMENT_SHADER, fragmentShader);\n    gl.linkProgram(program);\n    gl.useProgram(program);\n    // create quad that fills the screen, this will be our drawing surface\n    var vertBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1,  1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n    // create textures for each layer\n    this._createTexture(\"u_layer1Bitmap\", 0, gl.TEXTURE0);\n    this._createTexture(\"u_layer2Bitmap\", 1, gl.TEXTURE1);\n  }\n\n  /**\n  * Util to compile and attach a new shader\n  * @param {shader type} type - gl.VERTEX_SHADER | gl.FRAGMENT_SHADER\n  * @param {string} source - GLSL code for the shader\n  * @access protected \n  */\n  _createShader(type, source) {\n    var gl = this.gl;\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    gl.attachShader(this.program, shader);\n  }\n\n  /**\n  * Util to set up a texture\n  * @param {string} name - name of the texture's uniform variable\n  * @param {number} index - texture index\n  * @param {texture} texture - webgl texture unit, gl.TEXTURE0, gl.TEXTURE1, etc\n  * @access protected \n  */\n  _createTexture(name, index, texture) {\n    var gl = this.gl;\n    gl.uniform1i(gl.getUniformLocation(this.program, name), index);\n    gl.activeTexture(texture);\n    gl.bindTexture(gl.TEXTURE_2D, gl.createTexture());\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  }\n\n  /**\n  * Set an palette individual color\n  * @param {string} color - name of the color's uniform variable\n  * @param {array} value - r,g,b,a color, each channel's value should be between 0.0 and 1.0\n  */\n  setColor(color, value) {\n    this.gl.uniform4f(this.gl.getUniformLocation(this.program, color), value[0]/255, value[1]/255, value[2]/255, value[3]/255);\n  }\n\n  /**\n  * Set the palette\n  * @param {array} colors - array of r,g,b,a colors with channel values from 0.0 to 1.0, in order of paper, layer1, layer2\n  */\n  setPalette(colors) {\n    this.setColor(\"u_paperColor\", colors[0]);\n    this.setColor(\"u_layer1Color\", colors[1]);\n    this.setColor(\"u_layer2Color\", colors[2]);\n  }\n\n  /**\n  * Set layer bitmaps\n  * @param {array} buffers - array of two uint8 buffers, one for each layer\n  */\n  setBitmaps(buffers) {\n    var gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, 256, 192, 0, gl.ALPHA, gl.UNSIGNED_BYTE, buffers[0]);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, 256, 192, 0, gl.ALPHA, gl.UNSIGNED_BYTE, buffers[1]);\n  }\n\n  /**\n  * Resize canvas\n  * @param {number} width - width of the canvas in pixels\n  * @param {number} height - height of the canvas in pixels\n  */\n  resize(width=256, height=192) {\n    this.el.width = width;\n    this.el.height = height; \n    this.gl.viewport(0, 0, width, height);\n  }\n\n  /**\n  * Redraw canvas\n  */\n  refresh() {\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n  }\n\n  /**\n  * Clear canvas\n  */\n  clear() {\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./webgl/webglCanvas.js","export default [\n  \"attribute vec4 a_position;\",\n  \"varying vec2 v_texcoord;\",\n  \"void main() {\",\n    \"gl_Position = a_position;\",\n    \"v_texcoord = a_position.xy * vec2(0.5, -0.5) + 0.5;\",\n  \"}\"  \n].join(\"\\n\");\n\n\n// WEBPACK FOOTER //\n// ./webgl/vertexShader.glsl.js","export default [\n  \"precision lowp float;\",\n  \"varying vec2 v_texcoord;\",\n  \"uniform vec4 u_paperColor;\", \n  \"uniform vec4 u_layer1Color;\", \n  \"uniform vec4 u_layer2Color;\", \n  \"uniform sampler2D u_layer1Bitmap;\",\n  \"uniform sampler2D u_layer2Bitmap;\",    \n  \"void main() {\",\n      \"float layer1 = texture2D(u_layer1Bitmap, v_texcoord).a;\",\n      \"float layer2 = texture2D(u_layer2Bitmap, v_texcoord).a;\",\n      // combine the two layer bitmaps together\n      // each pixel will either be 0.0 if it is \"transparent\", or (1/255) if it is used\n      // layer 1 is on top of layer 2, anything else should be paper color\n      \"gl_FragColor = (layer1 == 0.0) ? (layer2 == 0.0) ? u_paperColor : u_layer2Color : u_layer1Color;\",\n  \"}\"\n].join(\"\\n\");\n\n\n\n// WEBPACK FOOTER //\n// ./webgl/fragmentShader.glsl.js","/**\n * PPM decoder\n * Reads frames, audio, and metadata from Flipnote Studio PPM files \n * Based on my Python PPM decoder implementation (https://github.com/jaames/flipnote-tools)\n *  \n * Credits:\n *  PPM format reverse-engineering and documentation:\n *   - bricklife (http://ugomemo.g.hatena.ne.jp/bricklife/20090307/1236391313)\n *   - mirai-iro (http://mirai-iro.hatenablog.jp/entry/20090116/ugomemo_ppm)\n *   - harimau_tigris (http://ugomemo.g.hatena.ne.jp/harimau_tigris)\n *   - steven (http://www.dsibrew.org/wiki/User:Steven)\n *   - yellows8 (http://www.dsibrew.org/wiki/User:Yellows8)\n *   - PBSDS (https://github.com/pbsds)\n *   - jaames (https://github.com/jaames)\n *  Identifying the PPM sound codec:\n *   - Midmad from Hatena Haiku\n *   - WDLMaster from hcs64.com\n *  Helping me to identify issues with the Python decoder that this is based on:\n *   - Austin Burk (https://sudomemo.net)\n * \n *  Lastly, a huge thanks goes to Nintendo for creating Flipnote Studio, \n *  and to Hatena for providing the Flipnote Hatena online service, both of which inspired so many c:\n*/\n\nimport fileReader from \"./fileReader\";\nimport {decodeAdpcm} from \"./adpcm\";\n\nconst WIDTH = 256;\nconst HEIGHT = 192;\nconst BLACK = [14, 14, 14, 255];\nconst WHITE = [255, 255, 255, 255];\nconst BLUE = [10, 57, 255, 255];\nconst RED = [255, 42, 42, 255];\n\nexport default class ppmDecoder extends fileReader {\n  /**\n  * Create a ppmDecoder instance\n  * @param {ArrayBuffer} arrayBuffer - data to read from\n  */\n  constructor(arrayBuffer) {\n    super(arrayBuffer);\n    this.seek(4);\n    // decode header\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#file-header\n    this._frameDataLength = this.readUint32();\n    this._soundDataLength = this.readUint32();\n    this.frameCount = Math.min(this.readUint16() + 1, 999);\n    this.seek(18);\n    this.thumbFrameIndex = this.readUint16();\n    // jump to the start of the animation data section\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#animation-data-section\n    this.seek(0x06A0);\n    var offsetTableLength = this.readUint16();\n    // skip padding + flags\n    this.seek(0x06A8);\n    // read frame offsets and build them into a table\n    this._frameOffsets = new Uint32Array(offsetTableLength / 4).map(value => {\n      return 0x06A8 + offsetTableLength + this.readUint32();\n    });\n    this.meta = this._decodeMeta();\n    this._decodeSoundHeader();\n    // create image buffers\n     this._layers = [\n      new Uint8Array(WIDTH * HEIGHT),\n      new Uint8Array(WIDTH * HEIGHT)\n    ];\n    this._prevLayers = [\n      new Uint8Array(WIDTH * HEIGHT),\n      new Uint8Array(WIDTH * HEIGHT)\n    ];\n    this._prevFrameIndex = 0;\n  }\n  \n  /**\n  * Seek the buffer position to the start of a given frame\n  * @param {number} index - zero-based frame index to jump to\n  * @access protected\n  */\n  _seekToFrame(index) {\n    this.seek(this._frameOffsets[index]);\n  }\n\n  /**\n  * Seek the buffer position to the start of a given audio track\n  * @param {string} track - track name, \"bgm\" | \"se1\" | \"se2\" | \"se3\"\n  * @access protected\n  */\n  _seekToAudio(track) {\n    this.seek(this.soundMeta[track].offset);\n  }\n\n  /**\n  * Read an UTF-16 little-endian string (for usernames)\n  * @param {number} length - max length of the string in bytes (including padding)\n  * @returns {string}\n  * @access protected\n  */\n  _readUtf16(length) {\n    var str = \"\";\n    var terminated = false;\n    for (var i = 0; i < length / 2; i++) {\n      var char = this.readUint16();\n      // utf16 stings in flipnotes are terminated with null bytes (0x00) \n      if ((terminated) || (char == 0)) { \n        terminated = true;\n        continue;\n      }\n      str += String.fromCharCode(char);\n    }\n    return str;\n  }\n\n  /**\n  * Read a hex string (for FSIDs and filenames)\n  * @param {number} length - max length of the string in bytes\n  * @param {boolean} reverse - defaults to false, if true, the string will be read in reverse byte order\n  * @returns {string}\n  * @access protected\n  */\n  _readHex(length, reverse=false) {\n    var ret = [];\n    for (var i = 0; i < length; i++) {\n      ret.push(this.readUint8().toString(16).padStart(2, \"0\"));\n    }\n    if (reverse) ret.reverse();\n    return ret.join(\"\").toUpperCase();\n  }\n\n  /**\n  * Read a HEX string \n  * @returns {string}\n  * @access protected\n  */\n  _readFilename() {\n    var str = \"\";\n    // filename starts with 3 hex bytes\n    str += this._readHex(3) + \"_\";\n    // then 13 byte utf8 string\n    for (var i = 0; i < 13; i++) {\n      str += String.fromCharCode(this.readUint8());\n    }\n    str += \"_\";\n    // then 2-byte edit count padded to 3 chars\n    str += this.readUint16().toString().padStart(3, \"0\");\n    return str;\n  }\n\n  /**\n  * Unpack the line encoding flags for all 192 lines in a layer\n  * @returns {array}\n  * @access protected\n  */\n  _readLineEncoding() {\n    var unpacked = new Uint8Array(HEIGHT);\n    for (var byteOffset = 0; byteOffset < 48; byteOffset ++) {\n      var byte = this.readUint8();\n      // each line's encoding type is stored as a 2-bit value\n      for (var bitOffset = 0; bitOffset < 8; bitOffset += 2) {\n        unpacked[byteOffset * 4 + bitOffset / 2] = (byte >> bitOffset) & 0x03;\n      }\n    }\n    return unpacked;\n  }\n\n  /**\n  * Decode the main PPM metadata, like username, timestamp, etc\n  * @returns {object}\n  * @access protected\n  */\n  _decodeMeta() {\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#file-header\n    this.seek(0x10);\n    var lock = this.readUint16(),\n        thumbIndex = this.readInt16(),\n        rootAuthorName = this._readUtf16(22),\n        parentAuthorName = this._readUtf16(22),\n        currentAuthorName = this._readUtf16(22),\n        parentAuthorId = this._readHex(8, true),\n        currentAuthorId = this._readHex(8, true),\n        parentFilename = this._readFilename(),\n        currentFilename = this._readFilename(),\n        rootAuthorId = this._readHex(8, true);\n    this.seek(0x9A);\n    var timestamp = new Date((this.readUint32() + 946684800) * 1000);\n    this.seek(0x6A60);\n    var flags = this.readUint16();\n    return {\n      lock: lock,\n      loop: flags >> 1 & 0x01,\n      frame_count: this.frameCount,\n      thumb_index: thumbIndex,\n      timestamp: timestamp,\n      spinoff: currentAuthorId !== parentAuthorId,\n      root: {\n        username: rootAuthorName,\n        fsid: rootAuthorId,\n      },\n      parent: {\n        username: parentAuthorName,\n        fsid: parentAuthorId,\n        filename: parentFilename\n      },\n      current: {\n        username: currentAuthorName,\n        fsid: currentAuthorId,\n        filename: currentFilename\n      },\n    };\n  }\n\n  /**\n  * Decode the sound header to get audio track lengths and frame/bgm sppeds\n  * @access protected\n  */\n  _decodeSoundHeader() {\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#sound-data-section\n    // offset = frame data offset + frame data length + sound effect flags\n    var offset = 0x06A0 + this._frameDataLength + this.frameCount;\n    // account for multiple-of-4 padding\n    if (offset % 4 != 0) offset += 4 - (offset % 4);\n    this.seek(offset);\n    var bgmLen = this.readUint32();\n    var se1Len = this.readUint32();\n    var se2Len = this.readUint32();\n    var se3Len = this.readUint32();\n    this.frameSpeed = 8 - this.readUint8();\n    this.bgmSpeed = 8 - this.readUint8();\n    offset += 32;\n    this.soundMeta = {\n      \"bgm\": {offset: offset,           length: bgmLen},\n      \"se1\": {offset: offset += bgmLen, length: se1Len},\n      \"se2\": {offset: offset += se1Len, length: se2Len},\n      \"se3\": {offset: offset += se2Len, length: se3Len},\n    };\n  }\n\n  /**\n  * Check whether or not a given frame is based on the previous one\n  * @param {number} index - zero-based frame index \n  * @returns {boolean}\n  */\n  _isFrameNew(index) {\n    this._seekToFrame(index);\n    var header = this.readUint8();\n    return (header >> 7) & 0x1;\n  }\n\n  /**\n  * Helper to decode necessary previous frames if the current frame is difference-based\n  * @param {number} index - zero-based frame index \n  */\n  _decodePrevFrames(index) {\n    var backTrack = 0;\n    var isNew = 0;\n    while (!isNew) {\n      backTrack += 1;\n      isNew = this._isFrameNew(index - backTrack);\n    }\n    backTrack = index - backTrack;\n    while (backTrack < index) {\n      this.decodeFrame(backTrack, false);\n      backTrack += 1;\n    }\n    // jump back to where we were and skip flag byte\n    this._seekToFrame(index);\n    this.seek(1, 1);\n  }\n\n  /**\n  * Get the color palette for a given frame\n  * @param {number} index - zero-based frame index \n  * @returns {array} rgba palette in order of paper, layer1, layer2\n  */\n  getFramePalette(index) {\n    this._seekToFrame(index);\n    var header = this.readUint8();\n    var paperColor = header & 0x1;\n    var pen = [\n      null,\n      paperColor == 1 ? BLACK : WHITE,\n      RED,\n      BLUE,\n    ];\n    return [\n      paperColor == 1 ? WHITE : BLACK,\n      pen[(header >> 1) & 0x3], // layer 1 color\n      pen[(header >> 3) & 0x3], // layer 2 color\n    ];\n  }\n\n  /**\n  * Decode a frame\n  * @param {number} index - zero-based frame index \n  * @param {boolean} decodePrev - defaults to true, set to false to not bother decoding previous frames\n  */\n  decodeFrame(index, decodePrev=true) {\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#animation-frame\n    this._seekToFrame(index);\n    var header = this.readUint8();\n    var isNewFrame = (header >> 7) & 0x1;\n    var isTranslated = (header >> 5) & 0x3;\n    var translateX = 0;\n    var translateY = 0;\n\n    if ((decodePrev) && (!isNewFrame) && (index !== this._prevFrameIndex + 1)) {\n      this._decodePrevFrames(index);\n    }\n    // copy the current layer buffers to the previous ones\n    this._prevLayers[0].set(this._layers[0]);\n    this._prevLayers[1].set(this._layers[1]);\n    this._prevFrameIndex = index;\n    // reset current layer buffers\n    this._layers[0].fill(0);\n    this._layers[1].fill(0);\n\n    if (isTranslated) {\n      translateX = this.readInt8();\n      translateY = this.readInt8();\n    }\n\n    var layerEncoding = [\n      this._readLineEncoding(),\n      this._readLineEncoding()\n    ];\n     // start decoding layer bitmaps\n    for (var layer = 0; layer < 2; layer++) {\n      var layerBitmap = this._layers[layer];\n      for (var line = 0; line < HEIGHT; line++) {\n        var chunkOffset = line * WIDTH;\n        var lineType = layerEncoding[layer][line];\n        switch(lineType) {\n          // line type 0 = blank line, decode nothing\n          case 0:\n            break;\n          // line types 1 + 2 = compressed bitmap line\n          case 1:\n          case 2:\n            var lineHeader = this.readUint32(false);\n            // line type 2 starts as an inverted line\n            if (lineType == 2) layerBitmap.fill(1, chunkOffset, chunkOffset + WIDTH);\n            // loop through each bit in the line header\n            while (lineHeader & 0xFFFFFFFF) {\n              // if the bit is set, this 8-pix wide chunk is stored\n              // else we can just leave it blank and move on to the next chunk\n              if (lineHeader & 0x80000000) {\n                var chunk = this.readUint8();\n                // unpack chunk bits\n                for (var pixel = 0; pixel < 8; pixel++) {\n                  layerBitmap[chunkOffset + pixel] = chunk >> pixel & 0x1;\n                }\n              }\n              chunkOffset += 8;\n              // shift lineheader to the left by 1 bit, now on the next loop cycle the next bit will be checked\n              lineHeader <<= 1;\n            }\n            break;\n          // line type 3 = raw bitmap line\n          case 3:\n            while(chunkOffset < (line + 1) * WIDTH) {\n              var chunk = this.readUint8();\n              for (var pixel = 0; pixel < 8; pixel++) {\n                layerBitmap[chunkOffset + pixel] = chunk >> pixel & 0x1;\n              }\n              chunkOffset += 8;\n            }\n            break;\n        }\n      }\n    }\n    // Merge this frame with the previous frame if needed\n    if (!isNewFrame) {\n      var dest, src, srcOutOfBounds;\n      for (var y = 0; y < HEIGHT; y++) {\n        for (var x = 0; x < WIDTH; x++) {\n          dest = x + y * WIDTH;\n          src = dest - (translateX + translateY * WIDTH);\n          srcOutOfBounds = (x - translateX > WIDTH) || (x - translateX < 0);\n          // if the current frame is based on changes from the preivous one, merge them by XORing their values\n          this._layers[0][dest] = srcOutOfBounds ? this._layers[0][dest] : this._layers[0][dest] ^ this._prevLayers[0][src];\n          this._layers[1][dest] = srcOutOfBounds ? this._layers[1][dest] : this._layers[1][dest] ^ this._prevLayers[1][src];\n        }\n      }\n    }\n    return this._layers;\n  }\n\n  /**\n  * Decode an audio track to 32-bit adpcm\n  * @param {string} track - track name, \"bgm\" | \"se1\" | \"se2\" | \"se3\"\n  * @returns {Float32Array}\n  */\n  decodeAudio(track) {\n    this._seekToAudio(track);\n    var buffer = new Uint8Array(this.soundMeta[track].length).map(value => {\n      return this.readUint8();\n    });\n    return decodeAdpcm(buffer);\n  }\n\n  /**\n  * Decode the sound effect usage for each frame\n  * @returns {array}\n  */\n  decodeSoundFlags() {\n    this.seek(0x06A0 + this._frameDataLength);\n    // per msdn docs - the array map callback is only invoked for array indicies that have assigned values\n    // so when we create an array, we need to fill it with something before we can map over it\n    var arr = new Array(this.frameCount).fill([]);\n    return arr.map(value => {\n      var byte = this.readUint8();\n      return [byte & 0x1, (byte >> 1) & 0x1, (byte >> 2) & 0x1];\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./decoder/index.js","/** file reader serves as a wrapper around the DataView API to help keep track of the offset into the file */\nexport default class fileReader {\n  /**\n  * Create a fileReader instance\n  * @param {ArrayBuffer} arrayBuffer - data to read from\n  */\n  constructor(arrayBuffer) {\n    this._data = new DataView(arrayBuffer);\n    this._offset = 0;\n  }\n\n  /**\n  * Get the length of the file\n  * @returns {number}\n  */\n  get fileLength() {\n    return this._data.byteLength;\n  }\n\n  /**\n  * based on the seek method from Python's file objects - https://www.tutorialspoint.com/python/file_seek.htm\n  * @param {number} offset - position of the read pointer within the file\n  * @param {number} whence - (optional) defaults to absolute file positioning,\n  *                          1 = offset is relative to the current position\n  *                          2 = offset is relative to the file's end\n  */\n  seek(offset, whence) {\n    switch (whence) {\n      case 2:\n        this._offset = this._data.byteLength + offset;\n        break;\n      case 1:\n        this._offset += offset;\n        break;\n      case 0:\n      default:\n        this._offset = offset;\n        break;\n    }\n  }\n\n  /**\n  * Read an unsigned 8-bit integer from the file, and automatically increment the offset\n  * @returns {number}\n  */\n  readUint8() {\n    var val = this._data.getUint8(this._offset);\n    this._offset += 1;\n    return val;\n  }\n\n  /**\n  * Read a signed 8-bit integer from the file, and automatically increment the offset\n  * @returns {number}\n  */\n  readInt8() {\n    var val = this._data.getInt8(this._offset);\n    this._offset += 1;\n    return val;\n  }\n\n  /**\n  * Read an unsigned 16-bit integer from the file, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readUint16(littleEndian=true) {\n    var val = this._data.getUint16(this._offset, littleEndian);\n    this._offset += 2;\n    return val;\n  }\n\n  /**\n  * Read a signed 16-bit integer from the file, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readInt16(littleEndian=true) {\n    var val = this._data.getInt16(this._offset, littleEndian);\n    this._offset += 2;\n    return val;\n  }\n\n  /**\n  * Read an unsigned 32-bit integer from the file, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readUint32(littleEndian=true) {\n    var val = this._data.getUint32(this._offset, littleEndian);\n    this._offset += 4;\n    return val;\n  }\n\n  /**\n  * Read a signed 32-bit integer from the file, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readInt32(littleEndian=true) {\n    var val = this._data.getInt32(this._offset, littleEndian);\n    this._offset += 4;\n    return val;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./decoder/fileReader.js","/** convert 4-bit adpcm to float32 pcm (as supported by the AudioBuffer API) \n *  implementation based on http://www.cs.columbia.edu/~gskc/Code/AdvancedInternetServices/SoundNoiseRatio/dvi_adpcm.c\n*/\n\nconst indexTable = [\n  -1, -1, -1, -1, 2, 4, 6, 8,\n  -1, -1, -1, -1, 2, 4, 6, 8\n];\n\nconst stepSizeTable = [\n  7, 8, 9, 10, 11, 12, 13, 14, 16, 17,\n  19, 21, 23, 25, 28, 31, 34, 37, 41, 45,\n  50, 55, 60, 66, 73, 80, 88, 97, 107, 118,\n  130, 143, 157, 173, 190, 209, 230, 253, 279, 307,\n  337, 371, 408, 449, 494, 544, 598, 658, 724, 796,\n  876, 963, 1060, 1166, 1282, 1411, 1552, 1707, 1878, 2066,\n  2272, 2499, 2749, 3024, 3327, 3660, 4026, 4428, 4871, 5358,\n  5894, 6484, 7132, 7845, 8630, 9493, 10442, 11487, 12635, 13899,\n  15289, 16818, 18500, 20350, 22385, 24623, 27086, 29794, 32767\n];\n\nlet statePrevSample = 0,\n    statePrevIndex = 0;\n\n/**\n* Convert 4-bit adpcm to 32-bit pcm\n* @param {Uint8Array} inputBuffer - adpcm buffer\n* @returns {Float32Array}\n*/\nexport function decodeAdpcm(inputBuffer) {\n  statePrevSample = 0;\n  statePrevIndex = 0;\n  var outputBuffer = new Float32Array(inputBuffer.length * 2);\n  var outputOffset = 0;\n  for (var inputOffset = 0; inputOffset < inputBuffer.length; inputOffset++) {\n    var byte = inputBuffer[inputOffset];\n    // note - Flipnote Studio's adpcm data uses reverse nibble order\n    outputBuffer[outputOffset] = decodeSample(byte & 0xF);\n    outputBuffer[outputOffset + 1] = decodeSample((byte >> 4) & 0xF);\n    outputOffset += 2;\n  }\n  return outputBuffer;\n};\n\n/**\n* Unpack a single adpcm 4-bit sample\n* @param {number} sample - sample value\n* @returns {number}\n* @access protected\n*/\nfunction decodeSample(sample) {\n  var predSample = statePrevSample;\n  var index = statePrevIndex;\n  var step = stepSizeTable[index];\n  var difference = step >> 3;\n\n  // compute difference and new predicted value\n  if (sample & 0x4) difference += step;\n  if (sample & 0x2) difference += (step >> 1);\n  if (sample & 0x1) difference += (step >> 2);\n  // handle sign bit\n  predSample += (sample & 0x8) ? -difference : difference;\n\n  // find new index value\n  index += indexTable[sample];\n  index = clamp(index, 0, 88);\n\n  // clamp output value\n  predSample = clamp(predSample, -32767, 32767);\n  statePrevSample = predSample;\n  statePrevIndex = index;\n  // return a value between -1.0 and 1.0, since that's what's used by JavaScript's AudioBuffer API\n  return predSample / 32768;\n};\n\n/**\n* Util to clamp a number within a given range\n* @param {number} num - input value\n* @param {number} min - minimun value\n* @param {number} max - maximum value\n* @returns {number}\n* @access protected\n*/\nfunction clamp(num, min, max) {\n  return num <= min ? min : num >= max ? max : num;\n};\n\n\n// WEBPACK FOOTER //\n// ./decoder/adpcm.js","// Wrapper around JavaScript's audio API since it's a bit of a pain to deal with\nexport default class audioTrack {\n  /**\n  * Create a new audio player\n  * @param {Float32Array} audioData - mono-channel floating 32-bit PCM audio\n  */\n  constructor (audioData) {\n    var ctx = new AudioContext();\n    var audioBuffer = ctx.createBuffer(1, audioData.length, 8192);\n    var channel = audioBuffer.copyToChannel(audioData, 0);\n    this.audioBuffer = audioBuffer;\n    this.source = null;\n    this.paused = true;\n    this.ctx = ctx;\n    this.playbackRate = 1;\n  }\n\n  /**\n  * Start audio playback\n  * @param {number} offset - offset to begin playback at\n  */\n  start(offset) {\n    this.source = this.ctx.createBufferSource();\n    this.source.buffer = this.audioBuffer;\n    this.source.connect(this.ctx.destination);\n    this.source.onended = e => {\n      this.paused = true;\n    };\n    this.source.playbackRate.value = this.playbackRate;\n    this.source.start(0, offset);\n    this.paused = false;\n  }\n\n  /**\n  * Stop audio playback\n  */\n  stop() {\n    if (this.source) this.source.stop();\n    this.source = null;\n    this.paused = true;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./player/audio.js"],"sourceRoot":""}