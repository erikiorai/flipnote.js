{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 120ac78f2dc5c62ccc78","webpack:///./webgl/canvas.js","webpack:///./flipnote.js","webpack:///./player/index.js","webpack:///./webgl/captureCanvas.js","webpack:///./decoder/index.js","webpack:///./decoder/fileReader.js","webpack:///./decoder/adpcm.js","webpack:///./loader/index.js","webpack:///./loader/urlLoader.js","webpack:///./loader/fileLoader.js","webpack:///./loader/arrayBufferLoader.js","webpack:///./player/audio.js"],"names":["webglCanvas","el","width","height","params","gl","getContext","antialias","program","createProgram","refs","shaders","textures","buffers","vShader","_createShader","VERTEX_SHADER","fShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","Error","getProgramInfoLog","deleteProgram","useProgram","vertBuffer","createBuffer","push","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","_createTexture","TEXTURE0","TEXTURE1","setFilter","setLayerVisibilty","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","name","index","texture","uniform1i","getUniformLocation","activeTexture","tex","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","filter","LINEAR","NEAREST","map","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","layerIndex","flag","color","value","uniform4f","colors","setColor","texImage2D","ALPHA","UNSIGNED_BYTE","viewport","drawArrays","TRIANGLES","clear","COLOR_BUFFER_BIT","forEach","deleteTexture","buffer","deleteBuffer","canvas","module","exports","version","player","FRAMERATES","ppmPlayer","document","querySelector","_imgCanvas","_isOpen","_events","loop","currentFrame","paused","audioTracks","ppm","meta","frameCount","frameSpeed","fileLength","soundMeta","se1","length","set","decodeAudio","se2","se3","bgm","_audiorate","_seFlags","decodeSoundFlags","_playbackLoop","_hasPlaybackStarted","setFrame","thumbFrameIndex","emit","close","then","_load","catch","err","console","error","pause","_frame","i","unset","destroy","flags","active","start","currentTime","stop","_playBgm","setInterval","clearInterval","_stopAudio","firstFrame","nextFrame","framerate","encoderOptions","setSize","Math","max","min","setPalette","getFramePalette","setBitmaps","decodeFrame","refresh","toImage","getFrameImage","floor","_playbackFrameTime","resize","eventType","callback","events","callbackList","splice","indexOf","args","apply","duration","round","audio","volume","muted","bgmSpeed","captureCanvas","createElement","preserveDrawingBuffer","toDataURL","WIDTH","HEIGHT","BLACK","WHITE","BLUE","RED","ppmDecoder","arrayBuffer","seek","_frameDataLength","readUint32","_soundDataLength","readUint16","offsetTableLength","_frameOffsets","Uint32Array","_decodeSoundHeader","_decodeMeta","_layers","Uint8Array","_prevLayers","_prevFrameIndex","track","offset","str","terminated","char","String","fromCharCode","reverse","ret","readUint8","toString","padStart","join","toUpperCase","_readHex","unpacked","byteOffset","byte","bitOffset","lock","thumbIndex","readInt16","rootAuthorName","_readUtf16","parentAuthorName","currentAuthorName","parentAuthorId","currentAuthorId","parentFilename","_readFilename","currentFilename","rootAuthorId","timestamp","Date","frame_count","frame_speed","bgm_speed","thumb_index","spinoff","root","username","fsid","parent","filename","current","bgmLen","se1Len","se2Len","se3Len","_seekToFrame","header","backTrack","isNew","_isFrameNew","paperColor","pen","decodePrev","isNewFrame","isTranslated","translateX","translateY","_decodePrevFrames","fill","readInt8","layerEncoding","_readLineEncoding","layer","layerBitmap","line","chunkOffset","lineType","lineHeader","chunk","pixel","dest","src","y","x","_seekToAudio","arr","Array","test","fileReader","_data","DataView","_offset","whence","byteLength","val","getUint8","getInt8","littleEndian","getUint16","getInt16","getUint32","getInt32","decodeAdpcm","indexTable","stepSizeTable","statePrevSample","statePrevIndex","inputBuffer","outputBuffer","Int16Array","outputOffset","inputOffset","decodeSample","sample","predSample","step","difference","clamp","num","load","loaders","Promise","resolve","reject","loader","matches","xhr","XMLHttpRequest","open","responseType","onreadystatechange","e","readyState","status","response","statusText","send","File","reader","FileReader","onload","event","target","result","onerror","readAsArrayBuffer","ArrayBuffer","audioTrack","id","channelCount","bitsPerSample","sampleRate","playbackRate","preload","pcmData","setUint32","setUint16","url","window","URL","createObjectURL","Blob","revokeObjectURL","play"],"mappings":"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","file":"flipnote.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flipnote\"] = factory();\n\telse\n\t\troot[\"flipnote\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 120ac78f2dc5c62ccc78","import vertexShader from \"./vertexShader.glsl.js\";\nimport fragmentShader from \"./fragmentShader.glsl.js\";\n\n/** webgl canvas wrapper class */\nexport default class webglCanvas {\n  /**\n  * Create a rendering canvas\n  * @param {HTMLCanvasElement} el - The HTML canvas element\n  * @param {number} width - width of the canvas in pixels\n  * @param {number} height - height of the canvas in pixels\n  * @param {Object} params - optional params to pass to web gl context\n  */\n  constructor(el, width, height, params) {\n    el.width = width || 256;\n    el.height = height || 192; \n    var gl = el.getContext(\"webgl\", params || {antialias: false});\n    var program = gl.createProgram();\n    this.program = program;\n    this.el = el;\n    this.gl = gl;\n    this.refs = {\n      shaders:[],\n      textures:[],\n      buffers: []\n    };\n    // set up shaders\n    var vShader = this._createShader(gl.VERTEX_SHADER, vertexShader);\n    var fShader = this._createShader(gl.FRAGMENT_SHADER, fragmentShader);\n    gl.attachShader(program, vShader);\n    gl.attachShader(program, fShader);\n    // link program\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(gl.getProgramInfoLog(program));\n      gl.deleteProgram(program);\n      return null;\n    }\n    // activate the program\n    gl.useProgram(program);\n    // create quad that fills the screen, this will be our drawing surface\n    var vertBuffer = gl.createBuffer();\n    this.refs.buffers.push(vertBuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1,  1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n    // create textures for each layer\n    this._createTexture(\"u_layer1Bitmap\", 0, gl.TEXTURE0);\n    this._createTexture(\"u_layer2Bitmap\", 1, gl.TEXTURE1);\n    this.setFilter();\n    this.setLayerVisibilty(1, true);\n    this.setLayerVisibilty(2, true);\n  }\n\n  /**\n  * Util to compile and attach a new shader\n  * @param {shader type} type - gl.VERTEX_SHADER | gl.FRAGMENT_SHADER\n  * @param {string} source - GLSL code for the shader\n  * @returns {shader} compiled webgl shader\n  * @access protected \n  */\n  _createShader(type, source) {\n    var gl = this.gl;\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    // test if shader compilation was successful\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw new Error(gl.getShaderInfoLog(shader));\n      gl.deleteShader(shader);\n      return null;\n    }\n    this.refs.shaders.push(shader);\n    return shader;\n  }\n\n  /**\n  * Util to set up a texture\n  * @param {string} name - name of the texture's uniform variable\n  * @param {number} index - texture index\n  * @param {texture} texture - webgl texture unit, gl.TEXTURE0, gl.TEXTURE1, etc\n  * @access protected \n  */\n  _createTexture(name, index, texture) {\n    var gl = this.gl;\n    gl.uniform1i(gl.getUniformLocation(this.program, name), index);\n    gl.activeTexture(texture);\n    var tex = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, tex);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    this.refs.textures.push(tex);\n  }\n\n  /**\n  * Set the texture filter\n  * @param {string} filter - \"linear\" | \"nearest\"\n  */\n  setFilter(filter) {\n    var gl = this.gl;\n    filter = filter == \"linear\" ? gl.LINEAR : gl.NEAREST;\n    [gl.TEXTURE0, gl.TEXTURE1].map(function (texture) {\n      gl.activeTexture(texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n    });\n  }\n\n  /**\n  * Set layer visibility\n  * @param {number} layerIndex - 1 or 2\n  * @param {number} flag - 1 - show, 0 = hide\n  */\n  setLayerVisibilty(layerIndex, flag) {\n    this.gl.uniform1i(this.gl.getUniformLocation(this.program, \"u_layer\" + layerIndex + \"Visibility\"), flag);\n  }\n\n  /**\n  * Set an palette individual color\n  * @param {string} color - name of the color's uniform variable\n  * @param {array} value - r,g,b,a color, each channel's value should be between 0.0 and 1.0\n  */\n  setColor(color, value) {\n    this.gl.uniform4f(this.gl.getUniformLocation(this.program, color), value[0]/255, value[1]/255, value[2]/255, value[3]/255);\n  }\n\n  /**\n  * Set the palette\n  * @param {array} colors - array of r,g,b,a colors with channel values from 0.0 to 1.0, in order of paper, layer1, layer2\n  */\n  setPalette(colors) {\n    this.setColor(\"u_paperColor\", colors[0]);\n    this.setColor(\"u_layer1Color\", colors[1]);\n    this.setColor(\"u_layer2Color\", colors[2]);\n  }\n\n  /**\n  * Set layer bitmaps\n  * @param {array} buffers - array of two uint8 buffers, one for each layer\n  */\n  setBitmaps(buffers) {\n    var gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, 256, 192, 0, gl.ALPHA, gl.UNSIGNED_BYTE, buffers[0]);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, 256, 192, 0, gl.ALPHA, gl.UNSIGNED_BYTE, buffers[1]);\n  }\n\n  /**\n  * Resize canvas\n  * @param {number} width - width of the canvas in pixels\n  * @param {number} height - height of the canvas in pixels\n  */\n  resize(width=256, height=192) {\n    this.el.width = width;\n    this.el.height = height; \n    this.gl.viewport(0, 0, width, height);\n  }\n\n  /**\n  * Redraw canvas\n  */\n  refresh() {\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n  }\n\n  /**\n  * Clear canvas\n  */\n  clear() {\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n  }\n\n  /** \n  * Destroy this canvas instance\n  */\n  destroy() {\n    // free resources\n    var refs = this.refs;\n    var gl = this.gl;\n    refs.shaders.forEach((shader) => {\n      gl.deleteShader(shader);\n    });\n    refs.shaders = [];\n    refs.textures.forEach((texture) => {\n      gl.deleteTexture(texture);\n    });\n    refs.textures = [];\n    refs.buffers.forEach((buffer) => {\n      gl.deleteBuffer(buffer);\n    });\n    refs.buffers = [];\n    gl.deleteProgram(this.program);\n    // shrink the canvas to reduce memory usage until its garbage collected\n    gl.canvas.width = 1;\n    gl.canvas.height = 1;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./webgl/canvas.js","import ppmPlayer from \"./player\";\n// import decoder from \"./decoder\";\n\nmodule.exports = {\n  version: VERSION,\n  player: ppmPlayer,\n  // decoder: decoder,\n};\n\n\n// WEBPACK FOOTER //\n// ./flipnote.js","import canvas from \"webgl/canvas\";\nimport captureCanvas from \"webgl/captureCanvas\";\nimport ppmDecoder from \"decoder\";\nimport loader from \"loader\";\nimport audioTrack from \"./audio\";\n\n// internal framerate value -> FPS table\nconst FRAMERATES = {\n  1: 0.5,\n  2: 1,\n  3: 2,\n  4: 4,\n  5: 6,\n  6: 12,\n  7: 20,\n  8: 30,\n};\n\n/** flipnote player API, based on HTMLMediaElement (https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement) */ \nexport default class ppmPlayer {\n  /**\n  * Create new flipnote player\n  * @param {string | HTMLCanvasElement} el - HTML Canvas Element to use, or CSS selector for one\n  * @param {number} width - canvas width in pixels\n  * @param {number} height - canvas height in pixels\n  */\n  constructor(el, width, height) {\n    // if `el` is a string, use it to select an Element, else assume it's an element\n    el = (\"string\" == typeof el) ? document.querySelector(el) : el;\n    this.canvas = new canvas(el, width, height);\n    this._imgCanvas = new captureCanvas();\n    this._isOpen = false;\n    this._events = {};\n    this.loop = false;\n    this.currentFrame = 0;\n    this.paused = true;\n    this.audioTracks = [\n      new audioTrack(\"se1\"),\n      new audioTrack(\"se2\"),\n      new audioTrack(\"se3\"),\n      new audioTrack(\"bgm\"),\n    ];\n  }\n\n  /**\n  * Get the index of the current frame \n  */\n  get currentFrame() {\n    return this._frame;\n  }\n\n  /**\n  * Set the current frame\n  */\n  set currentFrame(index) {\n    this.setFrame(index);\n  }\n\n  /**\n  * Get current playback time in seconds\n  */\n  get currentTime() {\n    return this._isOpen ? this.currentFrame * (1 / this.framerate) : null;\n  }\n\n  /**\n  * Set current playback time in seconds\n  */\n  set currentTime(value) {\n    if ((this._isOpen) && (value < this.duration) && (value > 0)) {\n      this.setFrame(Math.round(value / (1 / this.framerate)));\n    }\n  }\n\n  /**\n  * Get audio volume\n  */\n  get volume() {\n    return this.audioTracks[3].audio.volume;\n  }\n\n  /**\n  * Set audio volume\n  */\n  set volume(value) {\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].audio.volume = value;\n    }\n  }\n\n  /**\n  * Get audio mute\n  */\n  get muted() {\n    return this.audioTracks[3].audio.muted;\n  }\n\n  /**\n  * Set audio mute\n  */\n  set muted(value) {\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].audio.muted = value;\n    }\n  }\n\n  /**\n  * Get the duration of the Flipnote in seconds\n  */\n  get duration() {\n    return this._isOpen ? this.frameCount * (1 / this.framerate) : null;\n  }\n\n  /**\n  * Get the Flipnote framerate in frames-per-second\n  */\n  get framerate() {\n    return FRAMERATES[this.frameSpeed];\n  }\n\n  /**\n  * Get the audio playback rate by comparing audio and frame speeds\n  * @access protected\n  */\n  get _audiorate() {\n    return (1 / FRAMERATES[this.ppm.bgmSpeed]) / (1 / FRAMERATES[this.frameSpeed]);\n  }\n\n  /**\n  * Load a Flipnote into the player\n  * @param {ArrayBuffer} buffer - ppm data\n  * @access protected\n  */\n  _load(buffer) {\n    var ppm = new ppmDecoder(buffer);\n    var meta = ppm.meta;\n    this.ppm = ppm;\n    this.meta = meta;\n    this.frameCount = ppm.frameCount;\n    this.frameSpeed = ppm.frameSpeed;\n    this.fileLength = ppm.fileLength;\n    this.loop = meta.loop == 1;\n    this.paused = true;\n    this._isOpen = true;\n    if (ppm.soundMeta.se1.length) this.audioTracks[0].set(this.ppm.decodeAudio(\"se1\"), 1);\n    if (ppm.soundMeta.se2.length) this.audioTracks[1].set(this.ppm.decodeAudio(\"se2\"), 1);\n    if (ppm.soundMeta.se3.length) this.audioTracks[2].set(this.ppm.decodeAudio(\"se3\"), 1);\n    if (ppm.soundMeta.bgm.length) this.audioTracks[3].set(this.ppm.decodeAudio(\"bgm\"), this._audiorate);\n    this._seFlags = this.ppm.decodeSoundFlags();\n    this._playbackLoop = null;\n    this._hasPlaybackStarted = false;\n    this.setFrame(this.ppm.thumbFrameIndex);\n    this.emit(\"load\");\n  }\n\n  /**\n  * Load a Flipnote into the player\n  * @param {String} source - ppm url\n  */\n  open(source) {\n    if (this._isOpen) this.close();\n    return loader(source)\n      .then((buffer) => {\n        this._load(buffer);\n      })\n      .catch((err) => {\n        console.error(\"Error loading Flipnote:\", err);\n      });\n  }\n\n  /**\n  * Close the currently loaded Flipnote and clear the player canvas\n  */\n  close() {\n    this.pause();\n    this.ppm = null;\n    this._isOpen = false;\n    this.paused = true;\n    this.loop = null;\n    this.meta = null;\n    this.frameCount = null;\n    this.frameSpeed = null;\n    this._frame = 0;\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].unset();\n    }\n    this._seFlags = null;\n    this._hasPlaybackStarted = null;\n    this.canvas.clear();\n    this._imgCanvas.clear();\n  }\n\n  /**\n  * Destroy this player instance cleanly\n  */\n  destroy() {\n    this.close();\n    this.canvas.destroy();\n    this._imgCanvas.destroy();\n  }\n\n  /**\n  * Play the sound effects for a given frame\n  * @param {number} index - zero-based frame index\n  * @access protected\n  */\n  _playFrameSe(index) {\n    var flags = this._seFlags[index];\n    for (let i = 0; i < flags.length; i++) {\n      if (flags[i] && this.audioTracks[i].active) this.audioTracks[i].start();\n    }\n  }\n\n  /**\n  * Play the Flipnote BGM\n  * @access protected\n  */\n  _playBgm() {\n    this.audioTracks[3].start(this.currentTime);\n  }\n\n  /**\n  * Stop all audio tracks\n  * @access protected\n  */\n  _stopAudio() {\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].stop();\n    }\n  }\n\n  /**\n  * Begin Flipnote playback\n  */\n  play() {\n    if ((!this._isOpen) || (!this.paused)) return null;\n    this.paused = false;\n    if ((!this._hasPlaybackStarted) || ((!this.loop) && (this.currentFrame == this.frameCount - 1))) this._frame = 0;\n    this._playBgm();\n    this._playbackLoop = setInterval(() => {\n      if (this.paused) clearInterval(this._playbackLoop);\n      // if the end of the flipnote has been reached\n      if (this.currentFrame >= this.frameCount -1) {\n        this._stopAudio();\n        if (this.loop) {\n          this.firstFrame();\n          this._playBgm(0);\n          this.emit(\"playback:loop\");\n        } else {\n          this.pause();\n          this.emit(\"playback:end\");\n        }\n      } else {\n        this.nextFrame();\n      }\n    }, 1000 / this.framerate);\n    this._hasPlaybackStarted = true;\n    this.emit(\"playback:start\");\n  }\n\n  /**\n  * Pause Flipnote playback\n  */\n  pause() {\n    if ((!this._isOpen) || (this.paused)) return null;\n    // break the playback loop\n    clearInterval(this._playbackLoop);\n    this.paused = true;\n    this._stopAudio();\n    this.emit(\"playback:stop\");\n  }\n\n  /**\n  * Get a specific frame as an image data URL\n  * @param {number} index - zero-based frame index\n  * @param {string} type - image MIME type, default is image/png\n  * @param {number} encoderOptions - number between 0 and 1 indicating image quality if type is image/jpeg or image/webp\n  */\n  getFrameImage(index, width, height, type, encoderOptions) {\n    if (!this._isOpen) return null;\n    var canvas = this._imgCanvas;\n    if (canvas.width !== width || canvas.height !== height) canvas.setSize(width, height);\n    // clamp frame index\n    index = Math.max(0, Math.min(index, this.frameCount - 1));\n    canvas.setPalette(this.ppm.getFramePalette(index));\n    canvas.setBitmaps(this.ppm.decodeFrame(index));\n    canvas.refresh();\n    return canvas.toImage(type, encoderOptions);\n  }\n\n  /**\n  * Get a Flipnote thumbnail as an image data URL\n  * @param {string} type - image MIME type, default is image/png\n  * @param {number} encoderOptions - number between 0 and 1 indicating image quality if type is image/jpeg or image/webp\n  */\n  getThumbImage(width, height, type, encoderOptions) {\n    return this.getFrameImage(this.ppm.thumbFrameIndex, width, height, type, encoderOptions);\n  }\n\n  /**\n  * Jump to a specific frame\n  * @param {number} index - zero-based frame index\n  */\n  setFrame(index) {\n    if ((!this._isOpen) || (index === this.currentFrame)) return null;\n    // clamp frame index\n    index = Math.max(0, Math.min(Math.floor(index), this.frameCount - 1));\n    this._frame = index;\n    this._playbackFrameTime = 0;\n    this.canvas.setPalette(this.ppm.getFramePalette(index));\n    this.canvas.setBitmaps(this.ppm.decodeFrame(index));\n    this.canvas.refresh();\n    this.emit(\"frame:update\", this.currentFrame);\n  }\n\n  /**\n  * Jump to the thumbnail frame\n  */\n  thumbnailFrame() {\n    this.currentFrame = this.ppm.thumbFrameIndex;\n  }\n\n  /**\n  * Jump to the next frame in the animation\n  */\n  nextFrame() {\n    if ((this.loop) && (this.currentFrame >= this.frameCount -1)) {\n      this.currentFrame = 0;\n    } else {\n      this.currentFrame += 1;\n    }\n  }\n\n  /**\n  * Jump to the previous frame in the animation\n  */\n  prevFrame() {\n    if ((this.loop) && (this.currentFrame <= 0)) {\n      this.currentFrame = this.frameCount - 1;\n    } else {\n      this.currentFrame -= 1;\n    }\n  }\n\n  /**\n  * Jump to the last frame in the animation\n  */\n  lastFrame() {\n    this.currentFrame = this.frameCount - 1;\n  }\n\n  /**\n  * Jump to the first frame in the animation\n  */\n  firstFrame() {\n    this.currentFrame = 0;\n  }\n\n  /**\n  * Resize player canvas\n  * @param {number} width - canvas width in pixels\n  * @param {number} height - canvas height in pixels\n  */\n  resize(width, height) {\n    this.canvas.resize(width, height);\n  }\n\n  /**\n  * Register an event callback\n  * @param {string} eventType - event type\n  * @param {function} callback - event callback function\n  */\n  on(eventType, callback) {\n    var events = this._events;\n    (events[eventType] || (events[eventType] = [])).push(callback);\n  }\n\n  /**\n  * Remove an event callback\n  * @param {string} eventType - event type\n  * @param {function} callback - event callback function\n  */\n  off(eventType, callback) {\n    var callbackList = this._events[eventType];\n    if (callbackList) callbackList.splice(callbackList.indexOf(callback), 1);\n  }\n\n  /**\n  * Emit an event (used internally)\n  * @param {string} eventType - event type\n  * @param {...} args - arguments to be passed to event callback\n  */\n  emit(eventType, ...args) {\n    var callbackList = this._events[eventType] || [];\n    for (var i = 0; i < callbackList.length; i++) {\n      callbackList[i].apply(null, args); \n    }\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./player/index.js","import canvas from \"./canvas\";\n\n/** \n * offscreen webgl canvas for capturing frame images\n * this is kept seperate since preserveDrawingBuffer makes drawing slightly slower\n */\nexport default class captureCanvas extends canvas {\n  constructor() {\n    super(document.createElement(\"canvas\"), 256, 192, {\n      antialias: true,\n      preserveDrawingBuffer: true,\n    });\n    this.setFilter(\"linear\");\n    this.width = 256;\n    this.height = 256;\n  }\n\n  /**\n  * set the image size\n  * @param {number} width - image width in pixels \n  * @param {number} height - image height in pixels \n  */\n  setSize(width, height) {\n    this.resize(width, height);\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n  * get the canvas content as an image\n  * @param {string} type - image MIME type, default is image/png\n  * @param {number} encoderOptions - number between 0 and 1 indicating image quality if type is image/jpeg or image/webp\n  */\n  toImage(type, encoderOptions) {\n    return this.el.toDataURL(type, encoderOptions);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./webgl/captureCanvas.js","/**\n * PPM decoder\n * Reads frames, audio, and metadata from Flipnote Studio PPM files \n * Based on my Python PPM decoder implementation (https://github.com/jaames/flipnote-tools)\n *  \n * Credits:\n *  PPM format reverse-engineering and documentation:\n *   - bricklife (http://ugomemo.g.hatena.ne.jp/bricklife/20090307/1236391313)\n *   - mirai-iro (http://mirai-iro.hatenablog.jp/entry/20090116/ugomemo_ppm)\n *   - harimau_tigris (http://ugomemo.g.hatena.ne.jp/harimau_tigris)\n *   - steven (http://www.dsibrew.org/wiki/User:Steven)\n *   - yellows8 (http://www.dsibrew.org/wiki/User:Yellows8)\n *   - PBSDS (https://github.com/pbsds)\n *   - jaames (https://github.com/jaames)\n *  Identifying the PPM sound codec:\n *   - Midmad from Hatena Haiku\n *   - WDLMaster from hcs64.com\n *  Helping me to identify issues with the Python decoder that this is based on:\n *   - Austin Burk (https://sudomemo.net)\n * \n *  Lastly, a huge thanks goes to Nintendo for creating Flipnote Studio, \n *  and to Hatena for providing the Flipnote Hatena online service, both of which inspired so many c:\n*/\n\nimport fileReader from \"./fileReader\";\nimport {decodeAdpcm} from \"./adpcm\";\n\nconst WIDTH = 256;\nconst HEIGHT = 192;\nconst BLACK = [14, 14, 14, 255];\nconst WHITE = [255, 255, 255, 255];\nconst BLUE = [10, 57, 255, 255];\nconst RED = [255, 42, 42, 255];\n\nexport default class ppmDecoder extends fileReader {\n  /**\n  * Create a ppmDecoder instance\n  * @param {ArrayBuffer} arrayBuffer - data to read from\n  */\n  constructor(arrayBuffer) {\n    super(arrayBuffer);\n    this.seek(4);\n    // decode header\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#file-header\n    this._frameDataLength = this.readUint32();\n    this._soundDataLength = this.readUint32();\n    this.frameCount = Math.min(this.readUint16() + 1, 999);\n    this.seek(18);\n    this.thumbFrameIndex = this.readUint16();\n    // jump to the start of the animation data section\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#animation-data-section\n    this.seek(0x06A0);\n    var offsetTableLength = this.readUint16();\n    // skip padding + flags\n    this.seek(0x06A8);\n    // read frame offsets and build them into a table\n    this._frameOffsets = new Uint32Array(offsetTableLength / 4).map(value => {\n      return 0x06A8 + offsetTableLength + this.readUint32();\n    });\n    this._decodeSoundHeader();\n    this.meta = this._decodeMeta();\n    // create image buffers\n     this._layers = [\n      new Uint8Array(WIDTH * HEIGHT),\n      new Uint8Array(WIDTH * HEIGHT)\n    ];\n    this._prevLayers = [\n      new Uint8Array(WIDTH * HEIGHT),\n      new Uint8Array(WIDTH * HEIGHT)\n    ];\n    this._prevFrameIndex = 0;\n  }\n\n  static validateFSID(fsid) {\n    return /[0159]{1}[0-9A-F]{6}0[0-9A-F]{8}/.test(fsid);\n  }\n\n  static validateFilename(filename) {\n    return /[0-9A-F]{6}_[0-9A-F]{13}_[0-9]{3}/.test(filename);\n  }\n  \n  /**\n  * Seek the buffer position to the start of a given frame\n  * @param {number} index - zero-based frame index to jump to\n  * @access protected\n  */\n  _seekToFrame(index) {\n    this.seek(this._frameOffsets[index]);\n  }\n\n  /**\n  * Seek the buffer position to the start of a given audio track\n  * @param {string} track - track name, \"bgm\" | \"se1\" | \"se2\" | \"se3\"\n  * @access protected\n  */\n  _seekToAudio(track) {\n    this.seek(this.soundMeta[track].offset);\n  }\n\n  /**\n  * Read an UTF-16 little-endian string (for usernames)\n  * @param {number} length - max length of the string in bytes (including padding)\n  * @returns {string}\n  * @access protected\n  */\n  _readUtf16(length) {\n    var str = \"\";\n    var terminated = false;\n    for (var i = 0; i < length / 2; i++) {\n      var char = this.readUint16();\n      // utf16 stings in flipnotes are terminated with null bytes (0x00) \n      if ((terminated) || (char == 0)) { \n        terminated = true;\n        continue;\n      }\n      str += String.fromCharCode(char);\n    }\n    return str;\n  }\n\n  /**\n  * Read a hex string (for FSIDs and filenames)\n  * @param {number} length - max length of the string in bytes\n  * @param {boolean} reverse - defaults to false, if true, the string will be read in reverse byte order\n  * @returns {string}\n  * @access protected\n  */\n  _readHex(length, reverse=false) {\n    var ret = [];\n    for (var i = 0; i < length; i++) {\n      ret.push(this.readUint8().toString(16).padStart(2, \"0\"));\n    }\n    if (reverse) ret.reverse();\n    return ret.join(\"\").toUpperCase();\n  }\n\n  /**\n  * Read a HEX string \n  * @returns {string}\n  * @access protected\n  */\n  _readFilename() {\n    var str = \"\";\n    // filename starts with 3 hex bytes\n    str += this._readHex(3) + \"_\";\n    // then 13 byte utf8 string\n    for (var i = 0; i < 13; i++) {\n      str += String.fromCharCode(this.readUint8());\n    }\n    str += \"_\";\n    // then 2-byte edit count padded to 3 chars\n    str += this.readUint16().toString().padStart(3, \"0\");\n    return str;\n  }\n\n  /**\n  * Unpack the line encoding flags for all 192 lines in a layer\n  * @returns {array}\n  * @access protected\n  */\n  _readLineEncoding() {\n    var unpacked = new Uint8Array(HEIGHT);\n    for (var byteOffset = 0; byteOffset < 48; byteOffset ++) {\n      var byte = this.readUint8();\n      // each line's encoding type is stored as a 2-bit value\n      for (var bitOffset = 0; bitOffset < 8; bitOffset += 2) {\n        unpacked[byteOffset * 4 + bitOffset / 2] = (byte >> bitOffset) & 0x03;\n      }\n    }\n    return unpacked;\n  }\n\n  /**\n  * Decode the main PPM metadata, like username, timestamp, etc\n  * @returns {object}\n  * @access protected\n  */\n  _decodeMeta() {\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#file-header\n    this.seek(0x10);\n    var lock = this.readUint16(),\n        thumbIndex = this.readInt16(),\n        rootAuthorName = this._readUtf16(22),\n        parentAuthorName = this._readUtf16(22),\n        currentAuthorName = this._readUtf16(22),\n        parentAuthorId = this._readHex(8, true),\n        currentAuthorId = this._readHex(8, true),\n        parentFilename = this._readFilename(),\n        currentFilename = this._readFilename(),\n        rootAuthorId = this._readHex(8, true);\n    this.seek(0x9A);\n    var timestamp = new Date((this.readUint32() + 946684800) * 1000);\n    this.seek(0x06A6);\n    var flags = this.readUint16();\n    return {\n      lock: lock,\n      loop: flags >> 1 & 0x01,\n      frame_count: this.frameCount,\n      frame_speed: this.frameSpeed,\n      bgm_speed: this.bgmSpeed,\n      thumb_index: thumbIndex,\n      timestamp: timestamp,\n      spinoff: (currentAuthorId !== parentAuthorId) || (currentAuthorId !== rootAuthorId),\n      root: {\n        username: rootAuthorName,\n        fsid: rootAuthorId,\n      },\n      parent: {\n        username: parentAuthorName,\n        fsid: parentAuthorId,\n        filename: parentFilename\n      },\n      current: {\n        username: currentAuthorName,\n        fsid: currentAuthorId,\n        filename: currentFilename\n      },\n    };\n  }\n\n  /**\n  * Decode the sound header to get audio track lengths and frame/bgm sppeds\n  * @access protected\n  */\n  _decodeSoundHeader() {\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#sound-data-section\n    // offset = frame data offset + frame data length + sound effect flags\n    var offset = 0x06A0 + this._frameDataLength + this.frameCount;\n    // account for multiple-of-4 padding\n    if (offset % 4 != 0) offset += 4 - (offset % 4);\n    this.seek(offset);\n    var bgmLen = this.readUint32();\n    var se1Len = this.readUint32();\n    var se2Len = this.readUint32();\n    var se3Len = this.readUint32();\n    this.frameSpeed = 8 - this.readUint8();\n    this.bgmSpeed = 8 - this.readUint8();\n    offset += 32;\n    this.soundMeta = {\n      \"bgm\": {offset: offset,           length: bgmLen},\n      \"se1\": {offset: offset += bgmLen, length: se1Len},\n      \"se2\": {offset: offset += se1Len, length: se2Len},\n      \"se3\": {offset: offset += se2Len, length: se3Len},\n    };\n  }\n\n  /**\n  * Check whether or not a given frame is based on the previous one\n  * @param {number} index - zero-based frame index \n  * @returns {boolean}\n  */\n  _isFrameNew(index) {\n    this._seekToFrame(index);\n    var header = this.readUint8();\n    return (header >> 7) & 0x1;\n  }\n\n  /**\n  * Helper to decode necessary previous frames if the current frame is difference-based\n  * @param {number} index - zero-based frame index \n  */\n  _decodePrevFrames(index) {\n    var backTrack = 0;\n    var isNew = 0;\n    while (!isNew) {\n      backTrack += 1;\n      isNew = this._isFrameNew(index - backTrack);\n    }\n    backTrack = index - backTrack;\n    while (backTrack < index) {\n      this.decodeFrame(backTrack, false);\n      backTrack += 1;\n    }\n    // jump back to where we were and skip flag byte\n    this._seekToFrame(index);\n    this.seek(1, 1);\n  }\n\n  /**\n  * Get the color palette for a given frame\n  * @param {number} index - zero-based frame index \n  * @returns {array} rgba palette in order of paper, layer1, layer2\n  */\n  getFramePalette(index) {\n    this._seekToFrame(index);\n    var header = this.readUint8();\n    var paperColor = header & 0x1;\n    var pen = [\n      null,\n      paperColor == 1 ? BLACK : WHITE,\n      RED,\n      BLUE,\n    ];\n    return [\n      paperColor == 1 ? WHITE : BLACK,\n      pen[(header >> 1) & 0x3], // layer 1 color\n      pen[(header >> 3) & 0x3], // layer 2 color\n    ];\n  }\n\n  /**\n  * Decode a frame\n  * @param {number} index - zero-based frame index \n  * @param {boolean} decodePrev - defaults to true, set to false to not bother decoding previous frames\n  */\n  decodeFrame(index, decodePrev=true) {\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#animation-frame\n    this._seekToFrame(index);\n    var header = this.readUint8();\n    var isNewFrame = (header >> 7) & 0x1;\n    var isTranslated = (header >> 5) & 0x3;\n    var translateX = 0;\n    var translateY = 0;\n\n    if ((decodePrev) && (!isNewFrame) && (index !== this._prevFrameIndex + 1)) {\n      this._decodePrevFrames(index);\n    }\n    // copy the current layer buffers to the previous ones\n    this._prevLayers[0].set(this._layers[0]);\n    this._prevLayers[1].set(this._layers[1]);\n    this._prevFrameIndex = index;\n    // reset current layer buffers\n    this._layers[0].fill(0);\n    this._layers[1].fill(0);\n\n    if (isTranslated) {\n      translateX = this.readInt8();\n      translateY = this.readInt8();\n    }\n\n    var layerEncoding = [\n      this._readLineEncoding(),\n      this._readLineEncoding()\n    ];\n     // start decoding layer bitmaps\n    for (var layer = 0; layer < 2; layer++) {\n      var layerBitmap = this._layers[layer];\n      for (var line = 0; line < HEIGHT; line++) {\n        var chunkOffset = line * WIDTH;\n        var lineType = layerEncoding[layer][line];\n        switch(lineType) {\n          // line type 0 = blank line, decode nothing\n          case 0:\n            break;\n          // line types 1 + 2 = compressed bitmap line\n          case 1:\n          case 2:\n            var lineHeader = this.readUint32(false);\n            // line type 2 starts as an inverted line\n            if (lineType == 2) layerBitmap.fill(1, chunkOffset, chunkOffset + WIDTH);\n            // loop through each bit in the line header\n            while (lineHeader & 0xFFFFFFFF) {\n              // if the bit is set, this 8-pix wide chunk is stored\n              // else we can just leave it blank and move on to the next chunk\n              if (lineHeader & 0x80000000) {\n                var chunk = this.readUint8();\n                // unpack chunk bits\n                for (var pixel = 0; pixel < 8; pixel++) {\n                  layerBitmap[chunkOffset + pixel] = chunk >> pixel & 0x1;\n                }\n              }\n              chunkOffset += 8;\n              // shift lineheader to the left by 1 bit, now on the next loop cycle the next bit will be checked\n              lineHeader <<= 1;\n            }\n            break;\n          // line type 3 = raw bitmap line\n          case 3:\n            while(chunkOffset < (line + 1) * WIDTH) {\n              var chunk = this.readUint8();\n              for (var pixel = 0; pixel < 8; pixel++) {\n                layerBitmap[chunkOffset + pixel] = chunk >> pixel & 0x1;\n              }\n              chunkOffset += 8;\n            }\n            break;\n        }\n      }\n    }\n    // if the current frame is based on changes from the preivous one, merge them by XORing their values\n    if (!isNewFrame) {\n      var dest, src;\n      for (var y = 0; y < HEIGHT; y++) {\n        for (var x = 0; x < WIDTH; x++) {\n          dest = x + y * WIDTH;\n          src = dest - (translateX + translateY * WIDTH);\n          if (!((x - translateX > WIDTH) || (x - translateX < 0))) {\n            this._layers[0][dest] ^= this._prevLayers[0][src];\n            this._layers[1][dest] ^= this._prevLayers[1][src];\n          }\n        }\n      }\n    }\n    return this._layers;\n  }\n\n  /**\n  * Decode an audio track to 32-bit adpcm\n  * @param {string} track - track name, \"bgm\" | \"se1\" | \"se2\" | \"se3\"\n  * @returns {Int16Array}\n  */\n  decodeAudio(track) {\n    this._seekToAudio(track);\n    var buffer = new Uint8Array(this.soundMeta[track].length).map(value => {\n      return this.readUint8();\n    });\n    return decodeAdpcm(buffer);\n  }\n\n  /**\n  * Decode the sound effect usage for each frame\n  * @returns {array}\n  */\n  decodeSoundFlags() {\n    this.seek(0x06A0 + this._frameDataLength);\n    // per msdn docs - the array map callback is only invoked for array indicies that have assigned values\n    // so when we create an array, we need to fill it with something before we can map over it\n    var arr = new Array(this.frameCount).fill([]);\n    return arr.map(value => {\n      var byte = this.readUint8();\n      return [byte & 0x1, (byte >> 1) & 0x1, (byte >> 2) & 0x1];\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./decoder/index.js","/** file reader serves as a wrapper around the DataView API to help keep track of the offset into the file */\nexport default class fileReader {\n  /**\n  * Create a fileReader instance\n  * @param {ArrayBuffer} arrayBuffer - data to read from\n  */\n  constructor(arrayBuffer) {\n    this._data = new DataView(arrayBuffer);\n    this._offset = 0;\n  }\n\n  /**\n  * Get the length of the file\n  * @returns {number}\n  */\n  get fileLength() {\n    return this._data.byteLength;\n  }\n\n  /**\n  * based on the seek method from Python's file objects - https://www.tutorialspoint.com/python/file_seek.htm\n  * @param {number} offset - position of the read pointer within the file\n  * @param {number} whence - (optional) defaults to absolute file positioning,\n  *                          1 = offset is relative to the current position\n  *                          2 = offset is relative to the file's end\n  */\n  seek(offset, whence) {\n    switch (whence) {\n      case 2:\n        this._offset = this._data.byteLength + offset;\n        break;\n      case 1:\n        this._offset += offset;\n        break;\n      case 0:\n      default:\n        this._offset = offset;\n        break;\n    }\n  }\n\n  /**\n  * Read an unsigned 8-bit integer from the file, and automatically increment the offset\n  * @returns {number}\n  */\n  readUint8() {\n    var val = this._data.getUint8(this._offset);\n    this._offset += 1;\n    return val;\n  }\n\n  /**\n  * Read a signed 8-bit integer from the file, and automatically increment the offset\n  * @returns {number}\n  */\n  readInt8() {\n    var val = this._data.getInt8(this._offset);\n    this._offset += 1;\n    return val;\n  }\n\n  /**\n  * Read an unsigned 16-bit integer from the file, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readUint16(littleEndian=true) {\n    var val = this._data.getUint16(this._offset, littleEndian);\n    this._offset += 2;\n    return val;\n  }\n\n  /**\n  * Read a signed 16-bit integer from the file, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readInt16(littleEndian=true) {\n    var val = this._data.getInt16(this._offset, littleEndian);\n    this._offset += 2;\n    return val;\n  }\n\n  /**\n  * Read an unsigned 32-bit integer from the file, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readUint32(littleEndian=true) {\n    var val = this._data.getUint32(this._offset, littleEndian);\n    this._offset += 4;\n    return val;\n  }\n\n  /**\n  * Read a signed 32-bit integer from the file, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readInt32(littleEndian=true) {\n    var val = this._data.getInt32(this._offset, littleEndian);\n    this._offset += 4;\n    return val;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./decoder/fileReader.js","/** convert 4-bit adpcm to 16-bit pcm\n *  implementation based on http://www.cs.columbia.edu/~gskc/Code/AdvancedInternetServices/SoundNoiseRatio/dvi_adpcm.c\n*/\n\nconst indexTable = [\n  -1, -1, -1, -1, 2, 4, 6, 8,\n  -1, -1, -1, -1, 2, 4, 6, 8\n];\n\nconst stepSizeTable = [\n  7, 8, 9, 10, 11, 12, 13, 14, 16, 17,\n  19, 21, 23, 25, 28, 31, 34, 37, 41, 45,\n  50, 55, 60, 66, 73, 80, 88, 97, 107, 118,\n  130, 143, 157, 173, 190, 209, 230, 253, 279, 307,\n  337, 371, 408, 449, 494, 544, 598, 658, 724, 796,\n  876, 963, 1060, 1166, 1282, 1411, 1552, 1707, 1878, 2066,\n  2272, 2499, 2749, 3024, 3327, 3660, 4026, 4428, 4871, 5358,\n  5894, 6484, 7132, 7845, 8630, 9493, 10442, 11487, 12635, 13899,\n  15289, 16818, 18500, 20350, 22385, 24623, 27086, 29794, 32767\n];\n\nlet statePrevSample = 0,\n    statePrevIndex = 0;\n\n/**\n* Convert 4-bit adpcm to 16-bit pcm\n* @param {Uint8Array} inputBuffer - adpcm buffer\n* @returns {Int16Array}\n*/\nexport function decodeAdpcm(inputBuffer) {\n  statePrevSample = 0;\n  statePrevIndex = 0;\n  var outputBuffer = new Int16Array(inputBuffer.length * 2);\n  var outputOffset = 0;\n  for (var inputOffset = 0; inputOffset < inputBuffer.length; inputOffset++) {\n    var byte = inputBuffer[inputOffset];\n    // note - Flipnote Studio's adpcm data uses reverse nibble order\n    outputBuffer[outputOffset] = decodeSample(byte & 0xF);\n    outputBuffer[outputOffset + 1] = decodeSample((byte >> 4) & 0xF);\n    outputOffset += 2;\n  }\n  return outputBuffer;\n};\n\n/**\n* Unpack a single adpcm 4-bit sample\n* @param {number} sample - sample value\n* @returns {number}\n* @access protected\n*/\nfunction decodeSample(sample) {\n  var predSample = statePrevSample;\n  var index = statePrevIndex;\n  var step = stepSizeTable[index];\n  var difference = step >> 3;\n\n  // compute difference and new predicted value\n  if (sample & 0x4) difference += step;\n  if (sample & 0x2) difference += (step >> 1);\n  if (sample & 0x1) difference += (step >> 2);\n  // handle sign bit\n  predSample += (sample & 0x8) ? -difference : difference;\n\n  // find new index value\n  index += indexTable[sample];\n  index = clamp(index, 0, 88);\n\n  // clamp output value\n  predSample = clamp(predSample, -32767, 32767);\n  statePrevSample = predSample;\n  statePrevIndex = index;\n  return predSample;\n};\n\n/**\n* Util to clamp a number within a given range\n* @param {number} num - input value\n* @param {number} min - minimun value\n* @param {number} max - maximum value\n* @returns {number}\n* @access protected\n*/\nfunction clamp(num, min, max) {\n  return num <= min ? min : num >= max ? max : num;\n};\n\n\n// WEBPACK FOOTER //\n// ./decoder/adpcm.js","import urlLoader from \"./urlLoader\";\nimport fileLoader from \"./fileLoader\";\nimport arrayBufferLoader from \"./arrayBufferLoader\";\n\nconst loaders = [\n  urlLoader,\n  fileLoader,\n  arrayBufferLoader\n];\n\nexport default function load(source) {\n  return new Promise(function (resolve, reject) {\n    for (var i = 0; i < loaders.length; i++) {\n      var loader = loaders[i];\n      if (loader.matches(source)) {\n        loader.load(source, resolve, reject);\n        break;\n      }\n    }\n  });\n}\n\n\n// WEBPACK FOOTER //\n// ./loader/index.js","export default {\n\n  matches: function(source) {\n    return typeof source === \"string\";\n  },\n\n  load: function(source, resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", source, true);\n    xhr.responseType = \"arraybuffer\"; \n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4) {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          resolve(xhr.response);\n        } else {\n          reject({\n            type: \"httpError\",\n            status: xhr.status,\n            statusText: xhr.statusText\n          });\n        }\n      }\n    };\n    xhr.send(null);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./loader/urlLoader.js","export default {\n\n  matches: function(source) {\n    return (source instanceof File);\n  },\n\n  load: function(source, resolve, reject) {\n    var reader = new FileReader();\n    reader.onload = (event) => {\n      resolve(event.target.result)\n    };\n    reader.onerror = (event) => {\n      reject({type: \"fileReadError\"});\n    };\n    reader.readAsArrayBuffer(source);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./loader/fileLoader.js","export default {\n\n  matches: function(source) {\n    return (source instanceof ArrayBuffer);\n  },\n\n  load: function(source, resolve, reject) {\n    resolve(source);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./loader/arrayBufferLoader.js","export default class audioTrack {\n  /**\n  * Create a new audio player\n  */\n  constructor (id) {\n    this.id = id;\n    this.channelCount = 1;\n    this.bitsPerSample = 16;\n    this.sampleRate = 8192;\n    this.playbackRate = 1;\n    this.audio = document.createElement(\"audio\");\n    this.audio.preload = true;\n    this.active = false;\n  }\n\n  /**\n  * Set the audio track\n  * @param {Int16Array} pcmData - mono-channel 16-bit PCM audio\n  * @param {number} playbackRate - audio playback rate (1 = default)\n  */\n  set(pcmData, playbackRate) {\n    // the HTML5 audio element supports PCM audio if it's in a WAV wrapper\n    // to do this we write a WAV header and prepend it to the raw PCM data\n    // WAV header reference: http://www.topherlee.com/software/pcm-tut-wavformat.html\n    var header = new DataView(new ArrayBuffer(44));\n    // \"RIFF\" indent\n    header.setUint32(0, 1179011410, true);\n    // filesize\n    header.setUint32(4, header.byteLength + pcmData.byteLength, true);\n    // \"WAVE\" indent\n    header.setUint32(8, 1163280727, true);\n    // \"fmt \" section header\n    header.setUint32(12, 544501094, true);\n    // fmt section length\n    header.setUint32(16, 16, true);\n    // specify audio format is pcm (type 1)\n    header.setUint16(20, 1, true);\n    // number of audio channels\n    header.setUint16(22, this.channelCount, true);\n    // audio sample rate\n    header.setUint32(24, this.sampleRate * playbackRate, true);\n    // byterate = (sampleRate * bitsPerSample * channelCount) / 8\n    header.setUint32(28, ((this.sampleRate * playbackRate) * this.bitsPerSample * this.channelCount) / 8, true);\n    // blockalign = (bitsPerSample * channels) / 8\n    header.setUint16(32, (this.bitsPerSample * this.channelCount) / 8, true);\n    // bits per sample\n    header.setUint16(34, this.bitsPerSample, true);\n    // \"data\" section header\n    header.setUint32(36, 1635017060, true);\n    // data section length\n    header.setUint32(40, pcmData.byteLength, true);\n    // create blob from joining the wav header and pcm data\n    this.url = window.URL.createObjectURL(new Blob([header.buffer, pcmData.buffer], {type: \"audio/wav\"}));\n    // use the blob url for the audio element\n    this.audio.src = this.url;\n    this.active = true;\n    this.playbackRate = playbackRate;\n    this.length = pcmData.length;\n  }\n\n  get duration() {\n    return this.audio.duration;\n  }\n\n  /**\n  * Clear the audio track\n  */\n  unset() {\n    if (this.active) {\n      window.URL.revokeObjectURL(this.url);\n      this.audio.src = \"\";\n      this.audio.load();\n      this.active = false;\n      this.playbackRate = 1;\n      this.length = null;\n    }\n  }\n\n  /**\n  * Start audio playback\n  * @param {number} offset - offset to begin playback at\n  */\n  start(offset) {\n    if (this.active) {\n      this.audio.currentTime = offset || 0;\n      this.audio.play();\n    }\n  }\n\n  /**\n  * Stop audio playback\n  */\n  stop() {\n    if (this.active) {\n      this.audio.pause();\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./player/audio.js"],"sourceRoot":""}